Namespace Transactions
	Namespace Transaction837

		Partial Friend Class Standard_Obj
			Inherits TransactionSet
			Implements Standard, Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet, Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet, Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet
			Friend Sub New(versionCode As String)
				Me.New(String.Empty, versionCode)
			End Sub

			Friend Sub New(controlNumber As String, versionCode As String)
				MyBase.New("HC", versionCode)

				Children.AddRange({New Dom.Segments.ST_Obj,
												CType(Nothing, Dom.Segments.BHT_Obj),
												New SegmentContainer(Of Dom.Segments.REF)(3, 1, 150),
												New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop1000)(10, 1, 200),
												New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2000)(0, 2, 10),
												New Dom.Segments.SE_Obj})

				ST_Obj.ST01 = "837"
				ST_Obj.ST02 = controlNumber
				ST_Obj.ST03 = VersionCode

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "ST", ReadAction.PopulateSegment, 1, False),
								New ReaderState(1, "BHT", ReadAction.PopulateSegment, 2, False),
								New ReaderState(2, "REF", ReadAction.PopulateSegment, 3, False),
								New ReaderState(3, "REF", ReadAction.PopulateSegment, 3, False),
								New ReaderState(2, "NM1", ReadAction.PopulateLoop, 5, False),
								New ReaderState(3, "NM1", ReadAction.PopulateLoop, 5, False),
								New ReaderState(5, "NM1", ReadAction.PopulateLoop, 5, False),
								New ReaderState(2, "HL", ReadAction.PopulateLoop, 7, False),
								New ReaderState(3, "HL", ReadAction.PopulateLoop, 7, False),
								New ReaderState(5, "HL", ReadAction.PopulateLoop, 7, False),
								New ReaderState(7, "HL", ReadAction.PopulateLoop, 7, False),
								New ReaderState(7, "SE", ReadAction.PopulateSegment, 9, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "ST", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.ST_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					ST_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.ST_Obj)
					If MyBase.CompareKey(S2.ST01, ";837;") AndAlso String.Compare(args.Implementation, "_837Q1", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 6480
					ElseIf MyBase.CompareKey(S2.ST01, ";837;") AndAlso String.Compare(args.Implementation, "_837Q2", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 6480
					ElseIf MyBase.CompareKey(S2.ST01, ";837;") AndAlso String.Compare(args.Implementation, "_837Q3", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 6480
					End If
				ElseIf String.Compare(segmentName, "BHT", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.BHT_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					BHT_Obj = Seg
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "SE", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SE_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SE_Obj = Seg
				End If
			End Sub

			Private Async Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				If String.Compare(args.DataSegment.SegmentID, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop1000_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop1000_Obj.Add(NewLoop)
					If MyBase.CompareKey(LoopKey, ";41;") AndAlso String.Compare(args.Implementation, "_837Q1", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__1000A"
						NewLoop.SetArea = 1
						NewLoop.SetSequence = 72
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";40;") AndAlso String.Compare(args.Implementation, "_837Q1", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__1000B"
						NewLoop.SetArea = 1
						NewLoop.SetSequence = 180
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";41;") AndAlso String.Compare(args.Implementation, "_837Q2", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__1000A"
						NewLoop.SetArea = 1
						NewLoop.SetSequence = 72
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";40;") AndAlso String.Compare(args.Implementation, "_837Q2", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__1000B"
						NewLoop.SetArea = 1
						NewLoop.SetSequence = 180
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";41;") AndAlso String.Compare(args.Implementation, "_837Q3", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__1000A"
						NewLoop.SetArea = 1
						NewLoop.SetSequence = 72
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";40;") AndAlso String.Compare(args.Implementation, "_837Q3", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__1000B"
						NewLoop.SetArea = 1
						NewLoop.SetSequence = 180
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				ElseIf String.Compare(args.DataSegment.SegmentID, "HL", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2000_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(2)
					Loop2000_Obj.Add(NewLoop)
					If MyBase.CompareKey(LoopKey, ";20;") AndAlso String.Compare(args.Implementation, "_837Q1", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000A"
						NewLoop.SetArea = 2
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";22;") AndAlso String.Compare(args.Implementation, "_837Q1", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B"
						NewLoop.SetArea = 4
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";23;") AndAlso String.Compare(args.Implementation, "_837Q1", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000C"
						NewLoop.SetArea = 8
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";20;") AndAlso String.Compare(args.Implementation, "_837Q2", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000A"
						NewLoop.SetArea = 2
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";22;") AndAlso String.Compare(args.Implementation, "_837Q2", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B"
						NewLoop.SetArea = 4
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";23;") AndAlso String.Compare(args.Implementation, "_837Q2", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000C"
						NewLoop.SetArea = 8
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";20;") AndAlso String.Compare(args.Implementation, "_837Q3", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000A"
						NewLoop.SetArea = 2
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";22;") AndAlso String.Compare(args.Implementation, "_837Q3", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B"
						NewLoop.SetArea = 4
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";23;") AndAlso String.Compare(args.Implementation, "_837Q3", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000C"
						NewLoop.SetArea = 8
						NewLoop.SetSequence = 1296
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				End If
				args.Implementation = Temp
			End Function
			Friend Property ST_Obj As Dom.Segments.ST_Obj
				Get
					Return CType(Children(0), Dom.Segments.ST_Obj)
				End Get
				Set(value As Dom.Segments.ST_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property ST_Std As Dom.Segments.ST Implements Dom.Transactions.Transaction837.Standard.ST
				Get
					Return CType(Children(0), Dom.Segments.ST_Obj)
				End Get
				Set(value As Dom.Segments.ST)
					Children(0) = value
				End Set
			End Property

			Private Property ST_IFace_Transaction837_Q1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.ST Implements Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet.ST
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.ST)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.ST)
					Children(0) = value
				End Set
			End Property
			Private Property ST_IFace_1_Transaction837_Q2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.ST Implements Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet.ST
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.ST)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.ST)
					Children(0) = value
				End Set
			End Property
			Private Property ST_IFace_2_Transaction837_Q3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.ST Implements Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet.ST
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.ST)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.ST)
					Children(0) = value
				End Set
			End Property
			Friend Property BHT_Obj As Dom.Segments.BHT_Obj
				Get
					Return CType(Children(1), Dom.Segments.BHT_Obj)
				End Get
				Set(value As Dom.Segments.BHT_Obj)
					Children(1) = value
				End Set
			End Property

			Private Property BHT_Std As Dom.Segments.BHT Implements Dom.Transactions.Transaction837.Standard.BHT
				Get
					Return CType(Children(1), Dom.Segments.BHT_Obj)
				End Get
				Set(value As Dom.Segments.BHT)
					Children(1) = value
				End Set
			End Property

			Private Property BHT_IFace_Transaction837_Q1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.BHT Implements Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet.BHT
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.BHT)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.BHT)
					Children(1) = value
				End Set
			End Property
			Private Property BHT_IFace_1_Transaction837_Q2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.BHT Implements Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet.BHT
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.BHT)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.BHT)
					Children(1) = value
				End Set
			End Property
			Private Property BHT_IFace_2_Transaction837_Q3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.BHT Implements Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet.BHT
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.BHT)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.BHT)
					Children(1) = value
				End Set
			End Property
			Friend ReadOnly Property REF_Obj As SegmentContainer(Of Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Standard.REF
				Get
					Return CType(Children(2), SegmentContainer(Of Dom.Segments.REF))
				End Get
			End Property

			Friend ReadOnly Property Loop1000_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop1000) Implements Dom.Transactions.Transaction837.Standard.Loop1000
				Get
					Return CType(Children(3), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop1000))
				End Get
			End Property

			Private Loop1000ASubset_Transaction837_Q1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)
			Private Property Loop1000A_IFace_Transaction837_Q1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A Implements Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet.Loop1000A
				Get
					If Loop1000ASubset_Transaction837_Q1 Is Nothing Then
						Loop1000ASubset_Transaction837_Q1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 72)
					End If

					If Loop1000ASubset_Transaction837_Q1.Count > 0 Then
						Return Loop1000ASubset_Transaction837_Q1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A)
					If Loop1000ASubset_Transaction837_Q1 Is Nothing Then
						Loop1000ASubset_Transaction837_Q1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 72)
					End If

					If Loop1000ASubset_Transaction837_Q1.Count = 0 Then
						Loop1000ASubset_Transaction837_Q1.Add(value)
					Else
						Loop1000ASubset_Transaction837_Q1(0) = value
					End If
				End Set
			End Property
			Private Loop1000BSubset_Transaction837_Q1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)
			Private Property Loop1000B_IFace_Transaction837_Q1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000B Implements Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet.Loop1000B
				Get
					If Loop1000BSubset_Transaction837_Q1 Is Nothing Then
						Loop1000BSubset_Transaction837_Q1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 180)
					End If

					If Loop1000BSubset_Transaction837_Q1.Count > 0 Then
						Return Loop1000BSubset_Transaction837_Q1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000B)
					If Loop1000BSubset_Transaction837_Q1 Is Nothing Then
						Loop1000BSubset_Transaction837_Q1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 180)
					End If

					If Loop1000BSubset_Transaction837_Q1.Count = 0 Then
						Loop1000BSubset_Transaction837_Q1.Add(value)
					Else
						Loop1000BSubset_Transaction837_Q1(0) = value
					End If
				End Set
			End Property
			Private Loop1000ASubset_Transaction837_Q2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)
			Private Property Loop1000A_IFace_1_Transaction837_Q2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A Implements Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet.Loop1000A
				Get
					If Loop1000ASubset_Transaction837_Q2 Is Nothing Then
						Loop1000ASubset_Transaction837_Q2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 72)
					End If

					If Loop1000ASubset_Transaction837_Q2.Count > 0 Then
						Return Loop1000ASubset_Transaction837_Q2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A)
					If Loop1000ASubset_Transaction837_Q2 Is Nothing Then
						Loop1000ASubset_Transaction837_Q2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 72)
					End If

					If Loop1000ASubset_Transaction837_Q2.Count = 0 Then
						Loop1000ASubset_Transaction837_Q2.Add(value)
					Else
						Loop1000ASubset_Transaction837_Q2(0) = value
					End If
				End Set
			End Property
			Private Loop1000BSubset_Transaction837_Q2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)
			Private Property Loop1000B_IFace_1_Transaction837_Q2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000B Implements Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet.Loop1000B
				Get
					If Loop1000BSubset_Transaction837_Q2 Is Nothing Then
						Loop1000BSubset_Transaction837_Q2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 180)
					End If

					If Loop1000BSubset_Transaction837_Q2.Count > 0 Then
						Return Loop1000BSubset_Transaction837_Q2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000B)
					If Loop1000BSubset_Transaction837_Q2 Is Nothing Then
						Loop1000BSubset_Transaction837_Q2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 180)
					End If

					If Loop1000BSubset_Transaction837_Q2.Count = 0 Then
						Loop1000BSubset_Transaction837_Q2.Add(value)
					Else
						Loop1000BSubset_Transaction837_Q2(0) = value
					End If
				End Set
			End Property
			Private Loop1000ASubset_Transaction837_Q3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)
			Private Property Loop1000A_IFace_2_Transaction837_Q3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A Implements Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet.Loop1000A
				Get
					If Loop1000ASubset_Transaction837_Q3 Is Nothing Then
						Loop1000ASubset_Transaction837_Q3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 72)
					End If

					If Loop1000ASubset_Transaction837_Q3.Count > 0 Then
						Return Loop1000ASubset_Transaction837_Q3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A)
					If Loop1000ASubset_Transaction837_Q3 Is Nothing Then
						Loop1000ASubset_Transaction837_Q3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 72)
					End If

					If Loop1000ASubset_Transaction837_Q3.Count = 0 Then
						Loop1000ASubset_Transaction837_Q3.Add(value)
					Else
						Loop1000ASubset_Transaction837_Q3(0) = value
					End If
				End Set
			End Property
			Private Loop1000BSubset_Transaction837_Q3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)
			Private Property Loop1000B_IFace_2_Transaction837_Q3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000B Implements Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet.Loop1000B
				Get
					If Loop1000BSubset_Transaction837_Q3 Is Nothing Then
						Loop1000BSubset_Transaction837_Q3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 180)
					End If

					If Loop1000BSubset_Transaction837_Q3.Count > 0 Then
						Return Loop1000BSubset_Transaction837_Q3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000B)
					If Loop1000BSubset_Transaction837_Q3 Is Nothing Then
						Loop1000BSubset_Transaction837_Q3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000B, Dom.Transactions.Transaction837.Loops.Loop1000)(Children(3), 1, 1, 180)
					End If

					If Loop1000BSubset_Transaction837_Q3.Count = 0 Then
						Loop1000BSubset_Transaction837_Q3.Add(value)
					Else
						Loop1000BSubset_Transaction837_Q3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property Loop2000_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Standard.Loop2000
				Get
					Return CType(Children(4), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2000))
				End Get
			End Property

			Private Loop2000ASubset_Transaction837_Q1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000A_Obj_Transaction837_Q1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet.Loop2000A
				Get
					If Loop2000ASubset_Transaction837_Q1 Is Nothing Then
						Loop2000ASubset_Transaction837_Q1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 2, 1296)
					End If

					Return Loop2000ASubset_Transaction837_Q1
				End Get
			End Property
			Private Loop2000BSubset_Transaction837_Q1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000B_Obj_Transaction837_Q1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet.Loop2000B
				Get
					If Loop2000BSubset_Transaction837_Q1 Is Nothing Then
						Loop2000BSubset_Transaction837_Q1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 4, 1296)
					End If

					Return Loop2000BSubset_Transaction837_Q1
				End Get
			End Property
			Private Loop2000CSubset_Transaction837_Q1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000C_Obj_Transaction837_Q1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet.Loop2000C
				Get
					If Loop2000CSubset_Transaction837_Q1 Is Nothing Then
						Loop2000CSubset_Transaction837_Q1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 8, 1296)
					End If

					Return Loop2000CSubset_Transaction837_Q1
				End Get
			End Property
			Private Loop2000ASubset_Transaction837_Q2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000A_Obj_1_Transaction837_Q2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet.Loop2000A
				Get
					If Loop2000ASubset_Transaction837_Q2 Is Nothing Then
						Loop2000ASubset_Transaction837_Q2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 2, 1296)
					End If

					Return Loop2000ASubset_Transaction837_Q2
				End Get
			End Property
			Private Loop2000BSubset_Transaction837_Q2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000B_Obj_1_Transaction837_Q2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet.Loop2000B
				Get
					If Loop2000BSubset_Transaction837_Q2 Is Nothing Then
						Loop2000BSubset_Transaction837_Q2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 4, 1296)
					End If

					Return Loop2000BSubset_Transaction837_Q2
				End Get
			End Property
			Private Loop2000CSubset_Transaction837_Q2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000C_Obj_1_Transaction837_Q2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet.Loop2000C
				Get
					If Loop2000CSubset_Transaction837_Q2 Is Nothing Then
						Loop2000CSubset_Transaction837_Q2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 8, 1296)
					End If

					Return Loop2000CSubset_Transaction837_Q2
				End Get
			End Property
			Private Loop2000ASubset_Transaction837_Q3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000A_Obj_2_Transaction837_Q3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet.Loop2000A
				Get
					If Loop2000ASubset_Transaction837_Q3 Is Nothing Then
						Loop2000ASubset_Transaction837_Q3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 2, 1296)
					End If

					Return Loop2000ASubset_Transaction837_Q3
				End Get
			End Property
			Private Loop2000BSubset_Transaction837_Q3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000B_Obj_2_Transaction837_Q3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet.Loop2000B
				Get
					If Loop2000BSubset_Transaction837_Q3 Is Nothing Then
						Loop2000BSubset_Transaction837_Q3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 4, 1296)
					End If

					Return Loop2000BSubset_Transaction837_Q3
				End Get
			End Property
			Private Loop2000CSubset_Transaction837_Q3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)
			Private ReadOnly Property Loop2000C_Obj_2_Transaction837_Q3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000) Implements Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet.Loop2000C
				Get
					If Loop2000CSubset_Transaction837_Q3 Is Nothing Then
						Loop2000CSubset_Transaction837_Q3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)(Children(4), 0, 8, 1296)
					End If

					Return Loop2000CSubset_Transaction837_Q3
				End Get
			End Property
			Friend Property SE_Obj As Dom.Segments.SE_Obj
				Get
					Return CType(Children(5), Dom.Segments.SE_Obj)
				End Get
				Set(value As Dom.Segments.SE_Obj)
					Children(5) = value
				End Set
			End Property

			Private Property SE_Std As Dom.Segments.SE Implements Dom.Transactions.Transaction837.Standard.SE
				Get
					Return CType(Children(5), Dom.Segments.SE_Obj)
				End Get
				Set(value As Dom.Segments.SE)
					Children(5) = value
				End Set
			End Property

			Private Property SE_IFace_Transaction837_Q1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.SE Implements Dom.Transactions.Transaction837.Transaction837_Q1.TransactionSet.SE
				Get
					Return CType(Children(5), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.SE)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.SE)
					Children(5) = value
				End Set
			End Property
			Private Property SE_IFace_1_Transaction837_Q2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.SE Implements Dom.Transactions.Transaction837.Transaction837_Q2.TransactionSet.SE
				Get
					Return CType(Children(5), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.SE)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.SE)
					Children(5) = value
				End Set
			End Property
			Private Property SE_IFace_2_Transaction837_Q3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.SE Implements Dom.Transactions.Transaction837.Transaction837_Q3.TransactionSet.SE
				Get
					Return CType(Children(5), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.SE)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.SE)
					Children(5) = value
				End Set
			End Property
		End Class

		Partial Friend Class Loop1000_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop1000,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000B,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000B,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000B
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.NM1_Obj),
													New SegmentContainer(Of Dom.Segments.N2)(2, 1, 250),
													New SegmentContainer(Of Dom.Segments.N3)(2, 1, 300),
													CType(Nothing, Dom.Segments.N4_Obj),
													New SegmentContainer(Of Dom.Segments.REF)(2, 1, 400),
													New SegmentContainer(Of Dom.Segments.PER)(2, 1, 450)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "NM1", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "N2", ReadAction.PopulateSegment, 2, False),
									New ReaderState(2, "N2", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(2, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(4, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(1, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(2, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(4, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(1, "REF", ReadAction.PopulateSegment, 7, False),
									New ReaderState(2, "REF", ReadAction.PopulateSegment, 7, False),
									New ReaderState(4, "REF", ReadAction.PopulateSegment, 7, False),
									New ReaderState(6, "REF", ReadAction.PopulateSegment, 7, False),
									New ReaderState(7, "REF", ReadAction.PopulateSegment, 7, False),
									New ReaderState(1, "PER", ReadAction.PopulateSegment, 9, False),
									New ReaderState(2, "PER", ReadAction.PopulateSegment, 9, False),
									New ReaderState(4, "PER", ReadAction.PopulateSegment, 9, False),
									New ReaderState(6, "PER", ReadAction.PopulateSegment, 9, False),
									New ReaderState(7, "PER", ReadAction.PopulateSegment, 9, False),
									New ReaderState(9, "PER", ReadAction.PopulateSegment, 9, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.NM1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					NM1_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.NM1_Obj)
					If MyBase.CompareKey(S2.NM101, ";41;") AndAlso String.Compare(args.Implementation, "_837Q1__1000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 72
					ElseIf MyBase.CompareKey(S2.NM101, ";40;") AndAlso String.Compare(args.Implementation, "_837Q1__1000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 180
					ElseIf MyBase.CompareKey(S2.NM101, ";41;") AndAlso String.Compare(args.Implementation, "_837Q2__1000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 72
					ElseIf MyBase.CompareKey(S2.NM101, ";40;") AndAlso String.Compare(args.Implementation, "_837Q2__1000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 180
					ElseIf MyBase.CompareKey(S2.NM101, ";41;") AndAlso String.Compare(args.Implementation, "_837Q3__1000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 72
					ElseIf MyBase.CompareKey(S2.NM101, ";40;") AndAlso String.Compare(args.Implementation, "_837Q3__1000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 1
						Seg.SetSequence = 180
					End If
				ElseIf String.Compare(segmentName, "N2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N2_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N3_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "PER", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PER_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PER_Obj.Add(Seg)
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property NM1_Obj As Dom.Segments.NM1_Obj
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_Std As Dom.Segments.NM1 Implements Dom.Transactions.Transaction837.Loops.Loop1000.NM1
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_IFace_Loop1000A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_1_Loop1000B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_2_Loop1000A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_3_Loop1000B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_4_Loop1000A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_5_Loop1000B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000B.NM1)
					Children(0) = value
				End Set
			End Property
			Friend ReadOnly Property N2_Obj As SegmentContainer(Of Dom.Segments.N2) Implements Dom.Transactions.Transaction837.Loops.Loop1000.N2
				Get
					Return CType(Children(1), SegmentContainer(Of Dom.Segments.N2))
				End Get
			End Property

			Friend ReadOnly Property N3_Obj As SegmentContainer(Of Dom.Segments.N3) Implements Dom.Transactions.Transaction837.Loops.Loop1000.N3
				Get
					Return CType(Children(2), SegmentContainer(Of Dom.Segments.N3))
				End Get
			End Property

			Friend Property N4_Obj As Dom.Segments.N4_Obj
				Get
					Return CType(Children(3), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4_Obj)
					Children(3) = value
				End Set
			End Property

			Private Property N4_Std As Dom.Segments.N4 Implements Dom.Transactions.Transaction837.Loops.Loop1000.N4
				Get
					Return CType(Children(3), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4)
					Children(3) = value
				End Set
			End Property

			Friend ReadOnly Property REF_Obj As SegmentContainer(Of Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Loops.Loop1000.REF
				Get
					Return CType(Children(4), SegmentContainer(Of Dom.Segments.REF))
				End Get
			End Property

			Friend ReadOnly Property PER_Obj As SegmentContainer(Of Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Loops.Loop1000.PER
				Get
					Return CType(Children(5), SegmentContainer(Of Dom.Segments.PER))
				End Get
			End Property

			Private PERSubset_Loop1000A_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000A.PER, Dom.Segments.PER)
			Private ReadOnly Property PER_Loop1000A_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000A.PER, Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A.PER
				Get
					If PERSubset_Loop1000A_Obj Is Nothing Then
						PERSubset_Loop1000A_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000A.PER, Dom.Segments.PER)(Children(5), 2, 1, 6624)
					End If

					Return PERSubset_Loop1000A_Obj
				End Get
			End Property
			Private PERSubset_1_Loop1000A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000A.PER, Dom.Segments.PER)
			Private ReadOnly Property PER_Loop1000A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000A.PER, Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A.PER
				Get
					If PERSubset_1_Loop1000A_Obj_1 Is Nothing Then
						PERSubset_1_Loop1000A_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000A.PER, Dom.Segments.PER)(Children(5), 2, 1, 6624)
					End If

					Return PERSubset_1_Loop1000A_Obj_1
				End Get
			End Property
			Private PERSubset_2_Loop1000A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000A.PER, Dom.Segments.PER)
			Private ReadOnly Property PER_Loop1000A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000A.PER, Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A.PER
				Get
					If PERSubset_2_Loop1000A_Obj_2 Is Nothing Then
						PERSubset_2_Loop1000A_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000A.PER, Dom.Segments.PER)(Children(5), 2, 1, 6624)
					End If

					Return PERSubset_2_Loop1000A_Obj_2
				End Get
			End Property

		End Class
		Partial Friend Class Loop2000_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2000,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000C,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000C,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000C
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.HL_Obj),
													CType(Nothing, Dom.Segments.PRV_Obj),
													CType(Nothing, Dom.Segments.SBR_Obj),
													CType(Nothing, Dom.Segments.PAT_Obj),
													New SegmentContainer(Of Dom.Segments.DTP)(5, 2, 90),
													CType(Nothing, Dom.Segments.CUR_Obj),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2010)(10, 2, 150),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2300)(100, 2, 1300)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "HL", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "PRV", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "SBR", ReadAction.PopulateSegment, 3, False),
									New ReaderState(2, "SBR", ReadAction.PopulateSegment, 3, False),
									New ReaderState(1, "PAT", ReadAction.PopulateSegment, 4, False),
									New ReaderState(2, "PAT", ReadAction.PopulateSegment, 4, False),
									New ReaderState(3, "PAT", ReadAction.PopulateSegment, 4, False),
									New ReaderState(1, "DTP", ReadAction.PopulateSegment, 5, False),
									New ReaderState(2, "DTP", ReadAction.PopulateSegment, 5, False),
									New ReaderState(3, "DTP", ReadAction.PopulateSegment, 5, False),
									New ReaderState(4, "DTP", ReadAction.PopulateSegment, 5, False),
									New ReaderState(5, "DTP", ReadAction.PopulateSegment, 5, False),
									New ReaderState(1, "CUR", ReadAction.PopulateSegment, 7, False),
									New ReaderState(2, "CUR", ReadAction.PopulateSegment, 7, False),
									New ReaderState(3, "CUR", ReadAction.PopulateSegment, 7, False),
									New ReaderState(4, "CUR", ReadAction.PopulateSegment, 7, False),
									New ReaderState(5, "CUR", ReadAction.PopulateSegment, 7, False),
									New ReaderState(1, "NM1", ReadAction.PopulateLoop, 8, False),
									New ReaderState(2, "NM1", ReadAction.PopulateLoop, 8, False),
									New ReaderState(3, "NM1", ReadAction.PopulateLoop, 8, False),
									New ReaderState(4, "NM1", ReadAction.PopulateLoop, 8, False),
									New ReaderState(5, "NM1", ReadAction.PopulateLoop, 8, False),
									New ReaderState(7, "NM1", ReadAction.PopulateLoop, 8, False),
									New ReaderState(8, "NM1", ReadAction.PopulateLoop, 8, False),
									New ReaderState(1, "CLM", ReadAction.PopulateLoop, 10, False),
									New ReaderState(2, "CLM", ReadAction.PopulateLoop, 10, False),
									New ReaderState(3, "CLM", ReadAction.PopulateLoop, 10, False),
									New ReaderState(4, "CLM", ReadAction.PopulateLoop, 10, False),
									New ReaderState(5, "CLM", ReadAction.PopulateLoop, 10, False),
									New ReaderState(7, "CLM", ReadAction.PopulateLoop, 10, False),
									New ReaderState(8, "CLM", ReadAction.PopulateLoop, 10, False),
									New ReaderState(10, "CLM", ReadAction.PopulateLoop, 10, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "HL", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.HL_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					HL_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.HL_Obj)
					If MyBase.CompareKey(S2.HL03, ";20;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 1296
					ElseIf MyBase.CompareKey(S2.HL03, ";22;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 1296
					ElseIf MyBase.CompareKey(S2.HL03, ";23;") AndAlso String.Compare(args.Implementation, "_837Q1__2000C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 1296
					ElseIf MyBase.CompareKey(S2.HL03, ";20;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 1296
					ElseIf MyBase.CompareKey(S2.HL03, ";22;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 1296
					ElseIf MyBase.CompareKey(S2.HL03, ";23;") AndAlso String.Compare(args.Implementation, "_837Q2__2000C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 1296
					ElseIf MyBase.CompareKey(S2.HL03, ";20;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 1296
					ElseIf MyBase.CompareKey(S2.HL03, ";22;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 1296
					ElseIf MyBase.CompareKey(S2.HL03, ";23;") AndAlso String.Compare(args.Implementation, "_837Q3__2000C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 1296
					End If
				ElseIf String.Compare(segmentName, "PRV", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PRV_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PRV_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.PRV_Obj)
					If MyBase.CompareKey(S2.PRV01, ";BI;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 3888
					ElseIf MyBase.CompareKey(S2.PRV01, ";BI;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 3888
					ElseIf MyBase.CompareKey(S2.PRV01, ";BI;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 3888
					End If
				ElseIf String.Compare(segmentName, "SBR", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SBR_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SBR_Obj = Seg
				ElseIf String.Compare(segmentName, "PAT", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PAT_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PAT_Obj = Seg
				ElseIf String.Compare(segmentName, "DTP", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DTP_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DTP_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "CUR", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CUR_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CUR_Obj = Seg
				End If
			End Sub

			Private Async Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				If String.Compare(args.DataSegment.SegmentID, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2010_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2010_Obj.Add(NewLoop)
					If MyBase.CompareKey(LoopKey, ";85;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000A__2010AA"
						NewLoop.SetArea = 2
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";87;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000A__2010AB"
						NewLoop.SetArea = 3
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000A__2010AC"
						NewLoop.SetArea = 3
						NewLoop.SetSequence = 6624
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2010BA"
						NewLoop.SetArea = 4
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2010BB"
						NewLoop.SetArea = 5
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";QC;") AndAlso String.Compare(args.Implementation, "_837Q1__2000C", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000C__2010CA"
						NewLoop.SetArea = 8
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";85;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000A__2010AA"
						NewLoop.SetArea = 2
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";87;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000A__2010AB"
						NewLoop.SetArea = 3
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000A__2010AC"
						NewLoop.SetArea = 3
						NewLoop.SetSequence = 144
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2010BA"
						NewLoop.SetArea = 4
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2010BB"
						NewLoop.SetArea = 5
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";QC;") AndAlso String.Compare(args.Implementation, "_837Q2__2000C", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000C__2010CA"
						NewLoop.SetArea = 8
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";85;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000A__2010AA"
						NewLoop.SetArea = 2
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";87;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000A__2010AB"
						NewLoop.SetArea = 3
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000A__2010AC"
						NewLoop.SetArea = 3
						NewLoop.SetSequence = 180
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2010BA"
						NewLoop.SetArea = 4
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2010BB"
						NewLoop.SetArea = 6
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";QC;") AndAlso String.Compare(args.Implementation, "_837Q3__2000C", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000C__2010CA"
						NewLoop.SetArea = 8
						NewLoop.SetSequence = 6516
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				ElseIf String.Compare(args.DataSegment.SegmentID, "CLM", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2300_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2300_Obj.Add(NewLoop)
					If String.Compare(args.Implementation, "_837Q1__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q2__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q3__2000B", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				End If
				args.Implementation = Temp
			End Function
			Friend Property HL_Obj As Dom.Segments.HL_Obj
				Get
					Return CType(Children(0), Dom.Segments.HL_Obj)
				End Get
				Set(value As Dom.Segments.HL_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property HL_Std As Dom.Segments.HL Implements Dom.Transactions.Transaction837.Loops.Loop2000.HL
				Get
					Return CType(Children(0), Dom.Segments.HL_Obj)
				End Get
				Set(value As Dom.Segments.HL)
					Children(0) = value
				End Set
			End Property

			Private Property HL_IFace_Loop2000A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.HL Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.HL)
					Children(0) = value
				End Set
			End Property
			Private Property HL_IFace_1_Loop2000B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000B.HL Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000B.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000B.HL)
					Children(0) = value
				End Set
			End Property
			Private Property HL_IFace_2_Loop2000C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000C.HL Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000C.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000C.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000C.HL)
					Children(0) = value
				End Set
			End Property
			Private Property HL_IFace_3_Loop2000A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.HL Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.HL)
					Children(0) = value
				End Set
			End Property
			Private Property HL_IFace_4_Loop2000B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000B.HL Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000B.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000B.HL)
					Children(0) = value
				End Set
			End Property
			Private Property HL_IFace_5_Loop2000C_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000C.HL Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000C.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000C.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000C.HL)
					Children(0) = value
				End Set
			End Property
			Private Property HL_IFace_6_Loop2000A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.HL Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.HL)
					Children(0) = value
				End Set
			End Property
			Private Property HL_IFace_7_Loop2000B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000B.HL Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000B.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000B.HL)
					Children(0) = value
				End Set
			End Property
			Private Property HL_IFace_8_Loop2000C_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000C.HL Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000C.HL
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000C.HL)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000C.HL)
					Children(0) = value
				End Set
			End Property
			Friend Property PRV_Obj As Dom.Segments.PRV_Obj
				Get
					Return CType(Children(1), Dom.Segments.PRV_Obj)
				End Get
				Set(value As Dom.Segments.PRV_Obj)
					Children(1) = value
				End Set
			End Property

			Private Property PRV_Std As Dom.Segments.PRV Implements Dom.Transactions.Transaction837.Loops.Loop2000.PRV
				Get
					Return CType(Children(1), Dom.Segments.PRV_Obj)
				End Get
				Set(value As Dom.Segments.PRV)
					Children(1) = value
				End Set
			End Property

			Private Property PRV_IFace_Loop2000A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.PRV)
					Children(1) = value
				End Set
			End Property
			Private Property PRV_IFace_1_Loop2000A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.PRV)
					Children(1) = value
				End Set
			End Property
			Private Property PRV_IFace_2_Loop2000A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.PRV)
					Children(1) = value
				End Set
			End Property
			Friend Property SBR_Obj As Dom.Segments.SBR_Obj
				Get
					Return CType(Children(2), Dom.Segments.SBR_Obj)
				End Get
				Set(value As Dom.Segments.SBR_Obj)
					Children(2) = value
				End Set
			End Property

			Private Property SBR_Std As Dom.Segments.SBR Implements Dom.Transactions.Transaction837.Loops.Loop2000.SBR
				Get
					Return CType(Children(2), Dom.Segments.SBR_Obj)
				End Get
				Set(value As Dom.Segments.SBR)
					Children(2) = value
				End Set
			End Property

			Private Property SBR_IFace_Loop2000B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000B.SBR Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B.SBR
				Get
					Return CType(Children(2), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000B.SBR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000B.SBR)
					Children(2) = value
				End Set
			End Property
			Private Property SBR_IFace_1_Loop2000B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000B.SBR Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B.SBR
				Get
					Return CType(Children(2), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000B.SBR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000B.SBR)
					Children(2) = value
				End Set
			End Property
			Private Property SBR_IFace_2_Loop2000B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000B.SBR Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B.SBR
				Get
					Return CType(Children(2), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000B.SBR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000B.SBR)
					Children(2) = value
				End Set
			End Property
			Friend Property PAT_Obj As Dom.Segments.PAT_Obj
				Get
					Return CType(Children(3), Dom.Segments.PAT_Obj)
				End Get
				Set(value As Dom.Segments.PAT_Obj)
					Children(3) = value
				End Set
			End Property

			Private Property PAT_Std As Dom.Segments.PAT Implements Dom.Transactions.Transaction837.Loops.Loop2000.PAT
				Get
					Return CType(Children(3), Dom.Segments.PAT_Obj)
				End Get
				Set(value As Dom.Segments.PAT)
					Children(3) = value
				End Set
			End Property

			Private Property PAT_IFace_1_Loop2000C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000C.PAT Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000C.PAT
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000C.PAT)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000C.PAT)
					Children(3) = value
				End Set
			End Property
			Private Property PAT_IFace_2_Loop2000C_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000C.PAT Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000C.PAT
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000C.PAT)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000C.PAT)
					Children(3) = value
				End Set
			End Property
			Private Property PAT_IFace_3_Loop2000C_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000C.PAT Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000C.PAT
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000C.PAT)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000C.PAT)
					Children(3) = value
				End Set
			End Property
			Friend ReadOnly Property DTP_Obj As SegmentContainer(Of Dom.Segments.DTP) Implements Dom.Transactions.Transaction837.Loops.Loop2000.DTP
				Get
					Return CType(Children(4), SegmentContainer(Of Dom.Segments.DTP))
				End Get
			End Property

			Friend Property CUR_Obj As Dom.Segments.CUR_Obj
				Get
					Return CType(Children(5), Dom.Segments.CUR_Obj)
				End Get
				Set(value As Dom.Segments.CUR_Obj)
					Children(5) = value
				End Set
			End Property

			Private Property CUR_Std As Dom.Segments.CUR Implements Dom.Transactions.Transaction837.Loops.Loop2000.CUR
				Get
					Return CType(Children(5), Dom.Segments.CUR_Obj)
				End Get
				Set(value As Dom.Segments.CUR)
					Children(5) = value
				End Set
			End Property

			Private Property CUR_IFace_Loop2000A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.CUR Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A.CUR
				Get
					Return CType(Children(5), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.CUR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.CUR)
					Children(5) = value
				End Set
			End Property
			Private Property CUR_IFace_1_Loop2000A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.CUR Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A.CUR
				Get
					Return CType(Children(5), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.CUR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.CUR)
					Children(5) = value
				End Set
			End Property
			Private Property CUR_IFace_2_Loop2000A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.CUR Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A.CUR
				Get
					Return CType(Children(5), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.CUR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.CUR)
					Children(5) = value
				End Set
			End Property
			Friend ReadOnly Property Loop2010_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2010) Implements Dom.Transactions.Transaction837.Loops.Loop2000.Loop2010
				Get
					Return CType(Children(6), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2010))
				End Get
			End Property

			Private Loop2010AASubset_Loop2000A_Obj As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AA_IFace_Loop2000A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A.Loop2010AA
				Get
					If Loop2010AASubset_Loop2000A_Obj Is Nothing Then
						Loop2010AASubset_Loop2000A_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 2, 6516)
					End If

					If Loop2010AASubset_Loop2000A_Obj.Count > 0 Then
						Return Loop2010AASubset_Loop2000A_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA)
					If Loop2010AASubset_Loop2000A_Obj Is Nothing Then
						Loop2010AASubset_Loop2000A_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 2, 6516)
					End If

					If Loop2010AASubset_Loop2000A_Obj.Count = 0 Then
						Loop2010AASubset_Loop2000A_Obj.Add(value)
					Else
						Loop2010AASubset_Loop2000A_Obj(0) = value
					End If
				End Set
			End Property
			Private Loop2010ABSubset_Loop2000A_Obj As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AB_IFace_Loop2000A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A.Loop2010AB
				Get
					If Loop2010ABSubset_Loop2000A_Obj Is Nothing Then
						Loop2010ABSubset_Loop2000A_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 6516)
					End If

					If Loop2010ABSubset_Loop2000A_Obj.Count > 0 Then
						Return Loop2010ABSubset_Loop2000A_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB)
					If Loop2010ABSubset_Loop2000A_Obj Is Nothing Then
						Loop2010ABSubset_Loop2000A_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 6516)
					End If

					If Loop2010ABSubset_Loop2000A_Obj.Count = 0 Then
						Loop2010ABSubset_Loop2000A_Obj.Add(value)
					Else
						Loop2010ABSubset_Loop2000A_Obj(0) = value
					End If
				End Set
			End Property
			Private Loop2010ACSubset_Loop2000A_Obj As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AC_IFace_Loop2000A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A.Loop2010AC
				Get
					If Loop2010ACSubset_Loop2000A_Obj Is Nothing Then
						Loop2010ACSubset_Loop2000A_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 6624)
					End If

					If Loop2010ACSubset_Loop2000A_Obj.Count > 0 Then
						Return Loop2010ACSubset_Loop2000A_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC)
					If Loop2010ACSubset_Loop2000A_Obj Is Nothing Then
						Loop2010ACSubset_Loop2000A_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 6624)
					End If

					If Loop2010ACSubset_Loop2000A_Obj.Count = 0 Then
						Loop2010ACSubset_Loop2000A_Obj.Add(value)
					Else
						Loop2010ACSubset_Loop2000A_Obj(0) = value
					End If
				End Set
			End Property
			Private Loop2010BASubset_Loop2000B_Obj As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010BA_IFace_Loop2000B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B.Loop2010BA
				Get
					If Loop2010BASubset_Loop2000B_Obj Is Nothing Then
						Loop2010BASubset_Loop2000B_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 4, 6516)
					End If

					If Loop2010BASubset_Loop2000B_Obj.Count > 0 Then
						Return Loop2010BASubset_Loop2000B_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA)
					If Loop2010BASubset_Loop2000B_Obj Is Nothing Then
						Loop2010BASubset_Loop2000B_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 4, 6516)
					End If

					If Loop2010BASubset_Loop2000B_Obj.Count = 0 Then
						Loop2010BASubset_Loop2000B_Obj.Add(value)
					Else
						Loop2010BASubset_Loop2000B_Obj(0) = value
					End If
				End Set
			End Property
			Private Loop2010BBSubset_Loop2000B_Obj As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010BB_IFace_Loop2000B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B.Loop2010BB
				Get
					If Loop2010BBSubset_Loop2000B_Obj Is Nothing Then
						Loop2010BBSubset_Loop2000B_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 5, 6516)
					End If

					If Loop2010BBSubset_Loop2000B_Obj.Count > 0 Then
						Return Loop2010BBSubset_Loop2000B_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB)
					If Loop2010BBSubset_Loop2000B_Obj Is Nothing Then
						Loop2010BBSubset_Loop2000B_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 5, 6516)
					End If

					If Loop2010BBSubset_Loop2000B_Obj.Count = 0 Then
						Loop2010BBSubset_Loop2000B_Obj.Add(value)
					Else
						Loop2010BBSubset_Loop2000B_Obj(0) = value
					End If
				End Set
			End Property
			Private Loop2010CASubset_Loop2000C_Obj As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010CA_IFace_Loop2000C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000C.Loop2010CA
				Get
					If Loop2010CASubset_Loop2000C_Obj Is Nothing Then
						Loop2010CASubset_Loop2000C_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 8, 6516)
					End If

					If Loop2010CASubset_Loop2000C_Obj.Count > 0 Then
						Return Loop2010CASubset_Loop2000C_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA)
					If Loop2010CASubset_Loop2000C_Obj Is Nothing Then
						Loop2010CASubset_Loop2000C_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 8, 6516)
					End If

					If Loop2010CASubset_Loop2000C_Obj.Count = 0 Then
						Loop2010CASubset_Loop2000C_Obj.Add(value)
					Else
						Loop2010CASubset_Loop2000C_Obj(0) = value
					End If
				End Set
			End Property
			Private Loop2010AASubset_Loop2000A_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AA_IFace_1_Loop2000A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A.Loop2010AA
				Get
					If Loop2010AASubset_Loop2000A_Obj_1 Is Nothing Then
						Loop2010AASubset_Loop2000A_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 2, 6516)
					End If

					If Loop2010AASubset_Loop2000A_Obj_1.Count > 0 Then
						Return Loop2010AASubset_Loop2000A_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA)
					If Loop2010AASubset_Loop2000A_Obj_1 Is Nothing Then
						Loop2010AASubset_Loop2000A_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 2, 6516)
					End If

					If Loop2010AASubset_Loop2000A_Obj_1.Count = 0 Then
						Loop2010AASubset_Loop2000A_Obj_1.Add(value)
					Else
						Loop2010AASubset_Loop2000A_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2010ABSubset_Loop2000A_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AB_IFace_1_Loop2000A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A.Loop2010AB
				Get
					If Loop2010ABSubset_Loop2000A_Obj_1 Is Nothing Then
						Loop2010ABSubset_Loop2000A_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 6516)
					End If

					If Loop2010ABSubset_Loop2000A_Obj_1.Count > 0 Then
						Return Loop2010ABSubset_Loop2000A_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB)
					If Loop2010ABSubset_Loop2000A_Obj_1 Is Nothing Then
						Loop2010ABSubset_Loop2000A_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 6516)
					End If

					If Loop2010ABSubset_Loop2000A_Obj_1.Count = 0 Then
						Loop2010ABSubset_Loop2000A_Obj_1.Add(value)
					Else
						Loop2010ABSubset_Loop2000A_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2010ACSubset_Loop2000A_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AC_IFace_1_Loop2000A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A.Loop2010AC
				Get
					If Loop2010ACSubset_Loop2000A_Obj_1 Is Nothing Then
						Loop2010ACSubset_Loop2000A_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 144)
					End If

					If Loop2010ACSubset_Loop2000A_Obj_1.Count > 0 Then
						Return Loop2010ACSubset_Loop2000A_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC)
					If Loop2010ACSubset_Loop2000A_Obj_1 Is Nothing Then
						Loop2010ACSubset_Loop2000A_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 144)
					End If

					If Loop2010ACSubset_Loop2000A_Obj_1.Count = 0 Then
						Loop2010ACSubset_Loop2000A_Obj_1.Add(value)
					Else
						Loop2010ACSubset_Loop2000A_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2010BASubset_Loop2000B_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010BA_IFace_1_Loop2000B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B.Loop2010BA
				Get
					If Loop2010BASubset_Loop2000B_Obj_1 Is Nothing Then
						Loop2010BASubset_Loop2000B_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 4, 6516)
					End If

					If Loop2010BASubset_Loop2000B_Obj_1.Count > 0 Then
						Return Loop2010BASubset_Loop2000B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA)
					If Loop2010BASubset_Loop2000B_Obj_1 Is Nothing Then
						Loop2010BASubset_Loop2000B_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 4, 6516)
					End If

					If Loop2010BASubset_Loop2000B_Obj_1.Count = 0 Then
						Loop2010BASubset_Loop2000B_Obj_1.Add(value)
					Else
						Loop2010BASubset_Loop2000B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2010BBSubset_Loop2000B_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010BB_IFace_1_Loop2000B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B.Loop2010BB
				Get
					If Loop2010BBSubset_Loop2000B_Obj_1 Is Nothing Then
						Loop2010BBSubset_Loop2000B_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 5, 6516)
					End If

					If Loop2010BBSubset_Loop2000B_Obj_1.Count > 0 Then
						Return Loop2010BBSubset_Loop2000B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB)
					If Loop2010BBSubset_Loop2000B_Obj_1 Is Nothing Then
						Loop2010BBSubset_Loop2000B_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 5, 6516)
					End If

					If Loop2010BBSubset_Loop2000B_Obj_1.Count = 0 Then
						Loop2010BBSubset_Loop2000B_Obj_1.Add(value)
					Else
						Loop2010BBSubset_Loop2000B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2010CASubset_Loop2000C_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010CA_IFace_1_Loop2000C_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000C.Loop2010CA
				Get
					If Loop2010CASubset_Loop2000C_Obj_1 Is Nothing Then
						Loop2010CASubset_Loop2000C_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 8, 6516)
					End If

					If Loop2010CASubset_Loop2000C_Obj_1.Count > 0 Then
						Return Loop2010CASubset_Loop2000C_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA)
					If Loop2010CASubset_Loop2000C_Obj_1 Is Nothing Then
						Loop2010CASubset_Loop2000C_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 8, 6516)
					End If

					If Loop2010CASubset_Loop2000C_Obj_1.Count = 0 Then
						Loop2010CASubset_Loop2000C_Obj_1.Add(value)
					Else
						Loop2010CASubset_Loop2000C_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2010AASubset_Loop2000A_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AA_IFace_2_Loop2000A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A.Loop2010AA
				Get
					If Loop2010AASubset_Loop2000A_Obj_2 Is Nothing Then
						Loop2010AASubset_Loop2000A_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 2, 6516)
					End If

					If Loop2010AASubset_Loop2000A_Obj_2.Count > 0 Then
						Return Loop2010AASubset_Loop2000A_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA)
					If Loop2010AASubset_Loop2000A_Obj_2 Is Nothing Then
						Loop2010AASubset_Loop2000A_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 2, 6516)
					End If

					If Loop2010AASubset_Loop2000A_Obj_2.Count = 0 Then
						Loop2010AASubset_Loop2000A_Obj_2.Add(value)
					Else
						Loop2010AASubset_Loop2000A_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2010ABSubset_Loop2000A_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AB_IFace_2_Loop2000A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A.Loop2010AB
				Get
					If Loop2010ABSubset_Loop2000A_Obj_2 Is Nothing Then
						Loop2010ABSubset_Loop2000A_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 6516)
					End If

					If Loop2010ABSubset_Loop2000A_Obj_2.Count > 0 Then
						Return Loop2010ABSubset_Loop2000A_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB)
					If Loop2010ABSubset_Loop2000A_Obj_2 Is Nothing Then
						Loop2010ABSubset_Loop2000A_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 6516)
					End If

					If Loop2010ABSubset_Loop2000A_Obj_2.Count = 0 Then
						Loop2010ABSubset_Loop2000A_Obj_2.Add(value)
					Else
						Loop2010ABSubset_Loop2000A_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2010ACSubset_Loop2000A_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010AC_IFace_2_Loop2000A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A.Loop2010AC
				Get
					If Loop2010ACSubset_Loop2000A_Obj_2 Is Nothing Then
						Loop2010ACSubset_Loop2000A_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 180)
					End If

					If Loop2010ACSubset_Loop2000A_Obj_2.Count > 0 Then
						Return Loop2010ACSubset_Loop2000A_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC)
					If Loop2010ACSubset_Loop2000A_Obj_2 Is Nothing Then
						Loop2010ACSubset_Loop2000A_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 3, 180)
					End If

					If Loop2010ACSubset_Loop2000A_Obj_2.Count = 0 Then
						Loop2010ACSubset_Loop2000A_Obj_2.Add(value)
					Else
						Loop2010ACSubset_Loop2000A_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2010BASubset_Loop2000B_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010BA_IFace_2_Loop2000B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B.Loop2010BA
				Get
					If Loop2010BASubset_Loop2000B_Obj_2 Is Nothing Then
						Loop2010BASubset_Loop2000B_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 4, 6516)
					End If

					If Loop2010BASubset_Loop2000B_Obj_2.Count > 0 Then
						Return Loop2010BASubset_Loop2000B_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA)
					If Loop2010BASubset_Loop2000B_Obj_2 Is Nothing Then
						Loop2010BASubset_Loop2000B_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 4, 6516)
					End If

					If Loop2010BASubset_Loop2000B_Obj_2.Count = 0 Then
						Loop2010BASubset_Loop2000B_Obj_2.Add(value)
					Else
						Loop2010BASubset_Loop2000B_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2010BBSubset_Loop2000B_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010BB_IFace_2_Loop2000B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B.Loop2010BB
				Get
					If Loop2010BBSubset_Loop2000B_Obj_2 Is Nothing Then
						Loop2010BBSubset_Loop2000B_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 6, 6516)
					End If

					If Loop2010BBSubset_Loop2000B_Obj_2.Count > 0 Then
						Return Loop2010BBSubset_Loop2000B_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB)
					If Loop2010BBSubset_Loop2000B_Obj_2 Is Nothing Then
						Loop2010BBSubset_Loop2000B_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 6, 6516)
					End If

					If Loop2010BBSubset_Loop2000B_Obj_2.Count = 0 Then
						Loop2010BBSubset_Loop2000B_Obj_2.Add(value)
					Else
						Loop2010BBSubset_Loop2000B_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2010CASubset_Loop2000C_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)
			Private Property Loop2010CA_IFace_2_Loop2000C_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000C.Loop2010CA
				Get
					If Loop2010CASubset_Loop2000C_Obj_2 Is Nothing Then
						Loop2010CASubset_Loop2000C_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 8, 6516)
					End If

					If Loop2010CASubset_Loop2000C_Obj_2.Count > 0 Then
						Return Loop2010CASubset_Loop2000C_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA)
					If Loop2010CASubset_Loop2000C_Obj_2 Is Nothing Then
						Loop2010CASubset_Loop2000C_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA, Dom.Transactions.Transaction837.Loops.Loop2010)(Children(6), 1, 8, 6516)
					End If

					If Loop2010CASubset_Loop2000C_Obj_2.Count = 0 Then
						Loop2010CASubset_Loop2000C_Obj_2.Add(value)
					Else
						Loop2010CASubset_Loop2000C_Obj_2(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property Loop2300_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2300) Implements Dom.Transactions.Transaction837.Loops.Loop2000.Loop2300
				Get
					Return CType(Children(7), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2300))
				End Get
			End Property

			Private Loop2300Subset_Loop2000B_Obj As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)
			Private ReadOnly Property Loop2300_Obj_1_Loop2000B_Obj As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B.Loop2300
				Get
					If Loop2300Subset_Loop2000B_Obj Is Nothing Then
						Loop2300Subset_Loop2000B_Obj = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)(Children(7), 100, 12, 109)
					End If

					Return Loop2300Subset_Loop2000B_Obj
				End Get
			End Property
			Private Loop2300Subset_Loop2000B_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)
			Private ReadOnly Property Loop2300_Obj_2_Loop2000B_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B.Loop2300
				Get
					If Loop2300Subset_Loop2000B_Obj_1 Is Nothing Then
						Loop2300Subset_Loop2000B_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)(Children(7), 100, 12, 109)
					End If

					Return Loop2300Subset_Loop2000B_Obj_1
				End Get
			End Property
			Private Loop2300Subset_Loop2000B_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)
			Private ReadOnly Property Loop2300_Obj_3_Loop2000B_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B.Loop2300
				Get
					If Loop2300Subset_Loop2000B_Obj_2 Is Nothing Then
						Loop2300Subset_Loop2000B_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)(Children(7), 100, 12, 109)
					End If

					Return Loop2300Subset_Loop2000B_Obj_2
				End Get
			End Property

		End Class
		Partial Friend Class Loop2010_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2010,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.NM1_Obj),
													New SegmentContainer(Of Dom.Segments.N2)(2, 2, 200),
													New SegmentContainer(Of Dom.Segments.N3)(2, 2, 250),
													CType(Nothing, Dom.Segments.N4_Obj),
													CType(Nothing, Dom.Segments.DMG_Obj),
													New SegmentContainer(Of Dom.Segments.REF)(20, 2, 350),
													New SegmentContainer(Of Dom.Segments.PER)(2, 2, 400)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "NM1", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "N2", ReadAction.PopulateSegment, 2, False),
									New ReaderState(2, "N2", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(2, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(4, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(1, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(2, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(4, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(1, "DMG", ReadAction.PopulateSegment, 7, False),
									New ReaderState(2, "DMG", ReadAction.PopulateSegment, 7, False),
									New ReaderState(4, "DMG", ReadAction.PopulateSegment, 7, False),
									New ReaderState(6, "DMG", ReadAction.PopulateSegment, 7, False),
									New ReaderState(1, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(2, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(4, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(6, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(7, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(8, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(1, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(2, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(4, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(6, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(7, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(8, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(10, "PER", ReadAction.PopulateSegment, 10, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.NM1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					NM1_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.NM1_Obj)
					If MyBase.CompareKey(S2.NM101, ";85;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A__2010AA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";87;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A__2010AB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 6624
					ElseIf MyBase.CompareKey(S2.NM101, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 5
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";QC;") AndAlso String.Compare(args.Implementation, "_837Q1__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";85;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A__2010AA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";87;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A__2010AB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 144
					ElseIf MyBase.CompareKey(S2.NM101, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 5
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";QC;") AndAlso String.Compare(args.Implementation, "_837Q2__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";85;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A__2010AA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";87;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A__2010AB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 180
					ElseIf MyBase.CompareKey(S2.NM101, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 6
						Seg.SetSequence = 6516
					ElseIf MyBase.CompareKey(S2.NM101, ";QC;") AndAlso String.Compare(args.Implementation, "_837Q3__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 6516
					End If
				ElseIf String.Compare(segmentName, "N2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N2_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N3_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N4", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N4_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N4_Obj = Seg
				ElseIf String.Compare(segmentName, "DMG", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DMG_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DMG_Obj = Seg
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.REF_Obj)
					If MyBase.CompareKey(S2.REF01, ";EI;SY;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A__2010AA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A__2010AA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 6696
					ElseIf MyBase.CompareKey(S2.REF01, ";EI;") AndAlso String.Compare(args.Implementation, "_837Q1__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 239976
					ElseIf MyBase.CompareKey(S2.REF01, ";SY;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";Y4;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;EI;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 5
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 5
						Seg.SetSequence = 9180
					ElseIf MyBase.CompareKey(S2.REF01, ";Y4;") AndAlso String.Compare(args.Implementation, "_837Q1__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";1W;SY;") AndAlso String.Compare(args.Implementation, "_837Q1__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 101196
					ElseIf MyBase.CompareKey(S2.REF01, ";EI;SY;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A__2010AA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A__2010AA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 216
					ElseIf MyBase.CompareKey(S2.REF01, ";EI;") AndAlso String.Compare(args.Implementation, "_837Q2__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 233496
					ElseIf MyBase.CompareKey(S2.REF01, ";SY;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";Y4;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;EI;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 5
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 5
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";Y4;") AndAlso String.Compare(args.Implementation, "_837Q2__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";1W;SY;") AndAlso String.Compare(args.Implementation, "_837Q2__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 101196
					ElseIf MyBase.CompareKey(S2.REF01, ";EI;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A__2010AA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 2
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 252
					ElseIf MyBase.CompareKey(S2.REF01, ";EI;") AndAlso String.Compare(args.Implementation, "_837Q3__2000A__2010AC", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 3
						Seg.SetSequence = 233532
					ElseIf MyBase.CompareKey(S2.REF01, ";SY;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";Y4;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2010BA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 4
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;EI;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 6
						Seg.SetSequence = 6588
					ElseIf MyBase.CompareKey(S2.REF01, ";G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2010BB", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 6
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";Y4;") AndAlso String.Compare(args.Implementation, "_837Q3__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 7884
					ElseIf MyBase.CompareKey(S2.REF01, ";1W;SY;") AndAlso String.Compare(args.Implementation, "_837Q3__2000C__2010CA", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 8
						Seg.SetSequence = 101196
					End If
				ElseIf String.Compare(segmentName, "PER", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PER_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PER_Obj.Add(Seg)
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property NM1_Obj As Dom.Segments.NM1_Obj
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_Std As Dom.Segments.NM1 Implements Dom.Transactions.Transaction837.Loops.Loop2010.NM1
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_IFace_Loop2010AA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_1_Loop2010AB_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_2_Loop2010AC_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_3_Loop2010BA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_4_Loop2010BB_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_5_Loop2010CA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_6_Loop2010AA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_7_Loop2010AB_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_8_Loop2010AC_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_9_Loop2010BA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_10_Loop2010BB_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_11_Loop2010CA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_12_Loop2010AA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_13_Loop2010AB_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_14_Loop2010AC_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_15_Loop2010BA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_16_Loop2010BB_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_17_Loop2010CA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.NM1)
					Children(0) = value
				End Set
			End Property
			Friend ReadOnly Property N2_Obj As SegmentContainer(Of Dom.Segments.N2) Implements Dom.Transactions.Transaction837.Loops.Loop2010.N2
				Get
					Return CType(Children(1), SegmentContainer(Of Dom.Segments.N2))
				End Get
			End Property

			Friend ReadOnly Property N3_Obj As SegmentContainer(Of Dom.Segments.N3) Implements Dom.Transactions.Transaction837.Loops.Loop2010.N3
				Get
					Return CType(Children(2), SegmentContainer(Of Dom.Segments.N3))
				End Get
			End Property

			Private N3Subset_Loop2010AA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N3, Dom.Segments.N3)
			Private Property N3_IFace_Loop2010AA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA.N3
				Get
					If N3Subset_Loop2010AA_Obj Is Nothing Then
						N3Subset_Loop2010AA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N3, Dom.Segments.N3)(Children(2), 1, 2, 6552)
					End If

					If N3Subset_Loop2010AA_Obj.Count > 0 Then
						Return N3Subset_Loop2010AA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N3)
					If N3Subset_Loop2010AA_Obj Is Nothing Then
						N3Subset_Loop2010AA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N3, Dom.Segments.N3)(Children(2), 1, 2, 6552)
					End If

					If N3Subset_Loop2010AA_Obj.Count = 0 Then
						N3Subset_Loop2010AA_Obj.Add(value)
					Else
						N3Subset_Loop2010AA_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_1_Loop2010AB_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N3, Dom.Segments.N3)
			Private Property N3_IFace_1_Loop2010AB_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB.N3
				Get
					If N3Subset_1_Loop2010AB_Obj Is Nothing Then
						N3Subset_1_Loop2010AB_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N3, Dom.Segments.N3)(Children(2), 1, 3, 6552)
					End If

					If N3Subset_1_Loop2010AB_Obj.Count > 0 Then
						Return N3Subset_1_Loop2010AB_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N3)
					If N3Subset_1_Loop2010AB_Obj Is Nothing Then
						N3Subset_1_Loop2010AB_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N3, Dom.Segments.N3)(Children(2), 1, 3, 6552)
					End If

					If N3Subset_1_Loop2010AB_Obj.Count = 0 Then
						N3Subset_1_Loop2010AB_Obj.Add(value)
					Else
						N3Subset_1_Loop2010AB_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_2_Loop2010AC_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N3, Dom.Segments.N3)
			Private Property N3_IFace_2_Loop2010AC_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC.N3
				Get
					If N3Subset_2_Loop2010AC_Obj Is Nothing Then
						N3Subset_2_Loop2010AC_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N3, Dom.Segments.N3)(Children(2), 1, 3, 6660)
					End If

					If N3Subset_2_Loop2010AC_Obj.Count > 0 Then
						Return N3Subset_2_Loop2010AC_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N3)
					If N3Subset_2_Loop2010AC_Obj Is Nothing Then
						N3Subset_2_Loop2010AC_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N3, Dom.Segments.N3)(Children(2), 1, 3, 6660)
					End If

					If N3Subset_2_Loop2010AC_Obj.Count = 0 Then
						N3Subset_2_Loop2010AC_Obj.Add(value)
					Else
						N3Subset_2_Loop2010AC_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_3_Loop2010BA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N3, Dom.Segments.N3)
			Private Property N3_IFace_3_Loop2010BA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA.N3
				Get
					If N3Subset_3_Loop2010BA_Obj Is Nothing Then
						N3Subset_3_Loop2010BA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N3, Dom.Segments.N3)(Children(2), 1, 4, 6552)
					End If

					If N3Subset_3_Loop2010BA_Obj.Count > 0 Then
						Return N3Subset_3_Loop2010BA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N3)
					If N3Subset_3_Loop2010BA_Obj Is Nothing Then
						N3Subset_3_Loop2010BA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N3, Dom.Segments.N3)(Children(2), 1, 4, 6552)
					End If

					If N3Subset_3_Loop2010BA_Obj.Count = 0 Then
						N3Subset_3_Loop2010BA_Obj.Add(value)
					Else
						N3Subset_3_Loop2010BA_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_4_Loop2010BB_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N3, Dom.Segments.N3)
			Private Property N3_IFace_4_Loop2010BB_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB.N3
				Get
					If N3Subset_4_Loop2010BB_Obj Is Nothing Then
						N3Subset_4_Loop2010BB_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N3, Dom.Segments.N3)(Children(2), 1, 5, 6552)
					End If

					If N3Subset_4_Loop2010BB_Obj.Count > 0 Then
						Return N3Subset_4_Loop2010BB_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N3)
					If N3Subset_4_Loop2010BB_Obj Is Nothing Then
						N3Subset_4_Loop2010BB_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N3, Dom.Segments.N3)(Children(2), 1, 5, 6552)
					End If

					If N3Subset_4_Loop2010BB_Obj.Count = 0 Then
						N3Subset_4_Loop2010BB_Obj.Add(value)
					Else
						N3Subset_4_Loop2010BB_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_5_Loop2010CA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N3, Dom.Segments.N3)
			Private Property N3_IFace_5_Loop2010CA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA.N3
				Get
					If N3Subset_5_Loop2010CA_Obj Is Nothing Then
						N3Subset_5_Loop2010CA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N3, Dom.Segments.N3)(Children(2), 1, 8, 6552)
					End If

					If N3Subset_5_Loop2010CA_Obj.Count > 0 Then
						Return N3Subset_5_Loop2010CA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N3)
					If N3Subset_5_Loop2010CA_Obj Is Nothing Then
						N3Subset_5_Loop2010CA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N3, Dom.Segments.N3)(Children(2), 1, 8, 6552)
					End If

					If N3Subset_5_Loop2010CA_Obj.Count = 0 Then
						N3Subset_5_Loop2010CA_Obj.Add(value)
					Else
						N3Subset_5_Loop2010CA_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_6_Loop2010AA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N3, Dom.Segments.N3)
			Private Property N3_IFace_6_Loop2010AA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA.N3
				Get
					If N3Subset_6_Loop2010AA_Obj_1 Is Nothing Then
						N3Subset_6_Loop2010AA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N3, Dom.Segments.N3)(Children(2), 1, 2, 6552)
					End If

					If N3Subset_6_Loop2010AA_Obj_1.Count > 0 Then
						Return N3Subset_6_Loop2010AA_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N3)
					If N3Subset_6_Loop2010AA_Obj_1 Is Nothing Then
						N3Subset_6_Loop2010AA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N3, Dom.Segments.N3)(Children(2), 1, 2, 6552)
					End If

					If N3Subset_6_Loop2010AA_Obj_1.Count = 0 Then
						N3Subset_6_Loop2010AA_Obj_1.Add(value)
					Else
						N3Subset_6_Loop2010AA_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_7_Loop2010AB_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N3, Dom.Segments.N3)
			Private Property N3_IFace_7_Loop2010AB_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB.N3
				Get
					If N3Subset_7_Loop2010AB_Obj_1 Is Nothing Then
						N3Subset_7_Loop2010AB_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N3, Dom.Segments.N3)(Children(2), 1, 3, 6552)
					End If

					If N3Subset_7_Loop2010AB_Obj_1.Count > 0 Then
						Return N3Subset_7_Loop2010AB_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N3)
					If N3Subset_7_Loop2010AB_Obj_1 Is Nothing Then
						N3Subset_7_Loop2010AB_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N3, Dom.Segments.N3)(Children(2), 1, 3, 6552)
					End If

					If N3Subset_7_Loop2010AB_Obj_1.Count = 0 Then
						N3Subset_7_Loop2010AB_Obj_1.Add(value)
					Else
						N3Subset_7_Loop2010AB_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_8_Loop2010AC_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N3, Dom.Segments.N3)
			Private Property N3_IFace_8_Loop2010AC_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC.N3
				Get
					If N3Subset_8_Loop2010AC_Obj_1 Is Nothing Then
						N3Subset_8_Loop2010AC_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N3, Dom.Segments.N3)(Children(2), 1, 3, 180)
					End If

					If N3Subset_8_Loop2010AC_Obj_1.Count > 0 Then
						Return N3Subset_8_Loop2010AC_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N3)
					If N3Subset_8_Loop2010AC_Obj_1 Is Nothing Then
						N3Subset_8_Loop2010AC_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N3, Dom.Segments.N3)(Children(2), 1, 3, 180)
					End If

					If N3Subset_8_Loop2010AC_Obj_1.Count = 0 Then
						N3Subset_8_Loop2010AC_Obj_1.Add(value)
					Else
						N3Subset_8_Loop2010AC_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_9_Loop2010BA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N3, Dom.Segments.N3)
			Private Property N3_IFace_9_Loop2010BA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA.N3
				Get
					If N3Subset_9_Loop2010BA_Obj_1 Is Nothing Then
						N3Subset_9_Loop2010BA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N3, Dom.Segments.N3)(Children(2), 1, 4, 6552)
					End If

					If N3Subset_9_Loop2010BA_Obj_1.Count > 0 Then
						Return N3Subset_9_Loop2010BA_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N3)
					If N3Subset_9_Loop2010BA_Obj_1 Is Nothing Then
						N3Subset_9_Loop2010BA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N3, Dom.Segments.N3)(Children(2), 1, 4, 6552)
					End If

					If N3Subset_9_Loop2010BA_Obj_1.Count = 0 Then
						N3Subset_9_Loop2010BA_Obj_1.Add(value)
					Else
						N3Subset_9_Loop2010BA_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_10_Loop2010BB_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N3, Dom.Segments.N3)
			Private Property N3_IFace_10_Loop2010BB_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB.N3
				Get
					If N3Subset_10_Loop2010BB_Obj_1 Is Nothing Then
						N3Subset_10_Loop2010BB_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N3, Dom.Segments.N3)(Children(2), 1, 5, 6552)
					End If

					If N3Subset_10_Loop2010BB_Obj_1.Count > 0 Then
						Return N3Subset_10_Loop2010BB_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N3)
					If N3Subset_10_Loop2010BB_Obj_1 Is Nothing Then
						N3Subset_10_Loop2010BB_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N3, Dom.Segments.N3)(Children(2), 1, 5, 6552)
					End If

					If N3Subset_10_Loop2010BB_Obj_1.Count = 0 Then
						N3Subset_10_Loop2010BB_Obj_1.Add(value)
					Else
						N3Subset_10_Loop2010BB_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_11_Loop2010CA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N3, Dom.Segments.N3)
			Private Property N3_IFace_11_Loop2010CA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA.N3
				Get
					If N3Subset_11_Loop2010CA_Obj_1 Is Nothing Then
						N3Subset_11_Loop2010CA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N3, Dom.Segments.N3)(Children(2), 1, 8, 6552)
					End If

					If N3Subset_11_Loop2010CA_Obj_1.Count > 0 Then
						Return N3Subset_11_Loop2010CA_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N3)
					If N3Subset_11_Loop2010CA_Obj_1 Is Nothing Then
						N3Subset_11_Loop2010CA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N3, Dom.Segments.N3)(Children(2), 1, 8, 6552)
					End If

					If N3Subset_11_Loop2010CA_Obj_1.Count = 0 Then
						N3Subset_11_Loop2010CA_Obj_1.Add(value)
					Else
						N3Subset_11_Loop2010CA_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_12_Loop2010AA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N3, Dom.Segments.N3)
			Private Property N3_IFace_12_Loop2010AA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA.N3
				Get
					If N3Subset_12_Loop2010AA_Obj_2 Is Nothing Then
						N3Subset_12_Loop2010AA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N3, Dom.Segments.N3)(Children(2), 1, 2, 6552)
					End If

					If N3Subset_12_Loop2010AA_Obj_2.Count > 0 Then
						Return N3Subset_12_Loop2010AA_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N3)
					If N3Subset_12_Loop2010AA_Obj_2 Is Nothing Then
						N3Subset_12_Loop2010AA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N3, Dom.Segments.N3)(Children(2), 1, 2, 6552)
					End If

					If N3Subset_12_Loop2010AA_Obj_2.Count = 0 Then
						N3Subset_12_Loop2010AA_Obj_2.Add(value)
					Else
						N3Subset_12_Loop2010AA_Obj_2(0) = value
					End If
				End Set
			End Property
			Private N3Subset_13_Loop2010AB_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N3, Dom.Segments.N3)
			Private Property N3_IFace_13_Loop2010AB_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB.N3
				Get
					If N3Subset_13_Loop2010AB_Obj_2 Is Nothing Then
						N3Subset_13_Loop2010AB_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N3, Dom.Segments.N3)(Children(2), 1, 3, 6552)
					End If

					If N3Subset_13_Loop2010AB_Obj_2.Count > 0 Then
						Return N3Subset_13_Loop2010AB_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N3)
					If N3Subset_13_Loop2010AB_Obj_2 Is Nothing Then
						N3Subset_13_Loop2010AB_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N3, Dom.Segments.N3)(Children(2), 1, 3, 6552)
					End If

					If N3Subset_13_Loop2010AB_Obj_2.Count = 0 Then
						N3Subset_13_Loop2010AB_Obj_2.Add(value)
					Else
						N3Subset_13_Loop2010AB_Obj_2(0) = value
					End If
				End Set
			End Property
			Private N3Subset_14_Loop2010AC_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N3, Dom.Segments.N3)
			Private Property N3_IFace_14_Loop2010AC_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC.N3
				Get
					If N3Subset_14_Loop2010AC_Obj_2 Is Nothing Then
						N3Subset_14_Loop2010AC_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N3, Dom.Segments.N3)(Children(2), 1, 3, 216)
					End If

					If N3Subset_14_Loop2010AC_Obj_2.Count > 0 Then
						Return N3Subset_14_Loop2010AC_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N3)
					If N3Subset_14_Loop2010AC_Obj_2 Is Nothing Then
						N3Subset_14_Loop2010AC_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N3, Dom.Segments.N3)(Children(2), 1, 3, 216)
					End If

					If N3Subset_14_Loop2010AC_Obj_2.Count = 0 Then
						N3Subset_14_Loop2010AC_Obj_2.Add(value)
					Else
						N3Subset_14_Loop2010AC_Obj_2(0) = value
					End If
				End Set
			End Property
			Private N3Subset_15_Loop2010BA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N3, Dom.Segments.N3)
			Private Property N3_IFace_15_Loop2010BA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA.N3
				Get
					If N3Subset_15_Loop2010BA_Obj_2 Is Nothing Then
						N3Subset_15_Loop2010BA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N3, Dom.Segments.N3)(Children(2), 1, 4, 6552)
					End If

					If N3Subset_15_Loop2010BA_Obj_2.Count > 0 Then
						Return N3Subset_15_Loop2010BA_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N3)
					If N3Subset_15_Loop2010BA_Obj_2 Is Nothing Then
						N3Subset_15_Loop2010BA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N3, Dom.Segments.N3)(Children(2), 1, 4, 6552)
					End If

					If N3Subset_15_Loop2010BA_Obj_2.Count = 0 Then
						N3Subset_15_Loop2010BA_Obj_2.Add(value)
					Else
						N3Subset_15_Loop2010BA_Obj_2(0) = value
					End If
				End Set
			End Property
			Private N3Subset_16_Loop2010BB_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N3, Dom.Segments.N3)
			Private Property N3_IFace_16_Loop2010BB_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB.N3
				Get
					If N3Subset_16_Loop2010BB_Obj_2 Is Nothing Then
						N3Subset_16_Loop2010BB_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N3, Dom.Segments.N3)(Children(2), 1, 6, 6552)
					End If

					If N3Subset_16_Loop2010BB_Obj_2.Count > 0 Then
						Return N3Subset_16_Loop2010BB_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N3)
					If N3Subset_16_Loop2010BB_Obj_2 Is Nothing Then
						N3Subset_16_Loop2010BB_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N3, Dom.Segments.N3)(Children(2), 1, 6, 6552)
					End If

					If N3Subset_16_Loop2010BB_Obj_2.Count = 0 Then
						N3Subset_16_Loop2010BB_Obj_2.Add(value)
					Else
						N3Subset_16_Loop2010BB_Obj_2(0) = value
					End If
				End Set
			End Property
			Private N3Subset_17_Loop2010CA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N3, Dom.Segments.N3)
			Private Property N3_IFace_17_Loop2010CA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA.N3
				Get
					If N3Subset_17_Loop2010CA_Obj_2 Is Nothing Then
						N3Subset_17_Loop2010CA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N3, Dom.Segments.N3)(Children(2), 1, 8, 6552)
					End If

					If N3Subset_17_Loop2010CA_Obj_2.Count > 0 Then
						Return N3Subset_17_Loop2010CA_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N3)
					If N3Subset_17_Loop2010CA_Obj_2 Is Nothing Then
						N3Subset_17_Loop2010CA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N3, Dom.Segments.N3)(Children(2), 1, 8, 6552)
					End If

					If N3Subset_17_Loop2010CA_Obj_2.Count = 0 Then
						N3Subset_17_Loop2010CA_Obj_2.Add(value)
					Else
						N3Subset_17_Loop2010CA_Obj_2(0) = value
					End If
				End Set
			End Property
			Friend Property N4_Obj As Dom.Segments.N4_Obj
				Get
					Return CType(Children(3), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4_Obj)
					Children(3) = value
				End Set
			End Property

			Private Property N4_Std As Dom.Segments.N4 Implements Dom.Transactions.Transaction837.Loops.Loop2010.N4
				Get
					Return CType(Children(3), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4)
					Children(3) = value
				End Set
			End Property

			Private Property N4_IFace_Loop2010AA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_1_Loop2010AB_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_2_Loop2010AC_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_3_Loop2010BA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_4_Loop2010BB_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_5_Loop2010CA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_6_Loop2010AA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_7_Loop2010AB_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_8_Loop2010AC_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_9_Loop2010BA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_10_Loop2010BB_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_11_Loop2010CA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_12_Loop2010AA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_13_Loop2010AB_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_14_Loop2010AC_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_15_Loop2010BA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_16_Loop2010BB_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_17_Loop2010CA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N4)
					Children(3) = value
				End Set
			End Property
			Friend Property DMG_Obj As Dom.Segments.DMG_Obj
				Get
					Return CType(Children(4), Dom.Segments.DMG_Obj)
				End Get
				Set(value As Dom.Segments.DMG_Obj)
					Children(4) = value
				End Set
			End Property

			Private Property DMG_Std As Dom.Segments.DMG Implements Dom.Transactions.Transaction837.Loops.Loop2010.DMG
				Get
					Return CType(Children(4), Dom.Segments.DMG_Obj)
				End Get
				Set(value As Dom.Segments.DMG)
					Children(4) = value
				End Set
			End Property

			Private Property DMG_IFace_Loop2010BA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.DMG Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA.DMG
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.DMG)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.DMG)
					Children(4) = value
				End Set
			End Property
			Private Property DMG_IFace_1_Loop2010CA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.DMG Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA.DMG
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.DMG)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.DMG)
					Children(4) = value
				End Set
			End Property
			Private Property DMG_IFace_2_Loop2010BA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.DMG Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA.DMG
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.DMG)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.DMG)
					Children(4) = value
				End Set
			End Property
			Private Property DMG_IFace_3_Loop2010CA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.DMG Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA.DMG
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.DMG)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.DMG)
					Children(4) = value
				End Set
			End Property
			Private Property DMG_IFace_4_Loop2010BA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.DMG Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA.DMG
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.DMG)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.DMG)
					Children(4) = value
				End Set
			End Property
			Private Property DMG_IFace_5_Loop2010CA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.DMG Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA.DMG
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.DMG)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.DMG)
					Children(4) = value
				End Set
			End Property
			Friend ReadOnly Property REF_Obj As SegmentContainer(Of Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Loops.Loop2010.REF
				Get
					Return CType(Children(5), SegmentContainer(Of Dom.Segments.REF))
				End Get
			End Property

			Private REFSubset_Loop2010AA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF, Dom.Segments.REF)
			Private Property REF_IFace_Loop2010AA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA.REF
				Get
					If REFSubset_Loop2010AA_Obj Is Nothing Then
						REFSubset_Loop2010AA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF, Dom.Segments.REF)(Children(5), 1, 2, 6588)
					End If

					If REFSubset_Loop2010AA_Obj.Count > 0 Then
						Return REFSubset_Loop2010AA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF)
					If REFSubset_Loop2010AA_Obj Is Nothing Then
						REFSubset_Loop2010AA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF, Dom.Segments.REF)(Children(5), 1, 2, 6588)
					End If

					If REFSubset_Loop2010AA_Obj.Count = 0 Then
						REFSubset_Loop2010AA_Obj.Add(value)
					Else
						REFSubset_Loop2010AA_Obj(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_Loop2010AA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF_1, Dom.Segments.REF)
			Private ReadOnly Property REF_1_Loop2010AA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF_1, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA.REF_1
				Get
					If REF_1Subset_Loop2010AA_Obj Is Nothing Then
						REF_1Subset_Loop2010AA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF_1, Dom.Segments.REF)(Children(5), 2, 2, 7884)
					End If

					Return REF_1Subset_Loop2010AA_Obj
				End Get
			End Property
			Private REFSubset_1_Loop2010AC_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF, Dom.Segments.REF)
			Private Property REF_IFace_2_Loop2010AC_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC.REF
				Get
					If REFSubset_1_Loop2010AC_Obj Is Nothing Then
						REFSubset_1_Loop2010AC_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF, Dom.Segments.REF)(Children(5), 1, 3, 6696)
					End If

					If REFSubset_1_Loop2010AC_Obj.Count > 0 Then
						Return REFSubset_1_Loop2010AC_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF)
					If REFSubset_1_Loop2010AC_Obj Is Nothing Then
						REFSubset_1_Loop2010AC_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF, Dom.Segments.REF)(Children(5), 1, 3, 6696)
					End If

					If REFSubset_1_Loop2010AC_Obj.Count = 0 Then
						REFSubset_1_Loop2010AC_Obj.Add(value)
					Else
						REFSubset_1_Loop2010AC_Obj(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_1_Loop2010AC_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_3_Loop2010AC_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC.REF_1
				Get
					If REF_1Subset_1_Loop2010AC_Obj Is Nothing Then
						REF_1Subset_1_Loop2010AC_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF_1, Dom.Segments.REF)(Children(5), 1, 3, 239976)
					End If

					If REF_1Subset_1_Loop2010AC_Obj.Count > 0 Then
						Return REF_1Subset_1_Loop2010AC_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF_1)
					If REF_1Subset_1_Loop2010AC_Obj Is Nothing Then
						REF_1Subset_1_Loop2010AC_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF_1, Dom.Segments.REF)(Children(5), 1, 3, 239976)
					End If

					If REF_1Subset_1_Loop2010AC_Obj.Count = 0 Then
						REF_1Subset_1_Loop2010AC_Obj.Add(value)
					Else
						REF_1Subset_1_Loop2010AC_Obj(0) = value
					End If
				End Set
			End Property
			Private REFSubset_2_Loop2010BA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF, Dom.Segments.REF)
			Private Property REF_IFace_4_Loop2010BA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA.REF
				Get
					If REFSubset_2_Loop2010BA_Obj Is Nothing Then
						REFSubset_2_Loop2010BA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF, Dom.Segments.REF)(Children(5), 1, 4, 6588)
					End If

					If REFSubset_2_Loop2010BA_Obj.Count > 0 Then
						Return REFSubset_2_Loop2010BA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF)
					If REFSubset_2_Loop2010BA_Obj Is Nothing Then
						REFSubset_2_Loop2010BA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF, Dom.Segments.REF)(Children(5), 1, 4, 6588)
					End If

					If REFSubset_2_Loop2010BA_Obj.Count = 0 Then
						REFSubset_2_Loop2010BA_Obj.Add(value)
					Else
						REFSubset_2_Loop2010BA_Obj(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_2_Loop2010BA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_5_Loop2010BA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA.REF_1
				Get
					If REF_1Subset_2_Loop2010BA_Obj Is Nothing Then
						REF_1Subset_2_Loop2010BA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF_1, Dom.Segments.REF)(Children(5), 1, 4, 7884)
					End If

					If REF_1Subset_2_Loop2010BA_Obj.Count > 0 Then
						Return REF_1Subset_2_Loop2010BA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF_1)
					If REF_1Subset_2_Loop2010BA_Obj Is Nothing Then
						REF_1Subset_2_Loop2010BA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF_1, Dom.Segments.REF)(Children(5), 1, 4, 7884)
					End If

					If REF_1Subset_2_Loop2010BA_Obj.Count = 0 Then
						REF_1Subset_2_Loop2010BA_Obj.Add(value)
					Else
						REF_1Subset_2_Loop2010BA_Obj(0) = value
					End If
				End Set
			End Property
			Private REFSubset_3_Loop2010BB_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2010BB_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB.REF
				Get
					If REFSubset_3_Loop2010BB_Obj Is Nothing Then
						REFSubset_3_Loop2010BB_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.REF, Dom.Segments.REF)(Children(5), 3, 5, 6588)
					End If

					Return REFSubset_3_Loop2010BB_Obj
				End Get
			End Property
			Private REF_1Subset_3_Loop2010BB_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.REF_1, Dom.Segments.REF)
			Private ReadOnly Property REF_1_Loop2010BB_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.REF_1, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB.REF_1
				Get
					If REF_1Subset_3_Loop2010BB_Obj Is Nothing Then
						REF_1Subset_3_Loop2010BB_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.REF_1, Dom.Segments.REF)(Children(5), 2, 5, 9180)
					End If

					Return REF_1Subset_3_Loop2010BB_Obj
				End Get
			End Property
			Private REFSubset_4_Loop2010CA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF, Dom.Segments.REF)
			Private Property REF_IFace_8_Loop2010CA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA.REF
				Get
					If REFSubset_4_Loop2010CA_Obj Is Nothing Then
						REFSubset_4_Loop2010CA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF, Dom.Segments.REF)(Children(5), 1, 8, 7884)
					End If

					If REFSubset_4_Loop2010CA_Obj.Count > 0 Then
						Return REFSubset_4_Loop2010CA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF)
					If REFSubset_4_Loop2010CA_Obj Is Nothing Then
						REFSubset_4_Loop2010CA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF, Dom.Segments.REF)(Children(5), 1, 8, 7884)
					End If

					If REFSubset_4_Loop2010CA_Obj.Count = 0 Then
						REFSubset_4_Loop2010CA_Obj.Add(value)
					Else
						REFSubset_4_Loop2010CA_Obj(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_4_Loop2010CA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_9_Loop2010CA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA.REF_1
				Get
					If REF_1Subset_4_Loop2010CA_Obj Is Nothing Then
						REF_1Subset_4_Loop2010CA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF_1, Dom.Segments.REF)(Children(5), 1, 8, 101196)
					End If

					If REF_1Subset_4_Loop2010CA_Obj.Count > 0 Then
						Return REF_1Subset_4_Loop2010CA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF_1)
					If REF_1Subset_4_Loop2010CA_Obj Is Nothing Then
						REF_1Subset_4_Loop2010CA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF_1, Dom.Segments.REF)(Children(5), 1, 8, 101196)
					End If

					If REF_1Subset_4_Loop2010CA_Obj.Count = 0 Then
						REF_1Subset_4_Loop2010CA_Obj.Add(value)
					Else
						REF_1Subset_4_Loop2010CA_Obj(0) = value
					End If
				End Set
			End Property
			Private REFSubset_5_Loop2010AA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF, Dom.Segments.REF)
			Private Property REF_IFace_10_Loop2010AA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA.REF
				Get
					If REFSubset_5_Loop2010AA_Obj_1 Is Nothing Then
						REFSubset_5_Loop2010AA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF, Dom.Segments.REF)(Children(5), 1, 2, 6588)
					End If

					If REFSubset_5_Loop2010AA_Obj_1.Count > 0 Then
						Return REFSubset_5_Loop2010AA_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF)
					If REFSubset_5_Loop2010AA_Obj_1 Is Nothing Then
						REFSubset_5_Loop2010AA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF, Dom.Segments.REF)(Children(5), 1, 2, 6588)
					End If

					If REFSubset_5_Loop2010AA_Obj_1.Count = 0 Then
						REFSubset_5_Loop2010AA_Obj_1.Add(value)
					Else
						REFSubset_5_Loop2010AA_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_5_Loop2010AA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF_1, Dom.Segments.REF)
			Private ReadOnly Property REF_1_Loop2010AA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF_1, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA.REF_1
				Get
					If REF_1Subset_5_Loop2010AA_Obj_1 Is Nothing Then
						REF_1Subset_5_Loop2010AA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF_1, Dom.Segments.REF)(Children(5), 2, 2, 7884)
					End If

					Return REF_1Subset_5_Loop2010AA_Obj_1
				End Get
			End Property
			Private REFSubset_6_Loop2010AC_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF, Dom.Segments.REF)
			Private Property REF_IFace_12_Loop2010AC_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC.REF
				Get
					If REFSubset_6_Loop2010AC_Obj_1 Is Nothing Then
						REFSubset_6_Loop2010AC_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF, Dom.Segments.REF)(Children(5), 1, 3, 216)
					End If

					If REFSubset_6_Loop2010AC_Obj_1.Count > 0 Then
						Return REFSubset_6_Loop2010AC_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF)
					If REFSubset_6_Loop2010AC_Obj_1 Is Nothing Then
						REFSubset_6_Loop2010AC_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF, Dom.Segments.REF)(Children(5), 1, 3, 216)
					End If

					If REFSubset_6_Loop2010AC_Obj_1.Count = 0 Then
						REFSubset_6_Loop2010AC_Obj_1.Add(value)
					Else
						REFSubset_6_Loop2010AC_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_6_Loop2010AC_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_13_Loop2010AC_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC.REF_1
				Get
					If REF_1Subset_6_Loop2010AC_Obj_1 Is Nothing Then
						REF_1Subset_6_Loop2010AC_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF_1, Dom.Segments.REF)(Children(5), 1, 3, 233496)
					End If

					If REF_1Subset_6_Loop2010AC_Obj_1.Count > 0 Then
						Return REF_1Subset_6_Loop2010AC_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF_1)
					If REF_1Subset_6_Loop2010AC_Obj_1 Is Nothing Then
						REF_1Subset_6_Loop2010AC_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF_1, Dom.Segments.REF)(Children(5), 1, 3, 233496)
					End If

					If REF_1Subset_6_Loop2010AC_Obj_1.Count = 0 Then
						REF_1Subset_6_Loop2010AC_Obj_1.Add(value)
					Else
						REF_1Subset_6_Loop2010AC_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REFSubset_7_Loop2010BA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF, Dom.Segments.REF)
			Private Property REF_IFace_14_Loop2010BA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA.REF
				Get
					If REFSubset_7_Loop2010BA_Obj_1 Is Nothing Then
						REFSubset_7_Loop2010BA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF, Dom.Segments.REF)(Children(5), 1, 4, 6588)
					End If

					If REFSubset_7_Loop2010BA_Obj_1.Count > 0 Then
						Return REFSubset_7_Loop2010BA_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF)
					If REFSubset_7_Loop2010BA_Obj_1 Is Nothing Then
						REFSubset_7_Loop2010BA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF, Dom.Segments.REF)(Children(5), 1, 4, 6588)
					End If

					If REFSubset_7_Loop2010BA_Obj_1.Count = 0 Then
						REFSubset_7_Loop2010BA_Obj_1.Add(value)
					Else
						REFSubset_7_Loop2010BA_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_7_Loop2010BA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_15_Loop2010BA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA.REF_1
				Get
					If REF_1Subset_7_Loop2010BA_Obj_1 Is Nothing Then
						REF_1Subset_7_Loop2010BA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF_1, Dom.Segments.REF)(Children(5), 1, 4, 7884)
					End If

					If REF_1Subset_7_Loop2010BA_Obj_1.Count > 0 Then
						Return REF_1Subset_7_Loop2010BA_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF_1)
					If REF_1Subset_7_Loop2010BA_Obj_1 Is Nothing Then
						REF_1Subset_7_Loop2010BA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF_1, Dom.Segments.REF)(Children(5), 1, 4, 7884)
					End If

					If REF_1Subset_7_Loop2010BA_Obj_1.Count = 0 Then
						REF_1Subset_7_Loop2010BA_Obj_1.Add(value)
					Else
						REF_1Subset_7_Loop2010BA_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REFSubset_8_Loop2010BB_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2010BB_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB.REF
				Get
					If REFSubset_8_Loop2010BB_Obj_1 Is Nothing Then
						REFSubset_8_Loop2010BB_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF, Dom.Segments.REF)(Children(5), 3, 5, 6588)
					End If

					Return REFSubset_8_Loop2010BB_Obj_1
				End Get
			End Property
			Private REF_1Subset_8_Loop2010BB_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_17_Loop2010BB_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB.REF_1
				Get
					If REF_1Subset_8_Loop2010BB_Obj_1 Is Nothing Then
						REF_1Subset_8_Loop2010BB_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF_1, Dom.Segments.REF)(Children(5), 1, 5, 7884)
					End If

					If REF_1Subset_8_Loop2010BB_Obj_1.Count > 0 Then
						Return REF_1Subset_8_Loop2010BB_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF_1)
					If REF_1Subset_8_Loop2010BB_Obj_1 Is Nothing Then
						REF_1Subset_8_Loop2010BB_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF_1, Dom.Segments.REF)(Children(5), 1, 5, 7884)
					End If

					If REF_1Subset_8_Loop2010BB_Obj_1.Count = 0 Then
						REF_1Subset_8_Loop2010BB_Obj_1.Add(value)
					Else
						REF_1Subset_8_Loop2010BB_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REFSubset_9_Loop2010CA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF, Dom.Segments.REF)
			Private Property REF_IFace_18_Loop2010CA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA.REF
				Get
					If REFSubset_9_Loop2010CA_Obj_1 Is Nothing Then
						REFSubset_9_Loop2010CA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF, Dom.Segments.REF)(Children(5), 1, 8, 7884)
					End If

					If REFSubset_9_Loop2010CA_Obj_1.Count > 0 Then
						Return REFSubset_9_Loop2010CA_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF)
					If REFSubset_9_Loop2010CA_Obj_1 Is Nothing Then
						REFSubset_9_Loop2010CA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF, Dom.Segments.REF)(Children(5), 1, 8, 7884)
					End If

					If REFSubset_9_Loop2010CA_Obj_1.Count = 0 Then
						REFSubset_9_Loop2010CA_Obj_1.Add(value)
					Else
						REFSubset_9_Loop2010CA_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_9_Loop2010CA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_19_Loop2010CA_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA.REF_1
				Get
					If REF_1Subset_9_Loop2010CA_Obj_1 Is Nothing Then
						REF_1Subset_9_Loop2010CA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF_1, Dom.Segments.REF)(Children(5), 1, 8, 101196)
					End If

					If REF_1Subset_9_Loop2010CA_Obj_1.Count > 0 Then
						Return REF_1Subset_9_Loop2010CA_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF_1)
					If REF_1Subset_9_Loop2010CA_Obj_1 Is Nothing Then
						REF_1Subset_9_Loop2010CA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF_1, Dom.Segments.REF)(Children(5), 1, 8, 101196)
					End If

					If REF_1Subset_9_Loop2010CA_Obj_1.Count = 0 Then
						REF_1Subset_9_Loop2010CA_Obj_1.Add(value)
					Else
						REF_1Subset_9_Loop2010CA_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REFSubset_10_Loop2010AA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.REF, Dom.Segments.REF)
			Private Property REF_IFace_20_Loop2010AA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA.REF
				Get
					If REFSubset_10_Loop2010AA_Obj_2 Is Nothing Then
						REFSubset_10_Loop2010AA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.REF, Dom.Segments.REF)(Children(5), 1, 2, 6588)
					End If

					If REFSubset_10_Loop2010AA_Obj_2.Count > 0 Then
						Return REFSubset_10_Loop2010AA_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.REF)
					If REFSubset_10_Loop2010AA_Obj_2 Is Nothing Then
						REFSubset_10_Loop2010AA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.REF, Dom.Segments.REF)(Children(5), 1, 2, 6588)
					End If

					If REFSubset_10_Loop2010AA_Obj_2.Count = 0 Then
						REFSubset_10_Loop2010AA_Obj_2.Add(value)
					Else
						REFSubset_10_Loop2010AA_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REFSubset_11_Loop2010AC_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF, Dom.Segments.REF)
			Private Property REF_IFace_21_Loop2010AC_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC.REF
				Get
					If REFSubset_11_Loop2010AC_Obj_2 Is Nothing Then
						REFSubset_11_Loop2010AC_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF, Dom.Segments.REF)(Children(5), 1, 3, 252)
					End If

					If REFSubset_11_Loop2010AC_Obj_2.Count > 0 Then
						Return REFSubset_11_Loop2010AC_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF)
					If REFSubset_11_Loop2010AC_Obj_2 Is Nothing Then
						REFSubset_11_Loop2010AC_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF, Dom.Segments.REF)(Children(5), 1, 3, 252)
					End If

					If REFSubset_11_Loop2010AC_Obj_2.Count = 0 Then
						REFSubset_11_Loop2010AC_Obj_2.Add(value)
					Else
						REFSubset_11_Loop2010AC_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_10_Loop2010AC_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_22_Loop2010AC_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC.REF_1
				Get
					If REF_1Subset_10_Loop2010AC_Obj_2 Is Nothing Then
						REF_1Subset_10_Loop2010AC_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF_1, Dom.Segments.REF)(Children(5), 1, 3, 233532)
					End If

					If REF_1Subset_10_Loop2010AC_Obj_2.Count > 0 Then
						Return REF_1Subset_10_Loop2010AC_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF_1)
					If REF_1Subset_10_Loop2010AC_Obj_2 Is Nothing Then
						REF_1Subset_10_Loop2010AC_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF_1, Dom.Segments.REF)(Children(5), 1, 3, 233532)
					End If

					If REF_1Subset_10_Loop2010AC_Obj_2.Count = 0 Then
						REF_1Subset_10_Loop2010AC_Obj_2.Add(value)
					Else
						REF_1Subset_10_Loop2010AC_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REFSubset_12_Loop2010BA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF, Dom.Segments.REF)
			Private Property REF_IFace_23_Loop2010BA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA.REF
				Get
					If REFSubset_12_Loop2010BA_Obj_2 Is Nothing Then
						REFSubset_12_Loop2010BA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF, Dom.Segments.REF)(Children(5), 1, 4, 6588)
					End If

					If REFSubset_12_Loop2010BA_Obj_2.Count > 0 Then
						Return REFSubset_12_Loop2010BA_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF)
					If REFSubset_12_Loop2010BA_Obj_2 Is Nothing Then
						REFSubset_12_Loop2010BA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF, Dom.Segments.REF)(Children(5), 1, 4, 6588)
					End If

					If REFSubset_12_Loop2010BA_Obj_2.Count = 0 Then
						REFSubset_12_Loop2010BA_Obj_2.Add(value)
					Else
						REFSubset_12_Loop2010BA_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_11_Loop2010BA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_24_Loop2010BA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA.REF_1
				Get
					If REF_1Subset_11_Loop2010BA_Obj_2 Is Nothing Then
						REF_1Subset_11_Loop2010BA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF_1, Dom.Segments.REF)(Children(5), 1, 4, 7884)
					End If

					If REF_1Subset_11_Loop2010BA_Obj_2.Count > 0 Then
						Return REF_1Subset_11_Loop2010BA_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF_1)
					If REF_1Subset_11_Loop2010BA_Obj_2 Is Nothing Then
						REF_1Subset_11_Loop2010BA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF_1, Dom.Segments.REF)(Children(5), 1, 4, 7884)
					End If

					If REF_1Subset_11_Loop2010BA_Obj_2.Count = 0 Then
						REF_1Subset_11_Loop2010BA_Obj_2.Add(value)
					Else
						REF_1Subset_11_Loop2010BA_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REFSubset_13_Loop2010BB_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2010BB_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB.REF
				Get
					If REFSubset_13_Loop2010BB_Obj_2 Is Nothing Then
						REFSubset_13_Loop2010BB_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF, Dom.Segments.REF)(Children(5), 3, 6, 6588)
					End If

					Return REFSubset_13_Loop2010BB_Obj_2
				End Get
			End Property
			Private REF_1Subset_12_Loop2010BB_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_26_Loop2010BB_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB.REF_1
				Get
					If REF_1Subset_12_Loop2010BB_Obj_2 Is Nothing Then
						REF_1Subset_12_Loop2010BB_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF_1, Dom.Segments.REF)(Children(5), 1, 6, 7884)
					End If

					If REF_1Subset_12_Loop2010BB_Obj_2.Count > 0 Then
						Return REF_1Subset_12_Loop2010BB_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF_1)
					If REF_1Subset_12_Loop2010BB_Obj_2 Is Nothing Then
						REF_1Subset_12_Loop2010BB_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF_1, Dom.Segments.REF)(Children(5), 1, 6, 7884)
					End If

					If REF_1Subset_12_Loop2010BB_Obj_2.Count = 0 Then
						REF_1Subset_12_Loop2010BB_Obj_2.Add(value)
					Else
						REF_1Subset_12_Loop2010BB_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REFSubset_14_Loop2010CA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF, Dom.Segments.REF)
			Private Property REF_IFace_27_Loop2010CA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA.REF
				Get
					If REFSubset_14_Loop2010CA_Obj_2 Is Nothing Then
						REFSubset_14_Loop2010CA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF, Dom.Segments.REF)(Children(5), 1, 8, 7884)
					End If

					If REFSubset_14_Loop2010CA_Obj_2.Count > 0 Then
						Return REFSubset_14_Loop2010CA_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF)
					If REFSubset_14_Loop2010CA_Obj_2 Is Nothing Then
						REFSubset_14_Loop2010CA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF, Dom.Segments.REF)(Children(5), 1, 8, 7884)
					End If

					If REFSubset_14_Loop2010CA_Obj_2.Count = 0 Then
						REFSubset_14_Loop2010CA_Obj_2.Add(value)
					Else
						REFSubset_14_Loop2010CA_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_13_Loop2010CA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_28_Loop2010CA_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA.REF_1
				Get
					If REF_1Subset_13_Loop2010CA_Obj_2 Is Nothing Then
						REF_1Subset_13_Loop2010CA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF_1, Dom.Segments.REF)(Children(5), 1, 8, 101196)
					End If

					If REF_1Subset_13_Loop2010CA_Obj_2.Count > 0 Then
						Return REF_1Subset_13_Loop2010CA_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF_1)
					If REF_1Subset_13_Loop2010CA_Obj_2 Is Nothing Then
						REF_1Subset_13_Loop2010CA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF_1, Dom.Segments.REF)(Children(5), 1, 8, 101196)
					End If

					If REF_1Subset_13_Loop2010CA_Obj_2.Count = 0 Then
						REF_1Subset_13_Loop2010CA_Obj_2.Add(value)
					Else
						REF_1Subset_13_Loop2010CA_Obj_2(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property PER_Obj As SegmentContainer(Of Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Loops.Loop2010.PER
				Get
					Return CType(Children(6), SegmentContainer(Of Dom.Segments.PER))
				End Get
			End Property

			Private PERSubset_Loop2010AA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.PER, Dom.Segments.PER)
			Private ReadOnly Property PER_Loop2010AA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.PER, Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA.PER
				Get
					If PERSubset_Loop2010AA_Obj Is Nothing Then
						PERSubset_Loop2010AA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.PER, Dom.Segments.PER)(Children(6), 2, 2, 144)
					End If

					Return PERSubset_Loop2010AA_Obj
				End Get
			End Property
			Private PERSubset_1_Loop2010BA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.PER, Dom.Segments.PER)
			Private Property PER_IFace_1_Loop2010BA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.PER Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA.PER
				Get
					If PERSubset_1_Loop2010BA_Obj Is Nothing Then
						PERSubset_1_Loop2010BA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.PER, Dom.Segments.PER)(Children(6), 1, 4, 144)
					End If

					If PERSubset_1_Loop2010BA_Obj.Count > 0 Then
						Return PERSubset_1_Loop2010BA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.PER)
					If PERSubset_1_Loop2010BA_Obj Is Nothing Then
						PERSubset_1_Loop2010BA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.PER, Dom.Segments.PER)(Children(6), 1, 4, 144)
					End If

					If PERSubset_1_Loop2010BA_Obj.Count = 0 Then
						PERSubset_1_Loop2010BA_Obj.Add(value)
					Else
						PERSubset_1_Loop2010BA_Obj(0) = value
					End If
				End Set
			End Property
			Private PERSubset_2_Loop2010CA_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.PER, Dom.Segments.PER)
			Private Property PER_IFace_2_Loop2010CA_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.PER Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA.PER
				Get
					If PERSubset_2_Loop2010CA_Obj Is Nothing Then
						PERSubset_2_Loop2010CA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.PER, Dom.Segments.PER)(Children(6), 1, 8, 144)
					End If

					If PERSubset_2_Loop2010CA_Obj.Count > 0 Then
						Return PERSubset_2_Loop2010CA_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.PER)
					If PERSubset_2_Loop2010CA_Obj Is Nothing Then
						PERSubset_2_Loop2010CA_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.PER, Dom.Segments.PER)(Children(6), 1, 8, 144)
					End If

					If PERSubset_2_Loop2010CA_Obj.Count = 0 Then
						PERSubset_2_Loop2010CA_Obj.Add(value)
					Else
						PERSubset_2_Loop2010CA_Obj(0) = value
					End If
				End Set
			End Property
			Private PERSubset_3_Loop2010AA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.PER, Dom.Segments.PER)
			Private ReadOnly Property PER_Loop2010AA_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.PER, Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA.PER
				Get
					If PERSubset_3_Loop2010AA_Obj_1 Is Nothing Then
						PERSubset_3_Loop2010AA_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.PER, Dom.Segments.PER)(Children(6), 2, 2, 144)
					End If

					Return PERSubset_3_Loop2010AA_Obj_1
				End Get
			End Property
			Private PERSubset_4_Loop2010AA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.PER, Dom.Segments.PER)
			Private ReadOnly Property PER_Loop2010AA_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.PER, Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA.PER
				Get
					If PERSubset_4_Loop2010AA_Obj_2 Is Nothing Then
						PERSubset_4_Loop2010AA_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.PER, Dom.Segments.PER)(Children(6), 2, 2, 144)
					End If

					Return PERSubset_4_Loop2010AA_Obj_2
				End Get
			End Property

		End Class
		Partial Friend Class Loop2300_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2300,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.CLM_Obj),
													New SegmentContainer(Of Dom.Segments.DTP)(150, 2, 1350),
													CType(Nothing, Dom.Segments.CL1_Obj),
													CType(Nothing, Dom.Segments.DN1_Obj),
													New SegmentContainer(Of Dom.Segments.DN2)(35, 2, 1500),
													New SegmentContainer(Of Dom.Segments.PWK)(10, 2, 1550),
													CType(Nothing, Dom.Segments.CN1_Obj),
													CType(Nothing, Dom.Segments.DSB_Obj),
													CType(Nothing, Dom.Segments.UR_Obj),
													New SegmentContainer(Of Dom.Segments.AMT)(40, 2, 1750),
													New SegmentContainer(Of Dom.Segments.REF)(30, 2, 1800),
													New SegmentContainer(Of Dom.Segments.K3)(10, 2, 1850),
													New SegmentContainer(Of Dom.Segments.NTE)(20, 2, 1900),
													CType(Nothing, Dom.Segments.CR1_Obj),
													CType(Nothing, Dom.Segments.CR2_Obj),
													CType(Nothing, Dom.Segments.CR3_Obj),
													New SegmentContainer(Of Dom.Segments.CR4)(3, 2, 2100),
													CType(Nothing, Dom.Segments.CR5_Obj),
													CType(Nothing, Dom.Segments.CR6_Obj),
													New SegmentContainer(Of Dom.Segments.CR8)(9, 2, 2190),
													New SegmentContainer(Of Dom.Segments.CRC)(100, 2, 2200),
													New SegmentContainer(Of Dom.Segments.HI)(25, 2, 2310),
													New SegmentContainer(Of Dom.Segments.QTY)(10, 2, 2400),
													CType(Nothing, Dom.Segments.HCP_Obj),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2305)(6, 2, 2420),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2310)(9, 2, 2500),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2320)(10, 2, 2900),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2400)(0, 2, 3650)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "CLM", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "DTP", ReadAction.PopulateSegment, 2, False),
									New ReaderState(2, "DTP", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "CL1", ReadAction.PopulateSegment, 4, False),
									New ReaderState(2, "CL1", ReadAction.PopulateSegment, 4, False),
									New ReaderState(1, "DN1", ReadAction.PopulateSegment, 5, False),
									New ReaderState(2, "DN1", ReadAction.PopulateSegment, 5, False),
									New ReaderState(4, "DN1", ReadAction.PopulateSegment, 5, False),
									New ReaderState(1, "DN2", ReadAction.PopulateSegment, 6, False),
									New ReaderState(2, "DN2", ReadAction.PopulateSegment, 6, False),
									New ReaderState(4, "DN2", ReadAction.PopulateSegment, 6, False),
									New ReaderState(5, "DN2", ReadAction.PopulateSegment, 6, False),
									New ReaderState(6, "DN2", ReadAction.PopulateSegment, 6, False),
									New ReaderState(1, "PWK", ReadAction.PopulateSegment, 8, False),
									New ReaderState(2, "PWK", ReadAction.PopulateSegment, 8, False),
									New ReaderState(4, "PWK", ReadAction.PopulateSegment, 8, False),
									New ReaderState(5, "PWK", ReadAction.PopulateSegment, 8, False),
									New ReaderState(6, "PWK", ReadAction.PopulateSegment, 8, False),
									New ReaderState(8, "PWK", ReadAction.PopulateSegment, 8, False),
									New ReaderState(1, "CN1", ReadAction.PopulateSegment, 10, False),
									New ReaderState(2, "CN1", ReadAction.PopulateSegment, 10, False),
									New ReaderState(4, "CN1", ReadAction.PopulateSegment, 10, False),
									New ReaderState(5, "CN1", ReadAction.PopulateSegment, 10, False),
									New ReaderState(6, "CN1", ReadAction.PopulateSegment, 10, False),
									New ReaderState(8, "CN1", ReadAction.PopulateSegment, 10, False),
									New ReaderState(1, "DSB", ReadAction.PopulateSegment, 11, False),
									New ReaderState(2, "DSB", ReadAction.PopulateSegment, 11, False),
									New ReaderState(4, "DSB", ReadAction.PopulateSegment, 11, False),
									New ReaderState(5, "DSB", ReadAction.PopulateSegment, 11, False),
									New ReaderState(6, "DSB", ReadAction.PopulateSegment, 11, False),
									New ReaderState(8, "DSB", ReadAction.PopulateSegment, 11, False),
									New ReaderState(10, "DSB", ReadAction.PopulateSegment, 11, False),
									New ReaderState(1, "UR", ReadAction.PopulateSegment, 12, False),
									New ReaderState(2, "UR", ReadAction.PopulateSegment, 12, False),
									New ReaderState(4, "UR", ReadAction.PopulateSegment, 12, False),
									New ReaderState(5, "UR", ReadAction.PopulateSegment, 12, False),
									New ReaderState(6, "UR", ReadAction.PopulateSegment, 12, False),
									New ReaderState(8, "UR", ReadAction.PopulateSegment, 12, False),
									New ReaderState(10, "UR", ReadAction.PopulateSegment, 12, False),
									New ReaderState(11, "UR", ReadAction.PopulateSegment, 12, False),
									New ReaderState(1, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(2, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(4, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(5, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(6, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(8, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(10, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(11, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(12, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(13, "AMT", ReadAction.PopulateSegment, 13, False),
									New ReaderState(1, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(2, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(4, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(5, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(6, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(8, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(10, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(11, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(12, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(13, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(15, "REF", ReadAction.PopulateSegment, 15, False),
									New ReaderState(1, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(2, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(4, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(5, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(6, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(8, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(10, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(11, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(12, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(13, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(15, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(17, "K3", ReadAction.PopulateSegment, 17, False),
									New ReaderState(1, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(2, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(4, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(5, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(6, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(8, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(10, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(11, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(12, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(13, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(15, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(17, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(19, "NTE", ReadAction.PopulateSegment, 19, False),
									New ReaderState(1, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(2, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(4, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(5, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(6, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(8, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(10, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(11, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(12, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(13, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(15, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(17, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(19, "CR1", ReadAction.PopulateSegment, 21, False),
									New ReaderState(1, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(2, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(4, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(5, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(6, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(8, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(10, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(11, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(12, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(13, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(15, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(17, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(19, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(21, "CR2", ReadAction.PopulateSegment, 22, False),
									New ReaderState(1, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(2, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(4, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(5, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(6, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(8, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(10, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(11, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(12, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(13, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(15, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(17, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(19, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(21, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(22, "CR3", ReadAction.PopulateSegment, 23, False),
									New ReaderState(1, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(2, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(4, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(5, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(6, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(8, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(10, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(11, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(12, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(13, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(15, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(17, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(19, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(21, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(22, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(23, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(24, "CR4", ReadAction.PopulateSegment, 24, False),
									New ReaderState(1, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(2, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(4, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(5, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(6, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(8, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(10, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(11, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(12, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(13, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(15, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(17, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(19, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(21, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(22, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(23, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(24, "CR5", ReadAction.PopulateSegment, 26, False),
									New ReaderState(1, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(2, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(4, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(5, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(6, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(8, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(10, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(11, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(12, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(13, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(15, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(17, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(19, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(21, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(22, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(23, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(24, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(26, "CR6", ReadAction.PopulateSegment, 27, False),
									New ReaderState(1, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(2, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(4, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(5, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(6, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(8, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(10, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(11, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(12, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(13, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(15, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(17, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(19, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(21, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(22, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(23, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(24, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(26, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(27, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(28, "CR8", ReadAction.PopulateSegment, 28, False),
									New ReaderState(1, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(2, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(4, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(5, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(6, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(8, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(10, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(11, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(12, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(13, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(15, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(17, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(19, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(21, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(22, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(23, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(24, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(26, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(27, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(28, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(30, "CRC", ReadAction.PopulateSegment, 30, False),
									New ReaderState(1, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(2, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(4, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(5, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(6, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(8, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(10, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(11, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(12, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(13, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(15, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(17, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(19, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(21, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(22, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(23, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(24, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(26, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(27, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(28, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(30, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(32, "HI", ReadAction.PopulateSegment, 32, False),
									New ReaderState(1, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(2, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(4, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(5, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(6, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(8, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(10, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(11, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(12, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(13, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(15, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(17, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(19, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(21, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(22, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(23, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(24, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(26, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(27, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(28, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(30, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(32, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(34, "QTY", ReadAction.PopulateSegment, 34, False),
									New ReaderState(1, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(2, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(4, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(5, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(6, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(8, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(10, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(11, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(12, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(13, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(15, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(17, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(19, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(21, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(22, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(23, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(24, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(26, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(27, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(28, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(30, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(32, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(34, "HCP", ReadAction.PopulateSegment, 36, False),
									New ReaderState(1, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(2, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(4, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(5, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(6, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(8, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(10, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(11, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(12, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(13, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(15, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(17, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(19, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(21, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(22, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(23, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(24, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(26, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(27, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(28, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(30, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(32, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(34, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(36, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(37, "CR7", ReadAction.PopulateLoop, 37, False),
									New ReaderState(1, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(2, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(4, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(5, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(6, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(8, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(10, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(11, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(12, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(13, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(15, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(17, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(19, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(21, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(22, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(23, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(24, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(26, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(27, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(28, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(30, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(32, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(34, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(36, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(37, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(39, "NM1", ReadAction.PopulateLoop, 39, False),
									New ReaderState(1, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(2, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(4, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(5, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(6, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(8, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(10, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(11, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(12, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(13, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(15, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(17, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(19, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(21, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(22, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(23, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(24, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(26, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(27, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(28, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(30, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(32, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(34, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(36, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(37, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(39, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(41, "SBR", ReadAction.PopulateLoop, 41, False),
									New ReaderState(1, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(2, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(4, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(5, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(6, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(8, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(10, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(11, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(12, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(13, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(15, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(17, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(19, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(21, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(22, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(23, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(24, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(26, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(27, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(28, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(30, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(32, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(34, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(36, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(37, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(39, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(41, "LX", ReadAction.PopulateLoop, 43, False),
									New ReaderState(43, "LX", ReadAction.PopulateLoop, 43, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "CLM", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CLM_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CLM_Obj = Seg
				ElseIf String.Compare(segmentName, "DTP", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DTP_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DTP_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.DTP_Obj)
					If MyBase.CompareKey(S2.DTP01, ";431;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6589
					ElseIf MyBase.CompareKey(S2.DTP01, ";454;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 9181
					ElseIf MyBase.CompareKey(S2.DTP01, ";304;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 11773
					ElseIf MyBase.CompareKey(S2.DTP01, ";453;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 14365
					ElseIf MyBase.CompareKey(S2.DTP01, ";439;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 16957
					ElseIf MyBase.CompareKey(S2.DTP01, ";484;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 18253
					ElseIf MyBase.CompareKey(S2.DTP01, ";455;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 19549
					ElseIf MyBase.CompareKey(S2.DTP01, ";471;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 24733
					ElseIf MyBase.CompareKey(S2.DTP01, ";314;360;361;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 27325
					ElseIf MyBase.CompareKey(S2.DTP01, ";297;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 29917
					ElseIf MyBase.CompareKey(S2.DTP01, ";296;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 31213
					ElseIf MyBase.CompareKey(S2.DTP01, ";435;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 32509
					ElseIf MyBase.CompareKey(S2.DTP01, ";096;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 33805
					ElseIf MyBase.CompareKey(S2.DTP01, ";090;091;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 38989
					ElseIf MyBase.CompareKey(S2.DTP01, ";444;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 41581
					ElseIf MyBase.CompareKey(S2.DTP01, ";050;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 44173
					ElseIf MyBase.CompareKey(S2.DTP01, ";439;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 11773
					ElseIf MyBase.CompareKey(S2.DTP01, ";452;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 14365
					ElseIf MyBase.CompareKey(S2.DTP01, ";472;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 16957
					ElseIf MyBase.CompareKey(S2.DTP01, ";050;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 18253
					ElseIf MyBase.CompareKey(S2.DTP01, ";096;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6589
					ElseIf MyBase.CompareKey(S2.DTP01, ";434;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 7885
					ElseIf MyBase.CompareKey(S2.DTP01, ";435;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 9181
					ElseIf MyBase.CompareKey(S2.DTP01, ";050;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 242461
					End If
				ElseIf String.Compare(segmentName, "CL1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CL1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CL1_Obj = Seg
				ElseIf String.Compare(segmentName, "DN1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DN1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DN1_Obj = Seg
				ElseIf String.Compare(segmentName, "DN2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DN2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DN2_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "PWK", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PWK_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PWK_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.PWK_Obj)
					If MyBase.CompareKey(String.Format("{0}:{1}", If(S2.PWK01 IsNot Nothing, S2.PWK01, String.Empty), If(S2.PWK02 IsNot Nothing, S2.PWK02, String.Empty)), ";03:AA;03:BM;03:EL;03:EM;03:FT;03:FX;04:AA;04:BM;04:EL;04:EM;04:FT;04:FX;05:AA;05:BM;05:EL;05:EM;05:FT;05:FX;06:AA;06:BM;06:EL;06:EM;06:FT;06:FX;07:AA;07:BM;07:EL;07:EM;07:FT;07:FX;08:AA;08:BM;08:EL;08:EM;08:FT;08:FX;09:AA;09:BM;09:EL;09:EM;09:FT;09:FX;10:AA;10:BM;10:EL;10:EM;10:FT;10:FX;11:AA;11:BM;11:EL;11:EM;11:FT;11:FX;13:AA;13:BM;13:EL;13:EM;13:FT;13:FX;15:AA;15:BM;15:EL;15:EM;15:FT;15:FX;21:AA;21:BM;21:EL;21:EM;21:FT;21:FX;A3:AA;A3:BM;A3:EL;A3:EM;A3:FT;A3:FX;A4:AA;A4:BM;A4:EL;A4:EM;A4:FT;A4:FX;AM:AA;AM:BM;AM:EL;AM:EM;AM:FT;AM:FX;AS:AA;AS:BM;AS:EL;AS:EM;AS:FT;AS:FX;B2:AA;B2:BM;B2:EL;B2:EM;B2:FT;B2:FX;B3:AA;B3:BM;B3:EL;B3:EM;B3:FT;B3:FX;B4:AA;B4:BM;B4:EL;B4:EM;B4:FT;B4:FX;BR:AA;BR:BM;BR:EL;BR:EM;BR:FT;BR:FX;BS:AA;BS:BM;BS:EL;BS:EM;BS:FT;BS:FX;BT:AA;BT:BM;BT:EL;BT:EM;BT:FT;BT:FX;CB:AA;CB:BM;CB:EL;CB:EM;CB:FT;CB:FX;CK:AA;CK:BM;CK:EL;CK:EM;CK:FT;CK:FX;CT:AA;CT:BM;CT:EL;CT:EM;CT:FT;CT:FX;D2:AA;D2:BM;D2:EL;D2:EM;D2:FT;D2:FX;DA:AA;DA:BM;DA:EL;DA:EM;DA:FT;DA:FX;DB:AA;DB:BM;DB:EL;DB:EM;DB:FT;DB:FX;DG:AA;DG:BM;DG:EL;DG:EM;DG:FT;DG:FX;DJ:AA;DJ:BM;DJ:EL;DJ:EM;DJ:FT;DJ:FX;DS:AA;DS:BM;DS:EL;DS:EM;DS:FT;DS:FX;EB:AA;EB:BM;EB:EL;EB:EM;EB:FT;EB:FX;HC:AA;HC:BM;HC:EL;HC:EM;HC:FT;HC:FX;HR:AA;HR:BM;HR:EL;HR:EM;HR:FT;HR:FX;I5:AA;I5:BM;I5:EL;I5:EM;I5:FT;I5:FX;IR:AA;IR:BM;IR:EL;IR:EM;IR:FT;IR:FX;LA:AA;LA:BM;LA:EL;LA:EM;LA:FT;LA:FX;M1:AA;M1:BM;M1:EL;M1:EM;M1:FT;M1:FX;MT:AA;MT:BM;MT:EL;MT:EM;MT:FT;MT:FX;NN:AA;NN:BM;NN:EL;NN:EM;NN:FT;NN:FX;OB:AA;OB:BM;OB:EL;OB:EM;OB:FT;OB:FX;OC:AA;OC:BM;OC:EL;OC:EM;OC:FT;OC:FX;OD:AA;OD:BM;OD:EL;OD:EM;OD:FT;OD:FX;OE:AA;OE:BM;OE:EL;OE:EM;OE:FT;OE:FX;OX:AA;OX:BM;OX:EL;OX:EM;OX:FT;OX:FX;OZ:AA;OZ:BM;OZ:EL;OZ:EM;OZ:FT;OZ:FX;P4:AA;P4:BM;P4:EL;P4:EM;P4:FT;P4:FX;P5:AA;P5:BM;P5:EL;P5:EM;P5:FT;P5:FX;PE:AA;PE:BM;PE:EL;PE:EM;PE:FT;PE:FX;PN:AA;PN:BM;PN:EL;PN:EM;PN:FT;PN:FX;PO:AA;PO:BM;PO:EL;PO:EM;PO:FT;PO:FX;PQ:AA;PQ:BM;PQ:EL;PQ:EM;PQ:FT;PQ:FX;PY:AA;PY:BM;PY:EL;PY:EM;PY:FT;PY:FX;PZ:AA;PZ:BM;PZ:EL;PZ:EM;PZ:FT;PZ:FX;RB:AA;RB:BM;RB:EL;RB:EM;RB:FT;RB:FX;RR:AA;RR:BM;RR:EL;RR:EM;RR:FT;RR:FX;RT:AA;RT:BM;RT:EL;RT:EM;RT:FT;RT:FX;RX:AA;RX:BM;RX:EL;RX:EM;RX:FT;RX:FX;SG:AA;SG:BM;SG:EL;SG:EM;SG:FT;SG:FX;V5:AA;V5:BM;V5:EL;V5:EM;V5:FT;V5:FX;XP:AA;XP:BM;XP:EL;XP:EM;XP:FT;XP:FX;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6661
					ElseIf MyBase.CompareKey(String.Format("{0}:{1}", If(S2.PWK01 IsNot Nothing, S2.PWK01, String.Empty), If(S2.PWK02 IsNot Nothing, S2.PWK02, String.Empty)), ";B4:AA;B4:BM;B4:EL;B4:EM;B4:FT;B4:FX;DA:AA;DA:BM;DA:EL;DA:EM;DA:FT;DA:FX;DG:AA;DG:BM;DG:EL;DG:EM;DG:FT;DG:FX;EB:AA;EB:BM;EB:EL;EB:EM;EB:FT;EB:FX;OZ:AA;OZ:BM;OZ:EL;OZ:EM;OZ:FT;OZ:FX;P6:AA;P6:BM;P6:EL;P6:EM;P6:FT;P6:FX;RB:AA;RB:BM;RB:EL;RB:EM;RB:FT;RB:FX;RR:AA;RR:BM;RR:EL;RR:EM;RR:FT;RR:FX;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6661
					ElseIf MyBase.CompareKey(String.Format("{0}:{1}", If(S2.PWK01 IsNot Nothing, S2.PWK01, String.Empty), If(S2.PWK02 IsNot Nothing, S2.PWK02, String.Empty)), ";03:AA;03:BM;03:EL;03:EM;03:FT;03:FX;04:AA;04:BM;04:EL;04:EM;04:FT;04:FX;05:AA;05:BM;05:EL;05:EM;05:FT;05:FX;06:AA;06:BM;06:EL;06:EM;06:FT;06:FX;07:AA;07:BM;07:EL;07:EM;07:FT;07:FX;08:AA;08:BM;08:EL;08:EM;08:FT;08:FX;09:AA;09:BM;09:EL;09:EM;09:FT;09:FX;10:AA;10:BM;10:EL;10:EM;10:FT;10:FX;11:AA;11:BM;11:EL;11:EM;11:FT;11:FX;13:AA;13:BM;13:EL;13:EM;13:FT;13:FX;15:AA;15:BM;15:EL;15:EM;15:FT;15:FX;21:AA;21:BM;21:EL;21:EM;21:FT;21:FX;A3:AA;A3:BM;A3:EL;A3:EM;A3:FT;A3:FX;A4:AA;A4:BM;A4:EL;A4:EM;A4:FT;A4:FX;AM:AA;AM:BM;AM:EL;AM:EM;AM:FT;AM:FX;AS:AA;AS:BM;AS:EL;AS:EM;AS:FT;AS:FX;B2:AA;B2:BM;B2:EL;B2:EM;B2:FT;B2:FX;B3:AA;B3:BM;B3:EL;B3:EM;B3:FT;B3:FX;B4:AA;B4:BM;B4:EL;B4:EM;B4:FT;B4:FX;BR:AA;BR:BM;BR:EL;BR:EM;BR:FT;BR:FX;BS:AA;BS:BM;BS:EL;BS:EM;BS:FT;BS:FX;BT:AA;BT:BM;BT:EL;BT:EM;BT:FT;BT:FX;CB:AA;CB:BM;CB:EL;CB:EM;CB:FT;CB:FX;CK:AA;CK:BM;CK:EL;CK:EM;CK:FT;CK:FX;CT:AA;CT:BM;CT:EL;CT:EM;CT:FT;CT:FX;D2:AA;D2:BM;D2:EL;D2:EM;D2:FT;D2:FX;DA:AA;DA:BM;DA:EL;DA:EM;DA:FT;DA:FX;DB:AA;DB:BM;DB:EL;DB:EM;DB:FT;DB:FX;DG:AA;DG:BM;DG:EL;DG:EM;DG:FT;DG:FX;DJ:AA;DJ:BM;DJ:EL;DJ:EM;DJ:FT;DJ:FX;DS:AA;DS:BM;DS:EL;DS:EM;DS:FT;DS:FX;EB:AA;EB:BM;EB:EL;EB:EM;EB:FT;EB:FX;HC:AA;HC:BM;HC:EL;HC:EM;HC:FT;HC:FX;HR:AA;HR:BM;HR:EL;HR:EM;HR:FT;HR:FX;I5:AA;I5:BM;I5:EL;I5:EM;I5:FT;I5:FX;IR:AA;IR:BM;IR:EL;IR:EM;IR:FT;IR:FX;LA:AA;LA:BM;LA:EL;LA:EM;LA:FT;LA:FX;M1:AA;M1:BM;M1:EL;M1:EM;M1:FT;M1:FX;MT:AA;MT:BM;MT:EL;MT:EM;MT:FT;MT:FX;NN:AA;NN:BM;NN:EL;NN:EM;NN:FT;NN:FX;OB:AA;OB:BM;OB:EL;OB:EM;OB:FT;OB:FX;OC:AA;OC:BM;OC:EL;OC:EM;OC:FT;OC:FX;OD:AA;OD:BM;OD:EL;OD:EM;OD:FT;OD:FX;OE:AA;OE:BM;OE:EL;OE:EM;OE:FT;OE:FX;OX:AA;OX:BM;OX:EL;OX:EM;OX:FT;OX:FX;OZ:AA;OZ:BM;OZ:EL;OZ:EM;OZ:FT;OZ:FX;P4:AA;P4:BM;P4:EL;P4:EM;P4:FT;P4:FX;P5:AA;P5:BM;P5:EL;P5:EM;P5:FT;P5:FX;PE:AA;PE:BM;PE:EL;PE:EM;PE:FT;PE:FX;PN:AA;PN:BM;PN:EL;PN:EM;PN:FT;PN:FX;PO:AA;PO:BM;PO:EL;PO:EM;PO:FT;PO:FX;PQ:AA;PQ:BM;PQ:EL;PQ:EM;PQ:FT;PQ:FX;PY:AA;PY:BM;PY:EL;PY:EM;PY:FT;PY:FX;PZ:AA;PZ:BM;PZ:EL;PZ:EM;PZ:FT;PZ:FX;RB:AA;RB:BM;RB:EL;RB:EM;RB:FT;RB:FX;RR:AA;RR:BM;RR:EL;RR:EM;RR:FT;RR:FX;RT:AA;RT:BM;RT:EL;RT:EM;RT:FT;RT:FX;RX:AA;RX:BM;RX:EL;RX:EM;RX:FT;RX:FX;SG:AA;SG:BM;SG:EL;SG:EM;SG:FT;SG:FX;V5:AA;V5:BM;V5:EL;V5:EM;V5:FT;V5:FX;XP:AA;XP:BM;XP:EL;XP:EM;XP:FT;XP:FX;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6661
					End If
				ElseIf String.Compare(segmentName, "CN1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CN1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CN1_Obj = Seg
				ElseIf String.Compare(segmentName, "DSB", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DSB_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DSB_Obj = Seg
				ElseIf String.Compare(segmentName, "UR", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.UR_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					UR_Obj = Seg
				ElseIf String.Compare(segmentName, "AMT", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.AMT_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					AMT_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.AMT_Obj)
					If MyBase.CompareKey(S2.AMT01, ";F5;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 8029
					ElseIf MyBase.CompareKey(S2.AMT01, ";F5;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6733
					ElseIf MyBase.CompareKey(S2.AMT01, ";F3;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 9325
					End If
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.REF_Obj)
					If MyBase.CompareKey(S2.REF01, ";4N;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 18397
					ElseIf MyBase.CompareKey(S2.REF01, ";F5;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 19693
					ElseIf MyBase.CompareKey(S2.REF01, ";EW;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 20989
					ElseIf MyBase.CompareKey(S2.REF01, ";9F;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 22285
					ElseIf MyBase.CompareKey(S2.REF01, ";G1;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 289
					ElseIf MyBase.CompareKey(S2.REF01, ";F8;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1585
					ElseIf MyBase.CompareKey(S2.REF01, ";X4;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 2881
					ElseIf MyBase.CompareKey(S2.REF01, ";9A;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 4177
					ElseIf MyBase.CompareKey(S2.REF01, ";9C;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 5473
					ElseIf MyBase.CompareKey(S2.REF01, ";LX;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6769
					ElseIf MyBase.CompareKey(S2.REF01, ";D9;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 8065
					ElseIf MyBase.CompareKey(S2.REF01, ";EA;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 11953
					ElseIf MyBase.CompareKey(S2.REF01, ";P4;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 13249
					ElseIf MyBase.CompareKey(S2.REF01, ";1J;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 59905
					ElseIf MyBase.CompareKey(S2.REF01, ";G3;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 289
					ElseIf MyBase.CompareKey(S2.REF01, ";4N;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1585
					ElseIf MyBase.CompareKey(S2.REF01, ";F8;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 4177
					ElseIf MyBase.CompareKey(S2.REF01, ";9F;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 237457
					ElseIf MyBase.CompareKey(S2.REF01, ";G1;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 5473
					ElseIf MyBase.CompareKey(S2.REF01, ";9A;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 238753
					ElseIf MyBase.CompareKey(S2.REF01, ";9C;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6769
					ElseIf MyBase.CompareKey(S2.REF01, ";D9;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 10657
					ElseIf MyBase.CompareKey(S2.REF01, ";4N;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 245197
					ElseIf MyBase.CompareKey(S2.REF01, ";9F;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 291853
					ElseIf MyBase.CompareKey(S2.REF01, ";G1;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 338509
					ElseIf MyBase.CompareKey(S2.REF01, ";F8;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 385165
					ElseIf MyBase.CompareKey(S2.REF01, ";9A;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 431821
					ElseIf MyBase.CompareKey(S2.REF01, ";9C;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 289
					ElseIf MyBase.CompareKey(S2.REF01, ";LX;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1585
					ElseIf MyBase.CompareKey(S2.REF01, ";D9;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 2881
					ElseIf MyBase.CompareKey(S2.REF01, ";LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 4177
					ElseIf MyBase.CompareKey(S2.REF01, ";EA;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 13249
					ElseIf MyBase.CompareKey(S2.REF01, ";P4;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 14545
					ElseIf MyBase.CompareKey(S2.REF01, ";G4;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 61201
					End If
				ElseIf String.Compare(segmentName, "K3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.K3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					K3_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "NTE", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.NTE_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					NTE_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.NTE_Obj)
					If MyBase.CompareKey(S2.NTE01, ";ADD;CER;DCP;DGN;TPO;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 325
					ElseIf MyBase.CompareKey(S2.NTE01, ";ADD;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 325
					ElseIf MyBase.CompareKey(S2.NTE01, ";ALG;DCP;DGN;DME;MED;NTR;ODT;RHB;RLH;RNH;SET;SFM;SPT;UPI;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 325
					ElseIf MyBase.CompareKey(S2.NTE01, ";ADD;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1621
					End If
				ElseIf String.Compare(segmentName, "CR1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR1_Obj = Seg
				ElseIf String.Compare(segmentName, "CR2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR2_Obj = Seg
				ElseIf String.Compare(segmentName, "CR3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR3_Obj = Seg
				ElseIf String.Compare(segmentName, "CR4", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR4_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR4_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "CR5", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR5_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR5_Obj = Seg
				ElseIf String.Compare(segmentName, "CR6", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR6_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR6_Obj = Seg
				ElseIf String.Compare(segmentName, "CR8", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR8_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR8_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "CRC", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CRC_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CRC_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.CRC_Obj)
					If MyBase.CompareKey(S2.CRC01, ";07;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 74
					ElseIf MyBase.CompareKey(S2.CRC01, ";E1;E2;E3;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1370
					ElseIf MyBase.CompareKey(S2.CRC01, ";75;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 2666
					ElseIf MyBase.CompareKey(S2.CRC01, ";ZZ;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 3962
					ElseIf MyBase.CompareKey(S2.CRC01, ";ZZ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 235946
					End If
				ElseIf String.Compare(segmentName, "HI", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.HI_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					HI_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.HI_Obj)
					If MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";ABK;BK;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1406
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";BP;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 141374
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";BG;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 2702
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";ABK;BK;TQ;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 234901
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";ABK;BK;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1406
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";ABJ;BJ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 188030
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";APR;PR;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 234686
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";ABN;BN;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 327998
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";DR;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 2702
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";ABF;BF;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 3998
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";BBR;BR;CAH;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 5294
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";BBQ;BQ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6590
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";BI;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 7886
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";BH;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 9182
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";BE;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 10478
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";BG;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 11774
					ElseIf MyBase.CompareKey(If(S2.HI01 IsNot Nothing, S2.HI01.C022_01, String.Empty), ";TC;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 13070
					End If
				ElseIf String.Compare(segmentName, "QTY", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.QTY_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					QTY_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "HCP", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.HCP_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					HCP_Obj = Seg
				End If
			End Sub

			Private Async Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				If String.Compare(args.DataSegment.SegmentID, "CR7", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2305_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2305_Obj.Add(NewLoop)
					Await NewLoop.ReadAsync(args).ConfigureAwait(False) 'TODO: this code should not be reached as this is for a loop not represented by any implementation (and should cause some kind of validation error).
				ElseIf String.Compare(args.DataSegment.SegmentID, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2310_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2310_Obj.Add(NewLoop)
					If MyBase.CompareKey(LoopKey, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2310A"
						NewLoop.SetArea = 12
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2310B"
						NewLoop.SetArea = 13
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";77;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2310C"
						NewLoop.SetArea = 15
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2310D"
						NewLoop.SetArea = 16
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PW;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2310E"
						NewLoop.SetArea = 17
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";45;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2310F"
						NewLoop.SetArea = 18
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2310A"
						NewLoop.SetArea = 12
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2310B"
						NewLoop.SetArea = 13
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";77;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2310C"
						NewLoop.SetArea = 14
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DD;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2310D"
						NewLoop.SetArea = 15
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2310E"
						NewLoop.SetArea = 15
						NewLoop.SetSequence = 3
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";71;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2310A"
						NewLoop.SetArea = 12
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";72;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2310B"
						NewLoop.SetArea = 13
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";ZZ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2310C"
						NewLoop.SetArea = 14
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2310D"
						NewLoop.SetArea = 15
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";77;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2310E"
						NewLoop.SetArea = 16
						NewLoop.SetSequence = 182
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DN;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2310F"
						NewLoop.SetArea = 16
						NewLoop.SetSequence = 290
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				ElseIf String.Compare(args.DataSegment.SegmentID, "SBR", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2320_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2320_Obj.Add(NewLoop)
					If String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2320"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				ElseIf String.Compare(args.DataSegment.SegmentID, "LX", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2400_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2400_Obj.Add(NewLoop)
					If String.Compare(args.Implementation, "_837Q1__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q2__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2400"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q3__2000B__2300", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2400"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				End If
				args.Implementation = Temp
			End Function
			Friend Property CLM_Obj As Dom.Segments.CLM_Obj
				Get
					Return CType(Children(0), Dom.Segments.CLM_Obj)
				End Get
				Set(value As Dom.Segments.CLM_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property CLM_Std As Dom.Segments.CLM Implements Dom.Transactions.Transaction837.Loops.Loop2300.CLM
				Get
					Return CType(Children(0), Dom.Segments.CLM_Obj)
				End Get
				Set(value As Dom.Segments.CLM)
					Children(0) = value
				End Set
			End Property

			Private Property CLM_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CLM Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.CLM
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CLM)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CLM)
					Children(0) = value
				End Set
			End Property
			Private Property CLM_IFace_1_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.CLM Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.CLM
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.CLM)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.CLM)
					Children(0) = value
				End Set
			End Property
			Private Property CLM_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CLM Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.CLM
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CLM)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CLM)
					Children(0) = value
				End Set
			End Property
			Friend ReadOnly Property DTP_Obj As SegmentContainer(Of Dom.Segments.DTP) Implements Dom.Transactions.Transaction837.Loops.Loop2300.DTP
				Get
					Return CType(Children(1), SegmentContainer(Of Dom.Segments.DTP))
				End Get
			End Property

			Private DTPSubset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP
				Get
					If DTPSubset_Loop2300_Obj_1 Is Nothing Then
						DTPSubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP, Dom.Segments.DTP)(Children(1), 1, 12, 6589)
					End If

					If DTPSubset_Loop2300_Obj_1.Count > 0 Then
						Return DTPSubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP)
					If DTPSubset_Loop2300_Obj_1 Is Nothing Then
						DTPSubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP, Dom.Segments.DTP)(Children(1), 1, 12, 6589)
					End If

					If DTPSubset_Loop2300_Obj_1.Count = 0 Then
						DTPSubset_Loop2300_Obj_1.Add(value)
					Else
						DTPSubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_1Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_1, Dom.Segments.DTP)
			Private Property DTP_IFace_1_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_1
				Get
					If DTP_1Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_1Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_1, Dom.Segments.DTP)(Children(1), 1, 12, 9181)
					End If

					If DTP_1Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_1Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_1)
					If DTP_1Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_1Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_1, Dom.Segments.DTP)(Children(1), 1, 12, 9181)
					End If

					If DTP_1Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_1Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_1Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_2Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_2, Dom.Segments.DTP)
			Private Property DTP_IFace_2_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_2 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_2
				Get
					If DTP_2Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_2Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_2, Dom.Segments.DTP)(Children(1), 1, 12, 11773)
					End If

					If DTP_2Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_2Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_2)
					If DTP_2Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_2Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_2, Dom.Segments.DTP)(Children(1), 1, 12, 11773)
					End If

					If DTP_2Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_2Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_2Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_3Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_3, Dom.Segments.DTP)
			Private Property DTP_IFace_3_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_3
				Get
					If DTP_3Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_3Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_3, Dom.Segments.DTP)(Children(1), 1, 12, 14365)
					End If

					If DTP_3Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_3Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_3)
					If DTP_3Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_3Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_3, Dom.Segments.DTP)(Children(1), 1, 12, 14365)
					End If

					If DTP_3Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_3Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_3Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_4Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_4, Dom.Segments.DTP)
			Private Property DTP_IFace_4_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_4
				Get
					If DTP_4Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_4Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_4, Dom.Segments.DTP)(Children(1), 1, 12, 16957)
					End If

					If DTP_4Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_4Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_4)
					If DTP_4Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_4Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_4, Dom.Segments.DTP)(Children(1), 1, 12, 16957)
					End If

					If DTP_4Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_4Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_4Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_5Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_5, Dom.Segments.DTP)
			Private Property DTP_IFace_5_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_5 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_5
				Get
					If DTP_5Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_5Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_5, Dom.Segments.DTP)(Children(1), 1, 12, 18253)
					End If

					If DTP_5Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_5Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_5)
					If DTP_5Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_5Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_5, Dom.Segments.DTP)(Children(1), 1, 12, 18253)
					End If

					If DTP_5Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_5Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_5Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_6Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_6, Dom.Segments.DTP)
			Private Property DTP_IFace_6_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_6 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_6
				Get
					If DTP_6Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_6Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_6, Dom.Segments.DTP)(Children(1), 1, 12, 19549)
					End If

					If DTP_6Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_6Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_6)
					If DTP_6Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_6Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_6, Dom.Segments.DTP)(Children(1), 1, 12, 19549)
					End If

					If DTP_6Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_6Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_6Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_7Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_7, Dom.Segments.DTP)
			Private Property DTP_IFace_7_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_7 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_7
				Get
					If DTP_7Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_7Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_7, Dom.Segments.DTP)(Children(1), 1, 12, 24733)
					End If

					If DTP_7Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_7Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_7)
					If DTP_7Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_7Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_7, Dom.Segments.DTP)(Children(1), 1, 12, 24733)
					End If

					If DTP_7Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_7Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_7Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_8Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_8, Dom.Segments.DTP)
			Private Property DTP_IFace_8_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_8 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_8
				Get
					If DTP_8Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_8Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_8, Dom.Segments.DTP)(Children(1), 1, 12, 27325)
					End If

					If DTP_8Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_8Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_8)
					If DTP_8Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_8Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_8, Dom.Segments.DTP)(Children(1), 1, 12, 27325)
					End If

					If DTP_8Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_8Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_8Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_9Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_9, Dom.Segments.DTP)
			Private Property DTP_IFace_9_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_9 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_9
				Get
					If DTP_9Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_9Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_9, Dom.Segments.DTP)(Children(1), 1, 12, 29917)
					End If

					If DTP_9Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_9Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_9)
					If DTP_9Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_9Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_9, Dom.Segments.DTP)(Children(1), 1, 12, 29917)
					End If

					If DTP_9Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_9Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_9Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_10Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_10, Dom.Segments.DTP)
			Private Property DTP_IFace_10_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_10 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_10
				Get
					If DTP_10Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_10Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_10, Dom.Segments.DTP)(Children(1), 1, 12, 31213)
					End If

					If DTP_10Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_10Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_10)
					If DTP_10Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_10Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_10, Dom.Segments.DTP)(Children(1), 1, 12, 31213)
					End If

					If DTP_10Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_10Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_10Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_11Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_11, Dom.Segments.DTP)
			Private Property DTP_IFace_11_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_11 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_11
				Get
					If DTP_11Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_11Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_11, Dom.Segments.DTP)(Children(1), 1, 12, 32509)
					End If

					If DTP_11Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_11Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_11)
					If DTP_11Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_11Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_11, Dom.Segments.DTP)(Children(1), 1, 12, 32509)
					End If

					If DTP_11Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_11Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_11Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_12Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_12, Dom.Segments.DTP)
			Private Property DTP_IFace_12_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_12 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_12
				Get
					If DTP_12Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_12Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_12, Dom.Segments.DTP)(Children(1), 1, 12, 33805)
					End If

					If DTP_12Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_12Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_12)
					If DTP_12Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_12Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_12, Dom.Segments.DTP)(Children(1), 1, 12, 33805)
					End If

					If DTP_12Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_12Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_12Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_13Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_13, Dom.Segments.DTP)
			Private ReadOnly Property DTP_13_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_13, Dom.Segments.DTP) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_13
				Get
					If DTP_13Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_13Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_13, Dom.Segments.DTP)(Children(1), 2, 12, 38989)
					End If

					Return DTP_13Subset_Loop2300_Obj_1
				End Get
			End Property
			Private DTP_14Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_14, Dom.Segments.DTP)
			Private Property DTP_IFace_14_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_14 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_14
				Get
					If DTP_14Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_14Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_14, Dom.Segments.DTP)(Children(1), 1, 12, 41581)
					End If

					If DTP_14Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_14Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_14)
					If DTP_14Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_14Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_14, Dom.Segments.DTP)(Children(1), 1, 12, 41581)
					End If

					If DTP_14Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_14Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_14Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_15Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_15, Dom.Segments.DTP)
			Private Property DTP_IFace_15_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_15 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.DTP_15
				Get
					If DTP_15Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_15Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_15, Dom.Segments.DTP)(Children(1), 1, 12, 44173)
					End If

					If DTP_15Subset_Loop2300_Obj_1.Count > 0 Then
						Return DTP_15Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_15)
					If DTP_15Subset_Loop2300_Obj_1 Is Nothing Then
						DTP_15Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_15, Dom.Segments.DTP)(Children(1), 1, 12, 44173)
					End If

					If DTP_15Subset_Loop2300_Obj_1.Count = 0 Then
						DTP_15Subset_Loop2300_Obj_1.Add(value)
					Else
						DTP_15Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTPSubset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_16_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.DTP
				Get
					If DTPSubset_1_Loop2300_Obj_2 Is Nothing Then
						DTPSubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP, Dom.Segments.DTP)(Children(1), 1, 12, 11773)
					End If

					If DTPSubset_1_Loop2300_Obj_2.Count > 0 Then
						Return DTPSubset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP)
					If DTPSubset_1_Loop2300_Obj_2 Is Nothing Then
						DTPSubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP, Dom.Segments.DTP)(Children(1), 1, 12, 11773)
					End If

					If DTPSubset_1_Loop2300_Obj_2.Count = 0 Then
						DTPSubset_1_Loop2300_Obj_2.Add(value)
					Else
						DTPSubset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTP_1Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_1, Dom.Segments.DTP)
			Private Property DTP_IFace_17_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.DTP_1
				Get
					If DTP_1Subset_1_Loop2300_Obj_2 Is Nothing Then
						DTP_1Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_1, Dom.Segments.DTP)(Children(1), 1, 12, 14365)
					End If

					If DTP_1Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return DTP_1Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_1)
					If DTP_1Subset_1_Loop2300_Obj_2 Is Nothing Then
						DTP_1Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_1, Dom.Segments.DTP)(Children(1), 1, 12, 14365)
					End If

					If DTP_1Subset_1_Loop2300_Obj_2.Count = 0 Then
						DTP_1Subset_1_Loop2300_Obj_2.Add(value)
					Else
						DTP_1Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTP_2Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_2, Dom.Segments.DTP)
			Private Property DTP_IFace_18_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_2 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.DTP_2
				Get
					If DTP_2Subset_1_Loop2300_Obj_2 Is Nothing Then
						DTP_2Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_2, Dom.Segments.DTP)(Children(1), 1, 12, 16957)
					End If

					If DTP_2Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return DTP_2Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_2)
					If DTP_2Subset_1_Loop2300_Obj_2 Is Nothing Then
						DTP_2Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_2, Dom.Segments.DTP)(Children(1), 1, 12, 16957)
					End If

					If DTP_2Subset_1_Loop2300_Obj_2.Count = 0 Then
						DTP_2Subset_1_Loop2300_Obj_2.Add(value)
					Else
						DTP_2Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTP_3Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_3, Dom.Segments.DTP)
			Private Property DTP_IFace_19_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.DTP_3
				Get
					If DTP_3Subset_1_Loop2300_Obj_2 Is Nothing Then
						DTP_3Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_3, Dom.Segments.DTP)(Children(1), 1, 12, 18253)
					End If

					If DTP_3Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return DTP_3Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_3)
					If DTP_3Subset_1_Loop2300_Obj_2 Is Nothing Then
						DTP_3Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_3, Dom.Segments.DTP)(Children(1), 1, 12, 18253)
					End If

					If DTP_3Subset_1_Loop2300_Obj_2.Count = 0 Then
						DTP_3Subset_1_Loop2300_Obj_2.Add(value)
					Else
						DTP_3Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTPSubset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_20_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.DTP
				Get
					If DTPSubset_2_Loop2300_Obj_3 Is Nothing Then
						DTPSubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP, Dom.Segments.DTP)(Children(1), 1, 12, 6589)
					End If

					If DTPSubset_2_Loop2300_Obj_3.Count > 0 Then
						Return DTPSubset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP)
					If DTPSubset_2_Loop2300_Obj_3 Is Nothing Then
						DTPSubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP, Dom.Segments.DTP)(Children(1), 1, 12, 6589)
					End If

					If DTPSubset_2_Loop2300_Obj_3.Count = 0 Then
						DTPSubset_2_Loop2300_Obj_3.Add(value)
					Else
						DTPSubset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private DTP_1Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_1, Dom.Segments.DTP)
			Private Property DTP_IFace_21_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.DTP_1
				Get
					If DTP_1Subset_2_Loop2300_Obj_3 Is Nothing Then
						DTP_1Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_1, Dom.Segments.DTP)(Children(1), 1, 12, 7885)
					End If

					If DTP_1Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return DTP_1Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_1)
					If DTP_1Subset_2_Loop2300_Obj_3 Is Nothing Then
						DTP_1Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_1, Dom.Segments.DTP)(Children(1), 1, 12, 7885)
					End If

					If DTP_1Subset_2_Loop2300_Obj_3.Count = 0 Then
						DTP_1Subset_2_Loop2300_Obj_3.Add(value)
					Else
						DTP_1Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private DTP_2Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_2, Dom.Segments.DTP)
			Private Property DTP_IFace_22_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_2 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.DTP_2
				Get
					If DTP_2Subset_2_Loop2300_Obj_3 Is Nothing Then
						DTP_2Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_2, Dom.Segments.DTP)(Children(1), 1, 12, 9181)
					End If

					If DTP_2Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return DTP_2Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_2)
					If DTP_2Subset_2_Loop2300_Obj_3 Is Nothing Then
						DTP_2Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_2, Dom.Segments.DTP)(Children(1), 1, 12, 9181)
					End If

					If DTP_2Subset_2_Loop2300_Obj_3.Count = 0 Then
						DTP_2Subset_2_Loop2300_Obj_3.Add(value)
					Else
						DTP_2Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private DTP_3Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_3, Dom.Segments.DTP)
			Private Property DTP_IFace_23_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.DTP_3
				Get
					If DTP_3Subset_2_Loop2300_Obj_3 Is Nothing Then
						DTP_3Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_3, Dom.Segments.DTP)(Children(1), 1, 12, 242461)
					End If

					If DTP_3Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return DTP_3Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_3)
					If DTP_3Subset_2_Loop2300_Obj_3 Is Nothing Then
						DTP_3Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_3, Dom.Segments.DTP)(Children(1), 1, 12, 242461)
					End If

					If DTP_3Subset_2_Loop2300_Obj_3.Count = 0 Then
						DTP_3Subset_2_Loop2300_Obj_3.Add(value)
					Else
						DTP_3Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend Property CL1_Obj As Dom.Segments.CL1_Obj
				Get
					Return CType(Children(2), Dom.Segments.CL1_Obj)
				End Get
				Set(value As Dom.Segments.CL1_Obj)
					Children(2) = value
				End Set
			End Property

			Private Property CL1_Std As Dom.Segments.CL1 Implements Dom.Transactions.Transaction837.Loops.Loop2300.CL1
				Get
					Return CType(Children(2), Dom.Segments.CL1_Obj)
				End Get
				Set(value As Dom.Segments.CL1)
					Children(2) = value
				End Set
			End Property

			Private Property CL1_IFace_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CL1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.CL1
				Get
					Return CType(Children(2), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CL1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CL1)
					Children(2) = value
				End Set
			End Property
			Friend Property DN1_Obj As Dom.Segments.DN1_Obj
				Get
					Return CType(Children(3), Dom.Segments.DN1_Obj)
				End Get
				Set(value As Dom.Segments.DN1_Obj)
					Children(3) = value
				End Set
			End Property

			Private Property DN1_Std As Dom.Segments.DN1 Implements Dom.Transactions.Transaction837.Loops.Loop2300.DN1
				Get
					Return CType(Children(3), Dom.Segments.DN1_Obj)
				End Get
				Set(value As Dom.Segments.DN1)
					Children(3) = value
				End Set
			End Property

			Private Property DN1_IFace_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DN1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.DN1
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DN1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DN1)
					Children(3) = value
				End Set
			End Property
			Friend ReadOnly Property DN2_Obj As SegmentContainer(Of Dom.Segments.DN2) Implements Dom.Transactions.Transaction837.Loops.Loop2300.DN2
				Get
					Return CType(Children(4), SegmentContainer(Of Dom.Segments.DN2))
				End Get
			End Property

			Private DN2Subset_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DN2, Dom.Segments.DN2)
			Private ReadOnly Property DN2_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DN2, Dom.Segments.DN2) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.DN2
				Get
					If DN2Subset_Loop2300_Obj_2 Is Nothing Then
						DN2Subset_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DN2, Dom.Segments.DN2)(Children(4), 35, 12, 181)
					End If

					Return DN2Subset_Loop2300_Obj_2
				End Get
			End Property
			Friend ReadOnly Property PWK_Obj As SegmentContainer(Of Dom.Segments.PWK) Implements Dom.Transactions.Transaction837.Loops.Loop2300.PWK
				Get
					Return CType(Children(5), SegmentContainer(Of Dom.Segments.PWK))
				End Get
			End Property

			Private PWKSubset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.PWK, Dom.Segments.PWK)
			Private ReadOnly Property PWK_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.PWK, Dom.Segments.PWK) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.PWK
				Get
					If PWKSubset_Loop2300_Obj_1 Is Nothing Then
						PWKSubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.PWK, Dom.Segments.PWK)(Children(5), 10, 12, 6661)
					End If

					Return PWKSubset_Loop2300_Obj_1
				End Get
			End Property
			Private PWKSubset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.PWK, Dom.Segments.PWK)
			Private ReadOnly Property PWK_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.PWK, Dom.Segments.PWK) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.PWK
				Get
					If PWKSubset_1_Loop2300_Obj_2 Is Nothing Then
						PWKSubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.PWK, Dom.Segments.PWK)(Children(5), 10, 12, 6661)
					End If

					Return PWKSubset_1_Loop2300_Obj_2
				End Get
			End Property
			Private PWKSubset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.PWK, Dom.Segments.PWK)
			Private ReadOnly Property PWK_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.PWK, Dom.Segments.PWK) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.PWK
				Get
					If PWKSubset_2_Loop2300_Obj_3 Is Nothing Then
						PWKSubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.PWK, Dom.Segments.PWK)(Children(5), 10, 12, 6661)
					End If

					Return PWKSubset_2_Loop2300_Obj_3
				End Get
			End Property
			Friend Property CN1_Obj As Dom.Segments.CN1_Obj
				Get
					Return CType(Children(6), Dom.Segments.CN1_Obj)
				End Get
				Set(value As Dom.Segments.CN1_Obj)
					Children(6) = value
				End Set
			End Property

			Private Property CN1_Std As Dom.Segments.CN1 Implements Dom.Transactions.Transaction837.Loops.Loop2300.CN1
				Get
					Return CType(Children(6), Dom.Segments.CN1_Obj)
				End Get
				Set(value As Dom.Segments.CN1)
					Children(6) = value
				End Set
			End Property

			Private Property CN1_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CN1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.CN1
				Get
					Return CType(Children(6), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CN1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CN1)
					Children(6) = value
				End Set
			End Property
			Private Property CN1_IFace_1_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.CN1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.CN1
				Get
					Return CType(Children(6), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.CN1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.CN1)
					Children(6) = value
				End Set
			End Property
			Private Property CN1_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CN1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.CN1
				Get
					Return CType(Children(6), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CN1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CN1)
					Children(6) = value
				End Set
			End Property
			Friend Property DSB_Obj As Dom.Segments.DSB_Obj
				Get
					Return CType(Children(7), Dom.Segments.DSB_Obj)
				End Get
				Set(value As Dom.Segments.DSB_Obj)
					Children(7) = value
				End Set
			End Property

			Private Property DSB_Std As Dom.Segments.DSB Implements Dom.Transactions.Transaction837.Loops.Loop2300.DSB
				Get
					Return CType(Children(7), Dom.Segments.DSB_Obj)
				End Get
				Set(value As Dom.Segments.DSB)
					Children(7) = value
				End Set
			End Property

			Friend Property UR_Obj As Dom.Segments.UR_Obj
				Get
					Return CType(Children(8), Dom.Segments.UR_Obj)
				End Get
				Set(value As Dom.Segments.UR_Obj)
					Children(8) = value
				End Set
			End Property

			Private Property UR_Std As Dom.Segments.UR Implements Dom.Transactions.Transaction837.Loops.Loop2300.UR
				Get
					Return CType(Children(8), Dom.Segments.UR_Obj)
				End Get
				Set(value As Dom.Segments.UR)
					Children(8) = value
				End Set
			End Property

			Friend ReadOnly Property AMT_Obj As SegmentContainer(Of Dom.Segments.AMT) Implements Dom.Transactions.Transaction837.Loops.Loop2300.AMT
				Get
					Return CType(Children(9), SegmentContainer(Of Dom.Segments.AMT))
				End Get
			End Property

			Private AMTSubset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.AMT
				Get
					If AMTSubset_Loop2300_Obj_1 Is Nothing Then
						AMTSubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.AMT, Dom.Segments.AMT)(Children(9), 1, 12, 8029)
					End If

					If AMTSubset_Loop2300_Obj_1.Count > 0 Then
						Return AMTSubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.AMT)
					If AMTSubset_Loop2300_Obj_1 Is Nothing Then
						AMTSubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.AMT, Dom.Segments.AMT)(Children(9), 1, 12, 8029)
					End If

					If AMTSubset_Loop2300_Obj_1.Count = 0 Then
						AMTSubset_Loop2300_Obj_1.Add(value)
					Else
						AMTSubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private AMTSubset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_1_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.AMT
				Get
					If AMTSubset_1_Loop2300_Obj_2 Is Nothing Then
						AMTSubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.AMT, Dom.Segments.AMT)(Children(9), 1, 12, 6733)
					End If

					If AMTSubset_1_Loop2300_Obj_2.Count > 0 Then
						Return AMTSubset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.AMT)
					If AMTSubset_1_Loop2300_Obj_2 Is Nothing Then
						AMTSubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.AMT, Dom.Segments.AMT)(Children(9), 1, 12, 6733)
					End If

					If AMTSubset_1_Loop2300_Obj_2.Count = 0 Then
						AMTSubset_1_Loop2300_Obj_2.Add(value)
					Else
						AMTSubset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private AMTSubset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.AMT
				Get
					If AMTSubset_2_Loop2300_Obj_3 Is Nothing Then
						AMTSubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.AMT, Dom.Segments.AMT)(Children(9), 1, 12, 9325)
					End If

					If AMTSubset_2_Loop2300_Obj_3.Count > 0 Then
						Return AMTSubset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.AMT)
					If AMTSubset_2_Loop2300_Obj_3 Is Nothing Then
						AMTSubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.AMT, Dom.Segments.AMT)(Children(9), 1, 12, 9325)
					End If

					If AMTSubset_2_Loop2300_Obj_3.Count = 0 Then
						AMTSubset_2_Loop2300_Obj_3.Add(value)
					Else
						AMTSubset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property REF_Obj As SegmentContainer(Of Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Loops.Loop2300.REF
				Get
					Return CType(Children(10), SegmentContainer(Of Dom.Segments.REF))
				End Get
			End Property

			Private REFSubset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF, Dom.Segments.REF)
			Private Property REF_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF
				Get
					If REFSubset_Loop2300_Obj_1 Is Nothing Then
						REFSubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF, Dom.Segments.REF)(Children(10), 1, 12, 18397)
					End If

					If REFSubset_Loop2300_Obj_1.Count > 0 Then
						Return REFSubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF)
					If REFSubset_Loop2300_Obj_1 Is Nothing Then
						REFSubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF, Dom.Segments.REF)(Children(10), 1, 12, 18397)
					End If

					If REFSubset_Loop2300_Obj_1.Count = 0 Then
						REFSubset_Loop2300_Obj_1.Add(value)
					Else
						REFSubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_1_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_1
				Get
					If REF_1Subset_Loop2300_Obj_1 Is Nothing Then
						REF_1Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_1, Dom.Segments.REF)(Children(10), 1, 12, 19693)
					End If

					If REF_1Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_1Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_1)
					If REF_1Subset_Loop2300_Obj_1 Is Nothing Then
						REF_1Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_1, Dom.Segments.REF)(Children(10), 1, 12, 19693)
					End If

					If REF_1Subset_Loop2300_Obj_1.Count = 0 Then
						REF_1Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_1Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_2Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_2, Dom.Segments.REF)
			Private Property REF_IFace_2_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_2 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_2
				Get
					If REF_2Subset_Loop2300_Obj_1 Is Nothing Then
						REF_2Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_2, Dom.Segments.REF)(Children(10), 1, 12, 20989)
					End If

					If REF_2Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_2Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_2)
					If REF_2Subset_Loop2300_Obj_1 Is Nothing Then
						REF_2Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_2, Dom.Segments.REF)(Children(10), 1, 12, 20989)
					End If

					If REF_2Subset_Loop2300_Obj_1.Count = 0 Then
						REF_2Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_2Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_3Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_3, Dom.Segments.REF)
			Private Property REF_IFace_3_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_3
				Get
					If REF_3Subset_Loop2300_Obj_1 Is Nothing Then
						REF_3Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_3, Dom.Segments.REF)(Children(10), 1, 12, 22285)
					End If

					If REF_3Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_3Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_3)
					If REF_3Subset_Loop2300_Obj_1 Is Nothing Then
						REF_3Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_3, Dom.Segments.REF)(Children(10), 1, 12, 22285)
					End If

					If REF_3Subset_Loop2300_Obj_1.Count = 0 Then
						REF_3Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_3Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_4Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_4, Dom.Segments.REF)
			Private Property REF_IFace_4_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_4
				Get
					If REF_4Subset_Loop2300_Obj_1 Is Nothing Then
						REF_4Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_4, Dom.Segments.REF)(Children(10), 1, 12, 289)
					End If

					If REF_4Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_4Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_4)
					If REF_4Subset_Loop2300_Obj_1 Is Nothing Then
						REF_4Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_4, Dom.Segments.REF)(Children(10), 1, 12, 289)
					End If

					If REF_4Subset_Loop2300_Obj_1.Count = 0 Then
						REF_4Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_4Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_5Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_5, Dom.Segments.REF)
			Private Property REF_IFace_5_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_5 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_5
				Get
					If REF_5Subset_Loop2300_Obj_1 Is Nothing Then
						REF_5Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_5, Dom.Segments.REF)(Children(10), 1, 12, 1585)
					End If

					If REF_5Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_5Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_5)
					If REF_5Subset_Loop2300_Obj_1 Is Nothing Then
						REF_5Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_5, Dom.Segments.REF)(Children(10), 1, 12, 1585)
					End If

					If REF_5Subset_Loop2300_Obj_1.Count = 0 Then
						REF_5Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_5Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_6Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_6, Dom.Segments.REF)
			Private Property REF_IFace_6_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_6 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_6
				Get
					If REF_6Subset_Loop2300_Obj_1 Is Nothing Then
						REF_6Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_6, Dom.Segments.REF)(Children(10), 1, 12, 2881)
					End If

					If REF_6Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_6Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_6)
					If REF_6Subset_Loop2300_Obj_1 Is Nothing Then
						REF_6Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_6, Dom.Segments.REF)(Children(10), 1, 12, 2881)
					End If

					If REF_6Subset_Loop2300_Obj_1.Count = 0 Then
						REF_6Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_6Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_7Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_7, Dom.Segments.REF)
			Private Property REF_IFace_7_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_7 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_7
				Get
					If REF_7Subset_Loop2300_Obj_1 Is Nothing Then
						REF_7Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_7, Dom.Segments.REF)(Children(10), 1, 12, 4177)
					End If

					If REF_7Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_7Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_7)
					If REF_7Subset_Loop2300_Obj_1 Is Nothing Then
						REF_7Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_7, Dom.Segments.REF)(Children(10), 1, 12, 4177)
					End If

					If REF_7Subset_Loop2300_Obj_1.Count = 0 Then
						REF_7Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_7Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_8Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_8, Dom.Segments.REF)
			Private Property REF_IFace_8_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_8 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_8
				Get
					If REF_8Subset_Loop2300_Obj_1 Is Nothing Then
						REF_8Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_8, Dom.Segments.REF)(Children(10), 1, 12, 5473)
					End If

					If REF_8Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_8Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_8)
					If REF_8Subset_Loop2300_Obj_1 Is Nothing Then
						REF_8Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_8, Dom.Segments.REF)(Children(10), 1, 12, 5473)
					End If

					If REF_8Subset_Loop2300_Obj_1.Count = 0 Then
						REF_8Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_8Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_9Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_9, Dom.Segments.REF)
			Private Property REF_IFace_9_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_9 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_9
				Get
					If REF_9Subset_Loop2300_Obj_1 Is Nothing Then
						REF_9Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_9, Dom.Segments.REF)(Children(10), 1, 12, 6769)
					End If

					If REF_9Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_9Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_9)
					If REF_9Subset_Loop2300_Obj_1 Is Nothing Then
						REF_9Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_9, Dom.Segments.REF)(Children(10), 1, 12, 6769)
					End If

					If REF_9Subset_Loop2300_Obj_1.Count = 0 Then
						REF_9Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_9Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_10Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_10, Dom.Segments.REF)
			Private Property REF_IFace_10_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_10 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_10
				Get
					If REF_10Subset_Loop2300_Obj_1 Is Nothing Then
						REF_10Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_10, Dom.Segments.REF)(Children(10), 1, 12, 8065)
					End If

					If REF_10Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_10Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_10)
					If REF_10Subset_Loop2300_Obj_1 Is Nothing Then
						REF_10Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_10, Dom.Segments.REF)(Children(10), 1, 12, 8065)
					End If

					If REF_10Subset_Loop2300_Obj_1.Count = 0 Then
						REF_10Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_10Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_11Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_11, Dom.Segments.REF)
			Private Property REF_IFace_11_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_11 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_11
				Get
					If REF_11Subset_Loop2300_Obj_1 Is Nothing Then
						REF_11Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_11, Dom.Segments.REF)(Children(10), 1, 12, 11953)
					End If

					If REF_11Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_11Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_11)
					If REF_11Subset_Loop2300_Obj_1 Is Nothing Then
						REF_11Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_11, Dom.Segments.REF)(Children(10), 1, 12, 11953)
					End If

					If REF_11Subset_Loop2300_Obj_1.Count = 0 Then
						REF_11Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_11Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_12Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_12, Dom.Segments.REF)
			Private Property REF_IFace_12_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_12 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_12
				Get
					If REF_12Subset_Loop2300_Obj_1 Is Nothing Then
						REF_12Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_12, Dom.Segments.REF)(Children(10), 1, 12, 13249)
					End If

					If REF_12Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_12Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_12)
					If REF_12Subset_Loop2300_Obj_1 Is Nothing Then
						REF_12Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_12, Dom.Segments.REF)(Children(10), 1, 12, 13249)
					End If

					If REF_12Subset_Loop2300_Obj_1.Count = 0 Then
						REF_12Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_12Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_13Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_13, Dom.Segments.REF)
			Private Property REF_IFace_13_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_13 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.REF_13
				Get
					If REF_13Subset_Loop2300_Obj_1 Is Nothing Then
						REF_13Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_13, Dom.Segments.REF)(Children(10), 1, 12, 59905)
					End If

					If REF_13Subset_Loop2300_Obj_1.Count > 0 Then
						Return REF_13Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_13)
					If REF_13Subset_Loop2300_Obj_1 Is Nothing Then
						REF_13Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_13, Dom.Segments.REF)(Children(10), 1, 12, 59905)
					End If

					If REF_13Subset_Loop2300_Obj_1.Count = 0 Then
						REF_13Subset_Loop2300_Obj_1.Add(value)
					Else
						REF_13Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REFSubset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF, Dom.Segments.REF)
			Private Property REF_IFace_14_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.REF
				Get
					If REFSubset_1_Loop2300_Obj_2 Is Nothing Then
						REFSubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF, Dom.Segments.REF)(Children(10), 1, 12, 289)
					End If

					If REFSubset_1_Loop2300_Obj_2.Count > 0 Then
						Return REFSubset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF)
					If REFSubset_1_Loop2300_Obj_2 Is Nothing Then
						REFSubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF, Dom.Segments.REF)(Children(10), 1, 12, 289)
					End If

					If REFSubset_1_Loop2300_Obj_2.Count = 0 Then
						REFSubset_1_Loop2300_Obj_2.Add(value)
					Else
						REFSubset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_15_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.REF_1
				Get
					If REF_1Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_1Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_1, Dom.Segments.REF)(Children(10), 1, 12, 1585)
					End If

					If REF_1Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return REF_1Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_1)
					If REF_1Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_1Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_1, Dom.Segments.REF)(Children(10), 1, 12, 1585)
					End If

					If REF_1Subset_1_Loop2300_Obj_2.Count = 0 Then
						REF_1Subset_1_Loop2300_Obj_2.Add(value)
					Else
						REF_1Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_2Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_2, Dom.Segments.REF)
			Private Property REF_IFace_16_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_2 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.REF_2
				Get
					If REF_2Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_2Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_2, Dom.Segments.REF)(Children(10), 1, 12, 4177)
					End If

					If REF_2Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return REF_2Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_2)
					If REF_2Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_2Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_2, Dom.Segments.REF)(Children(10), 1, 12, 4177)
					End If

					If REF_2Subset_1_Loop2300_Obj_2.Count = 0 Then
						REF_2Subset_1_Loop2300_Obj_2.Add(value)
					Else
						REF_2Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_3Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_3, Dom.Segments.REF)
			Private Property REF_IFace_17_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.REF_3
				Get
					If REF_3Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_3Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_3, Dom.Segments.REF)(Children(10), 1, 12, 237457)
					End If

					If REF_3Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return REF_3Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_3)
					If REF_3Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_3Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_3, Dom.Segments.REF)(Children(10), 1, 12, 237457)
					End If

					If REF_3Subset_1_Loop2300_Obj_2.Count = 0 Then
						REF_3Subset_1_Loop2300_Obj_2.Add(value)
					Else
						REF_3Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_4Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_4, Dom.Segments.REF)
			Private Property REF_IFace_18_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.REF_4
				Get
					If REF_4Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_4Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_4, Dom.Segments.REF)(Children(10), 1, 12, 5473)
					End If

					If REF_4Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return REF_4Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_4)
					If REF_4Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_4Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_4, Dom.Segments.REF)(Children(10), 1, 12, 5473)
					End If

					If REF_4Subset_1_Loop2300_Obj_2.Count = 0 Then
						REF_4Subset_1_Loop2300_Obj_2.Add(value)
					Else
						REF_4Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_5Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_5, Dom.Segments.REF)
			Private Property REF_IFace_19_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_5 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.REF_5
				Get
					If REF_5Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_5Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_5, Dom.Segments.REF)(Children(10), 1, 12, 238753)
					End If

					If REF_5Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return REF_5Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_5)
					If REF_5Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_5Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_5, Dom.Segments.REF)(Children(10), 1, 12, 238753)
					End If

					If REF_5Subset_1_Loop2300_Obj_2.Count = 0 Then
						REF_5Subset_1_Loop2300_Obj_2.Add(value)
					Else
						REF_5Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_6Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_6, Dom.Segments.REF)
			Private Property REF_IFace_20_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_6 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.REF_6
				Get
					If REF_6Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_6Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_6, Dom.Segments.REF)(Children(10), 1, 12, 6769)
					End If

					If REF_6Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return REF_6Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_6)
					If REF_6Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_6Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_6, Dom.Segments.REF)(Children(10), 1, 12, 6769)
					End If

					If REF_6Subset_1_Loop2300_Obj_2.Count = 0 Then
						REF_6Subset_1_Loop2300_Obj_2.Add(value)
					Else
						REF_6Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_7Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_7, Dom.Segments.REF)
			Private Property REF_IFace_21_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_7 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.REF_7
				Get
					If REF_7Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_7Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_7, Dom.Segments.REF)(Children(10), 1, 12, 10657)
					End If

					If REF_7Subset_1_Loop2300_Obj_2.Count > 0 Then
						Return REF_7Subset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_7)
					If REF_7Subset_1_Loop2300_Obj_2 Is Nothing Then
						REF_7Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_7, Dom.Segments.REF)(Children(10), 1, 12, 10657)
					End If

					If REF_7Subset_1_Loop2300_Obj_2.Count = 0 Then
						REF_7Subset_1_Loop2300_Obj_2.Add(value)
					Else
						REF_7Subset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REFSubset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF, Dom.Segments.REF)
			Private Property REF_IFace_22_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF
				Get
					If REFSubset_2_Loop2300_Obj_3 Is Nothing Then
						REFSubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF, Dom.Segments.REF)(Children(10), 1, 12, 245197)
					End If

					If REFSubset_2_Loop2300_Obj_3.Count > 0 Then
						Return REFSubset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF)
					If REFSubset_2_Loop2300_Obj_3 Is Nothing Then
						REFSubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF, Dom.Segments.REF)(Children(10), 1, 12, 245197)
					End If

					If REFSubset_2_Loop2300_Obj_3.Count = 0 Then
						REFSubset_2_Loop2300_Obj_3.Add(value)
					Else
						REFSubset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_23_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_1
				Get
					If REF_1Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_1Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_1, Dom.Segments.REF)(Children(10), 1, 12, 291853)
					End If

					If REF_1Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return REF_1Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_1)
					If REF_1Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_1Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_1, Dom.Segments.REF)(Children(10), 1, 12, 291853)
					End If

					If REF_1Subset_2_Loop2300_Obj_3.Count = 0 Then
						REF_1Subset_2_Loop2300_Obj_3.Add(value)
					Else
						REF_1Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_2Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_2, Dom.Segments.REF)
			Private Property REF_IFace_24_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_2 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_2
				Get
					If REF_2Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_2Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_2, Dom.Segments.REF)(Children(10), 1, 12, 338509)
					End If

					If REF_2Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return REF_2Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_2)
					If REF_2Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_2Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_2, Dom.Segments.REF)(Children(10), 1, 12, 338509)
					End If

					If REF_2Subset_2_Loop2300_Obj_3.Count = 0 Then
						REF_2Subset_2_Loop2300_Obj_3.Add(value)
					Else
						REF_2Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_3Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_3, Dom.Segments.REF)
			Private Property REF_IFace_25_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_3
				Get
					If REF_3Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_3Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_3, Dom.Segments.REF)(Children(10), 1, 12, 385165)
					End If

					If REF_3Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return REF_3Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_3)
					If REF_3Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_3Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_3, Dom.Segments.REF)(Children(10), 1, 12, 385165)
					End If

					If REF_3Subset_2_Loop2300_Obj_3.Count = 0 Then
						REF_3Subset_2_Loop2300_Obj_3.Add(value)
					Else
						REF_3Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_4Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_4, Dom.Segments.REF)
			Private Property REF_IFace_26_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_4
				Get
					If REF_4Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_4Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_4, Dom.Segments.REF)(Children(10), 1, 12, 431821)
					End If

					If REF_4Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return REF_4Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_4)
					If REF_4Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_4Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_4, Dom.Segments.REF)(Children(10), 1, 12, 431821)
					End If

					If REF_4Subset_2_Loop2300_Obj_3.Count = 0 Then
						REF_4Subset_2_Loop2300_Obj_3.Add(value)
					Else
						REF_4Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_5Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_5, Dom.Segments.REF)
			Private Property REF_IFace_27_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_5 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_5
				Get
					If REF_5Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_5Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_5, Dom.Segments.REF)(Children(10), 1, 12, 289)
					End If

					If REF_5Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return REF_5Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_5)
					If REF_5Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_5Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_5, Dom.Segments.REF)(Children(10), 1, 12, 289)
					End If

					If REF_5Subset_2_Loop2300_Obj_3.Count = 0 Then
						REF_5Subset_2_Loop2300_Obj_3.Add(value)
					Else
						REF_5Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_6Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_6, Dom.Segments.REF)
			Private ReadOnly Property REF_6_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_6, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_6
				Get
					If REF_6Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_6Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_6, Dom.Segments.REF)(Children(10), 5, 12, 1585)
					End If

					Return REF_6Subset_2_Loop2300_Obj_3
				End Get
			End Property
			Private REF_7Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_7, Dom.Segments.REF)
			Private Property REF_IFace_29_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_7 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_7
				Get
					If REF_7Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_7Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_7, Dom.Segments.REF)(Children(10), 1, 12, 2881)
					End If

					If REF_7Subset_2_Loop2300_Obj_3.Count > 0 Then
						Return REF_7Subset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_7)
					If REF_7Subset_2_Loop2300_Obj_3 Is Nothing Then
						REF_7Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_7, Dom.Segments.REF)(Children(10), 1, 12, 2881)
					End If

					If REF_7Subset_2_Loop2300_Obj_3.Count = 0 Then
						REF_7Subset_2_Loop2300_Obj_3.Add(value)
					Else
						REF_7Subset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_8Subset_1_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_8, Dom.Segments.REF)
			Private Property REF_IFace_30_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_8 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_8
				Get
					If REF_8Subset_1_Loop2300_Obj_3 Is Nothing Then
						REF_8Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_8, Dom.Segments.REF)(Children(10), 1, 12, 4177)
					End If

					If REF_8Subset_1_Loop2300_Obj_3.Count > 0 Then
						Return REF_8Subset_1_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_8)
					If REF_8Subset_1_Loop2300_Obj_3 Is Nothing Then
						REF_8Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_8, Dom.Segments.REF)(Children(10), 1, 12, 4177)
					End If

					If REF_8Subset_1_Loop2300_Obj_3.Count = 0 Then
						REF_8Subset_1_Loop2300_Obj_3.Add(value)
					Else
						REF_8Subset_1_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_9Subset_1_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_9, Dom.Segments.REF)
			Private Property REF_IFace_31_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_9 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_9
				Get
					If REF_9Subset_1_Loop2300_Obj_3 Is Nothing Then
						REF_9Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_9, Dom.Segments.REF)(Children(10), 1, 12, 13249)
					End If

					If REF_9Subset_1_Loop2300_Obj_3.Count > 0 Then
						Return REF_9Subset_1_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_9)
					If REF_9Subset_1_Loop2300_Obj_3 Is Nothing Then
						REF_9Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_9, Dom.Segments.REF)(Children(10), 1, 12, 13249)
					End If

					If REF_9Subset_1_Loop2300_Obj_3.Count = 0 Then
						REF_9Subset_1_Loop2300_Obj_3.Add(value)
					Else
						REF_9Subset_1_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_10Subset_1_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_10, Dom.Segments.REF)
			Private Property REF_IFace_32_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_10 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_10
				Get
					If REF_10Subset_1_Loop2300_Obj_3 Is Nothing Then
						REF_10Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_10, Dom.Segments.REF)(Children(10), 1, 12, 14545)
					End If

					If REF_10Subset_1_Loop2300_Obj_3.Count > 0 Then
						Return REF_10Subset_1_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_10)
					If REF_10Subset_1_Loop2300_Obj_3 Is Nothing Then
						REF_10Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_10, Dom.Segments.REF)(Children(10), 1, 12, 14545)
					End If

					If REF_10Subset_1_Loop2300_Obj_3.Count = 0 Then
						REF_10Subset_1_Loop2300_Obj_3.Add(value)
					Else
						REF_10Subset_1_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_11Subset_1_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_11, Dom.Segments.REF)
			Private Property REF_IFace_33_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_11 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.REF_11
				Get
					If REF_11Subset_1_Loop2300_Obj_3 Is Nothing Then
						REF_11Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_11, Dom.Segments.REF)(Children(10), 1, 12, 61201)
					End If

					If REF_11Subset_1_Loop2300_Obj_3.Count > 0 Then
						Return REF_11Subset_1_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_11)
					If REF_11Subset_1_Loop2300_Obj_3 Is Nothing Then
						REF_11Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_11, Dom.Segments.REF)(Children(10), 1, 12, 61201)
					End If

					If REF_11Subset_1_Loop2300_Obj_3.Count = 0 Then
						REF_11Subset_1_Loop2300_Obj_3.Add(value)
					Else
						REF_11Subset_1_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property K3_Obj As SegmentContainer(Of Dom.Segments.K3) Implements Dom.Transactions.Transaction837.Loops.Loop2300.K3
				Get
					Return CType(Children(11), SegmentContainer(Of Dom.Segments.K3))
				End Get
			End Property

			Private K3Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.K3, Dom.Segments.K3)
			Private ReadOnly Property K3_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.K3, Dom.Segments.K3) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.K3
				Get
					If K3Subset_Loop2300_Obj_1 Is Nothing Then
						K3Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.K3, Dom.Segments.K3)(Children(11), 10, 12, 14545)
					End If

					Return K3Subset_Loop2300_Obj_1
				End Get
			End Property
			Private K3Subset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.K3, Dom.Segments.K3)
			Private ReadOnly Property K3_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.K3, Dom.Segments.K3) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.K3
				Get
					If K3Subset_1_Loop2300_Obj_2 Is Nothing Then
						K3Subset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.K3, Dom.Segments.K3)(Children(11), 10, 12, 11953)
					End If

					Return K3Subset_1_Loop2300_Obj_2
				End Get
			End Property
			Private K3Subset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.K3, Dom.Segments.K3)
			Private ReadOnly Property K3_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.K3, Dom.Segments.K3) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.K3
				Get
					If K3Subset_2_Loop2300_Obj_3 Is Nothing Then
						K3Subset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.K3, Dom.Segments.K3)(Children(11), 10, 12, 15841)
					End If

					Return K3Subset_2_Loop2300_Obj_3
				End Get
			End Property
			Friend ReadOnly Property NTE_Obj As SegmentContainer(Of Dom.Segments.NTE) Implements Dom.Transactions.Transaction837.Loops.Loop2300.NTE
				Get
					Return CType(Children(12), SegmentContainer(Of Dom.Segments.NTE))
				End Get
			End Property

			Private NTESubset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.NTE, Dom.Segments.NTE)
			Private Property NTE_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.NTE Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.NTE
				Get
					If NTESubset_Loop2300_Obj_1 Is Nothing Then
						NTESubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.NTE, Dom.Segments.NTE)(Children(12), 1, 12, 325)
					End If

					If NTESubset_Loop2300_Obj_1.Count > 0 Then
						Return NTESubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.NTE)
					If NTESubset_Loop2300_Obj_1 Is Nothing Then
						NTESubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.NTE, Dom.Segments.NTE)(Children(12), 1, 12, 325)
					End If

					If NTESubset_Loop2300_Obj_1.Count = 0 Then
						NTESubset_Loop2300_Obj_1.Add(value)
					Else
						NTESubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private NTESubset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.NTE, Dom.Segments.NTE)
			Private ReadOnly Property NTE_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.NTE, Dom.Segments.NTE) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.NTE
				Get
					If NTESubset_1_Loop2300_Obj_2 Is Nothing Then
						NTESubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.NTE, Dom.Segments.NTE)(Children(12), 5, 12, 325)
					End If

					Return NTESubset_1_Loop2300_Obj_2
				End Get
			End Property
			Private NTESubset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE, Dom.Segments.NTE)
			Private ReadOnly Property NTE_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE, Dom.Segments.NTE) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.NTE
				Get
					If NTESubset_2_Loop2300_Obj_3 Is Nothing Then
						NTESubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE, Dom.Segments.NTE)(Children(12), 10, 12, 325)
					End If

					Return NTESubset_2_Loop2300_Obj_3
				End Get
			End Property
			Private NTE_1Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE_1, Dom.Segments.NTE)
			Private Property NTE_IFace_3_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.NTE_1
				Get
					If NTE_1Subset_Loop2300_Obj_3 Is Nothing Then
						NTE_1Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE_1, Dom.Segments.NTE)(Children(12), 1, 12, 1621)
					End If

					If NTE_1Subset_Loop2300_Obj_3.Count > 0 Then
						Return NTE_1Subset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE_1)
					If NTE_1Subset_Loop2300_Obj_3 Is Nothing Then
						NTE_1Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE_1, Dom.Segments.NTE)(Children(12), 1, 12, 1621)
					End If

					If NTE_1Subset_Loop2300_Obj_3.Count = 0 Then
						NTE_1Subset_Loop2300_Obj_3.Add(value)
					Else
						NTE_1Subset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend Property CR1_Obj As Dom.Segments.CR1_Obj
				Get
					Return CType(Children(13), Dom.Segments.CR1_Obj)
				End Get
				Set(value As Dom.Segments.CR1_Obj)
					Children(13) = value
				End Set
			End Property

			Private Property CR1_Std As Dom.Segments.CR1 Implements Dom.Transactions.Transaction837.Loops.Loop2300.CR1
				Get
					Return CType(Children(13), Dom.Segments.CR1_Obj)
				End Get
				Set(value As Dom.Segments.CR1)
					Children(13) = value
				End Set
			End Property

			Private Property CR1_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CR1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.CR1
				Get
					Return CType(Children(13), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CR1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CR1)
					Children(13) = value
				End Set
			End Property
			Friend Property CR2_Obj As Dom.Segments.CR2_Obj
				Get
					Return CType(Children(14), Dom.Segments.CR2_Obj)
				End Get
				Set(value As Dom.Segments.CR2_Obj)
					Children(14) = value
				End Set
			End Property

			Private Property CR2_Std As Dom.Segments.CR2 Implements Dom.Transactions.Transaction837.Loops.Loop2300.CR2
				Get
					Return CType(Children(14), Dom.Segments.CR2_Obj)
				End Get
				Set(value As Dom.Segments.CR2)
					Children(14) = value
				End Set
			End Property

			Friend Property CR3_Obj As Dom.Segments.CR3_Obj
				Get
					Return CType(Children(15), Dom.Segments.CR3_Obj)
				End Get
				Set(value As Dom.Segments.CR3_Obj)
					Children(15) = value
				End Set
			End Property

			Private Property CR3_Std As Dom.Segments.CR3 Implements Dom.Transactions.Transaction837.Loops.Loop2300.CR3
				Get
					Return CType(Children(15), Dom.Segments.CR3_Obj)
				End Get
				Set(value As Dom.Segments.CR3)
					Children(15) = value
				End Set
			End Property

			Friend ReadOnly Property CR4_Obj As SegmentContainer(Of Dom.Segments.CR4) Implements Dom.Transactions.Transaction837.Loops.Loop2300.CR4
				Get
					Return CType(Children(16), SegmentContainer(Of Dom.Segments.CR4))
				End Get
			End Property

			Friend Property CR5_Obj As Dom.Segments.CR5_Obj
				Get
					Return CType(Children(17), Dom.Segments.CR5_Obj)
				End Get
				Set(value As Dom.Segments.CR5_Obj)
					Children(17) = value
				End Set
			End Property

			Private Property CR5_Std As Dom.Segments.CR5 Implements Dom.Transactions.Transaction837.Loops.Loop2300.CR5
				Get
					Return CType(Children(17), Dom.Segments.CR5_Obj)
				End Get
				Set(value As Dom.Segments.CR5)
					Children(17) = value
				End Set
			End Property

			Friend Property CR6_Obj As Dom.Segments.CR6_Obj
				Get
					Return CType(Children(18), Dom.Segments.CR6_Obj)
				End Get
				Set(value As Dom.Segments.CR6_Obj)
					Children(18) = value
				End Set
			End Property

			Private Property CR6_Std As Dom.Segments.CR6 Implements Dom.Transactions.Transaction837.Loops.Loop2300.CR6
				Get
					Return CType(Children(18), Dom.Segments.CR6_Obj)
				End Get
				Set(value As Dom.Segments.CR6)
					Children(18) = value
				End Set
			End Property

			Friend ReadOnly Property CR8_Obj As SegmentContainer(Of Dom.Segments.CR8) Implements Dom.Transactions.Transaction837.Loops.Loop2300.CR8
				Get
					Return CType(Children(19), SegmentContainer(Of Dom.Segments.CR8))
				End Get
			End Property

			Friend ReadOnly Property CRC_Obj As SegmentContainer(Of Dom.Segments.CRC) Implements Dom.Transactions.Transaction837.Loops.Loop2300.CRC
				Get
					Return CType(Children(20), SegmentContainer(Of Dom.Segments.CRC))
				End Get
			End Property

			Private CRCSubset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC, Dom.Segments.CRC)
			Private ReadOnly Property CRC_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC, Dom.Segments.CRC) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.CRC
				Get
					If CRCSubset_Loop2300_Obj_1 Is Nothing Then
						CRCSubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC, Dom.Segments.CRC)(Children(20), 3, 12, 74)
					End If

					Return CRCSubset_Loop2300_Obj_1
				End Get
			End Property
			Private CRC_1Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_1, Dom.Segments.CRC)
			Private ReadOnly Property CRC_1_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_1, Dom.Segments.CRC) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.CRC_1
				Get
					If CRC_1Subset_Loop2300_Obj_1 Is Nothing Then
						CRC_1Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_1, Dom.Segments.CRC)(Children(20), 3, 12, 1370)
					End If

					Return CRC_1Subset_Loop2300_Obj_1
				End Get
			End Property
			Private CRC_2Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_2, Dom.Segments.CRC)
			Private Property CRC_IFace_2_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_2 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.CRC_2
				Get
					If CRC_2Subset_Loop2300_Obj_1 Is Nothing Then
						CRC_2Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_2, Dom.Segments.CRC)(Children(20), 1, 12, 2666)
					End If

					If CRC_2Subset_Loop2300_Obj_1.Count > 0 Then
						Return CRC_2Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_2)
					If CRC_2Subset_Loop2300_Obj_1 Is Nothing Then
						CRC_2Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_2, Dom.Segments.CRC)(Children(20), 1, 12, 2666)
					End If

					If CRC_2Subset_Loop2300_Obj_1.Count = 0 Then
						CRC_2Subset_Loop2300_Obj_1.Add(value)
					Else
						CRC_2Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private CRC_3Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_3, Dom.Segments.CRC)
			Private Property CRC_IFace_3_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.CRC_3
				Get
					If CRC_3Subset_Loop2300_Obj_1 Is Nothing Then
						CRC_3Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_3, Dom.Segments.CRC)(Children(20), 1, 12, 3962)
					End If

					If CRC_3Subset_Loop2300_Obj_1.Count > 0 Then
						Return CRC_3Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_3)
					If CRC_3Subset_Loop2300_Obj_1 Is Nothing Then
						CRC_3Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_3, Dom.Segments.CRC)(Children(20), 1, 12, 3962)
					End If

					If CRC_3Subset_Loop2300_Obj_1.Count = 0 Then
						CRC_3Subset_Loop2300_Obj_1.Add(value)
					Else
						CRC_3Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private CRCSubset_1_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CRC, Dom.Segments.CRC)
			Private Property CRC_IFace_4_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CRC Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.CRC
				Get
					If CRCSubset_1_Loop2300_Obj_3 Is Nothing Then
						CRCSubset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CRC, Dom.Segments.CRC)(Children(20), 1, 12, 235946)
					End If

					If CRCSubset_1_Loop2300_Obj_3.Count > 0 Then
						Return CRCSubset_1_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CRC)
					If CRCSubset_1_Loop2300_Obj_3 Is Nothing Then
						CRCSubset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CRC, Dom.Segments.CRC)(Children(20), 1, 12, 235946)
					End If

					If CRCSubset_1_Loop2300_Obj_3.Count = 0 Then
						CRCSubset_1_Loop2300_Obj_3.Add(value)
					Else
						CRCSubset_1_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property HI_Obj As SegmentContainer(Of Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Loops.Loop2300.HI
				Get
					Return CType(Children(21), SegmentContainer(Of Dom.Segments.HI))
				End Get
			End Property

			Private HISubset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI, Dom.Segments.HI)
			Private Property HI_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.HI
				Get
					If HISubset_Loop2300_Obj_1 Is Nothing Then
						HISubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI, Dom.Segments.HI)(Children(21), 1, 12, 1406)
					End If

					If HISubset_Loop2300_Obj_1.Count > 0 Then
						Return HISubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI)
					If HISubset_Loop2300_Obj_1 Is Nothing Then
						HISubset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI, Dom.Segments.HI)(Children(21), 1, 12, 1406)
					End If

					If HISubset_Loop2300_Obj_1.Count = 0 Then
						HISubset_Loop2300_Obj_1.Add(value)
					Else
						HISubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private HI_1Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_1, Dom.Segments.HI)
			Private Property HI_IFace_1_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.HI_1
				Get
					If HI_1Subset_Loop2300_Obj_1 Is Nothing Then
						HI_1Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_1, Dom.Segments.HI)(Children(21), 1, 12, 141374)
					End If

					If HI_1Subset_Loop2300_Obj_1.Count > 0 Then
						Return HI_1Subset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_1)
					If HI_1Subset_Loop2300_Obj_1 Is Nothing Then
						HI_1Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_1, Dom.Segments.HI)(Children(21), 1, 12, 141374)
					End If

					If HI_1Subset_Loop2300_Obj_1.Count = 0 Then
						HI_1Subset_Loop2300_Obj_1.Add(value)
					Else
						HI_1Subset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private HI_2Subset_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_2, Dom.Segments.HI)
			Private ReadOnly Property HI_2_Loop2300_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_2, Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.HI_2
				Get
					If HI_2Subset_Loop2300_Obj_1 Is Nothing Then
						HI_2Subset_Loop2300_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_2, Dom.Segments.HI)(Children(21), 2, 12, 2702)
					End If

					Return HI_2Subset_Loop2300_Obj_1
				End Get
			End Property
			Private HISubset_1_Loop2300_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HI, Dom.Segments.HI)
			Private Property HI_IFace_3_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HI Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.HI
				Get
					If HISubset_1_Loop2300_Obj_2 Is Nothing Then
						HISubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HI, Dom.Segments.HI)(Children(21), 1, 12, 234901)
					End If

					If HISubset_1_Loop2300_Obj_2.Count > 0 Then
						Return HISubset_1_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HI)
					If HISubset_1_Loop2300_Obj_2 Is Nothing Then
						HISubset_1_Loop2300_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HI, Dom.Segments.HI)(Children(21), 1, 12, 234901)
					End If

					If HISubset_1_Loop2300_Obj_2.Count = 0 Then
						HISubset_1_Loop2300_Obj_2.Add(value)
					Else
						HISubset_1_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private HISubset_2_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI, Dom.Segments.HI)
			Private Property HI_IFace_4_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI
				Get
					If HISubset_2_Loop2300_Obj_3 Is Nothing Then
						HISubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI, Dom.Segments.HI)(Children(21), 1, 12, 1406)
					End If

					If HISubset_2_Loop2300_Obj_3.Count > 0 Then
						Return HISubset_2_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI)
					If HISubset_2_Loop2300_Obj_3 Is Nothing Then
						HISubset_2_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI, Dom.Segments.HI)(Children(21), 1, 12, 1406)
					End If

					If HISubset_2_Loop2300_Obj_3.Count = 0 Then
						HISubset_2_Loop2300_Obj_3.Add(value)
					Else
						HISubset_2_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private HI_1Subset_1_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_1, Dom.Segments.HI)
			Private Property HI_IFace_5_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_1
				Get
					If HI_1Subset_1_Loop2300_Obj_3 Is Nothing Then
						HI_1Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_1, Dom.Segments.HI)(Children(21), 1, 12, 188030)
					End If

					If HI_1Subset_1_Loop2300_Obj_3.Count > 0 Then
						Return HI_1Subset_1_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_1)
					If HI_1Subset_1_Loop2300_Obj_3 Is Nothing Then
						HI_1Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_1, Dom.Segments.HI)(Children(21), 1, 12, 188030)
					End If

					If HI_1Subset_1_Loop2300_Obj_3.Count = 0 Then
						HI_1Subset_1_Loop2300_Obj_3.Add(value)
					Else
						HI_1Subset_1_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private HI_2Subset_1_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_2, Dom.Segments.HI)
			Private Property HI_IFace_6_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_2 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_2
				Get
					If HI_2Subset_1_Loop2300_Obj_3 Is Nothing Then
						HI_2Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_2, Dom.Segments.HI)(Children(21), 1, 12, 234686)
					End If

					If HI_2Subset_1_Loop2300_Obj_3.Count > 0 Then
						Return HI_2Subset_1_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_2)
					If HI_2Subset_1_Loop2300_Obj_3 Is Nothing Then
						HI_2Subset_1_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_2, Dom.Segments.HI)(Children(21), 1, 12, 234686)
					End If

					If HI_2Subset_1_Loop2300_Obj_3.Count = 0 Then
						HI_2Subset_1_Loop2300_Obj_3.Add(value)
					Else
						HI_2Subset_1_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private HI_3Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_3, Dom.Segments.HI)
			Private Property HI_IFace_7_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_3
				Get
					If HI_3Subset_Loop2300_Obj_3 Is Nothing Then
						HI_3Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_3, Dom.Segments.HI)(Children(21), 1, 12, 327998)
					End If

					If HI_3Subset_Loop2300_Obj_3.Count > 0 Then
						Return HI_3Subset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_3)
					If HI_3Subset_Loop2300_Obj_3 Is Nothing Then
						HI_3Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_3, Dom.Segments.HI)(Children(21), 1, 12, 327998)
					End If

					If HI_3Subset_Loop2300_Obj_3.Count = 0 Then
						HI_3Subset_Loop2300_Obj_3.Add(value)
					Else
						HI_3Subset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private HI_4Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_4, Dom.Segments.HI)
			Private Property HI_IFace_8_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_4
				Get
					If HI_4Subset_Loop2300_Obj_3 Is Nothing Then
						HI_4Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_4, Dom.Segments.HI)(Children(21), 1, 12, 2702)
					End If

					If HI_4Subset_Loop2300_Obj_3.Count > 0 Then
						Return HI_4Subset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_4)
					If HI_4Subset_Loop2300_Obj_3 Is Nothing Then
						HI_4Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_4, Dom.Segments.HI)(Children(21), 1, 12, 2702)
					End If

					If HI_4Subset_Loop2300_Obj_3.Count = 0 Then
						HI_4Subset_Loop2300_Obj_3.Add(value)
					Else
						HI_4Subset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private HI_5Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_5, Dom.Segments.HI)
			Private ReadOnly Property HI_5_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_5, Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_5
				Get
					If HI_5Subset_Loop2300_Obj_3 Is Nothing Then
						HI_5Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_5, Dom.Segments.HI)(Children(21), 2, 12, 3998)
					End If

					Return HI_5Subset_Loop2300_Obj_3
				End Get
			End Property
			Private HI_6Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_6, Dom.Segments.HI)
			Private Property HI_IFace_10_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_6 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_6
				Get
					If HI_6Subset_Loop2300_Obj_3 Is Nothing Then
						HI_6Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_6, Dom.Segments.HI)(Children(21), 1, 12, 5294)
					End If

					If HI_6Subset_Loop2300_Obj_3.Count > 0 Then
						Return HI_6Subset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_6)
					If HI_6Subset_Loop2300_Obj_3 Is Nothing Then
						HI_6Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_6, Dom.Segments.HI)(Children(21), 1, 12, 5294)
					End If

					If HI_6Subset_Loop2300_Obj_3.Count = 0 Then
						HI_6Subset_Loop2300_Obj_3.Add(value)
					Else
						HI_6Subset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private HI_7Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_7, Dom.Segments.HI)
			Private ReadOnly Property HI_7_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_7, Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_7
				Get
					If HI_7Subset_Loop2300_Obj_3 Is Nothing Then
						HI_7Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_7, Dom.Segments.HI)(Children(21), 2, 12, 6590)
					End If

					Return HI_7Subset_Loop2300_Obj_3
				End Get
			End Property
			Private HI_8Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_8, Dom.Segments.HI)
			Private ReadOnly Property HI_8_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_8, Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_8
				Get
					If HI_8Subset_Loop2300_Obj_3 Is Nothing Then
						HI_8Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_8, Dom.Segments.HI)(Children(21), 2, 12, 7886)
					End If

					Return HI_8Subset_Loop2300_Obj_3
				End Get
			End Property
			Private HI_9Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_9, Dom.Segments.HI)
			Private ReadOnly Property HI_9_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_9, Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_9
				Get
					If HI_9Subset_Loop2300_Obj_3 Is Nothing Then
						HI_9Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_9, Dom.Segments.HI)(Children(21), 2, 12, 9182)
					End If

					Return HI_9Subset_Loop2300_Obj_3
				End Get
			End Property
			Private HI_10Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_10, Dom.Segments.HI)
			Private ReadOnly Property HI_10_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_10, Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_10
				Get
					If HI_10Subset_Loop2300_Obj_3 Is Nothing Then
						HI_10Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_10, Dom.Segments.HI)(Children(21), 2, 12, 10478)
					End If

					Return HI_10Subset_Loop2300_Obj_3
				End Get
			End Property
			Private HI_11Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_11, Dom.Segments.HI)
			Private ReadOnly Property HI_11_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_11, Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_11
				Get
					If HI_11Subset_Loop2300_Obj_3 Is Nothing Then
						HI_11Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_11, Dom.Segments.HI)(Children(21), 2, 12, 11774)
					End If

					Return HI_11Subset_Loop2300_Obj_3
				End Get
			End Property
			Private HI_12Subset_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_12, Dom.Segments.HI)
			Private ReadOnly Property HI_12_Loop2300_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_12, Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HI_12
				Get
					If HI_12Subset_Loop2300_Obj_3 Is Nothing Then
						HI_12Subset_Loop2300_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_12, Dom.Segments.HI)(Children(21), 2, 12, 13070)
					End If

					Return HI_12Subset_Loop2300_Obj_3
				End Get
			End Property
			Friend ReadOnly Property QTY_Obj As SegmentContainer(Of Dom.Segments.QTY) Implements Dom.Transactions.Transaction837.Loops.Loop2300.QTY
				Get
					Return CType(Children(22), SegmentContainer(Of Dom.Segments.QTY))
				End Get
			End Property

			Friend Property HCP_Obj As Dom.Segments.HCP_Obj
				Get
					Return CType(Children(23), Dom.Segments.HCP_Obj)
				End Get
				Set(value As Dom.Segments.HCP_Obj)
					Children(23) = value
				End Set
			End Property

			Private Property HCP_Std As Dom.Segments.HCP Implements Dom.Transactions.Transaction837.Loops.Loop2300.HCP
				Get
					Return CType(Children(23), Dom.Segments.HCP_Obj)
				End Get
				Set(value As Dom.Segments.HCP)
					Children(23) = value
				End Set
			End Property

			Private Property HCP_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HCP Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.HCP
				Get
					Return CType(Children(23), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HCP)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HCP)
					Children(23) = value
				End Set
			End Property
			Private Property HCP_IFace_1_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HCP Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.HCP
				Get
					Return CType(Children(23), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HCP)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HCP)
					Children(23) = value
				End Set
			End Property
			Private Property HCP_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HCP Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.HCP
				Get
					Return CType(Children(23), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HCP)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HCP)
					Children(23) = value
				End Set
			End Property
			Friend ReadOnly Property Loop2305_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2305) Implements Dom.Transactions.Transaction837.Loops.Loop2300.Loop2305
				Get
					Return CType(Children(24), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2305))
				End Get
			End Property

			Friend ReadOnly Property Loop2310_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2310) Implements Dom.Transactions.Transaction837.Loops.Loop2300.Loop2310
				Get
					Return CType(Children(25), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2310))
				End Get
			End Property

			Private Loop2310ASubset_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private ReadOnly Property Loop2310A_Obj_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.Loop2310A
				Get
					If Loop2310ASubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310ASubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 2, 12, 182)
					End If

					Return Loop2310ASubset_Loop2300_Obj_1
				End Get
			End Property
			Private Loop2310BSubset_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310B_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.Loop2310B
				Get
					If Loop2310BSubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310BSubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 13, 182)
					End If

					If Loop2310BSubset_Loop2300_Obj_1.Count > 0 Then
						Return Loop2310BSubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B)
					If Loop2310BSubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310BSubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 13, 182)
					End If

					If Loop2310BSubset_Loop2300_Obj_1.Count = 0 Then
						Loop2310BSubset_Loop2300_Obj_1.Add(value)
					Else
						Loop2310BSubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2310CSubset_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310C_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.Loop2310C
				Get
					If Loop2310CSubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310CSubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 15, 182)
					End If

					If Loop2310CSubset_Loop2300_Obj_1.Count > 0 Then
						Return Loop2310CSubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C)
					If Loop2310CSubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310CSubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 15, 182)
					End If

					If Loop2310CSubset_Loop2300_Obj_1.Count = 0 Then
						Loop2310CSubset_Loop2300_Obj_1.Add(value)
					Else
						Loop2310CSubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2310DSubset_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310D_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.Loop2310D
				Get
					If Loop2310DSubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310DSubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 16, 182)
					End If

					If Loop2310DSubset_Loop2300_Obj_1.Count > 0 Then
						Return Loop2310DSubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D)
					If Loop2310DSubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310DSubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 16, 182)
					End If

					If Loop2310DSubset_Loop2300_Obj_1.Count = 0 Then
						Loop2310DSubset_Loop2300_Obj_1.Add(value)
					Else
						Loop2310DSubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2310ESubset_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310E_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.Loop2310E
				Get
					If Loop2310ESubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310ESubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 17, 182)
					End If

					If Loop2310ESubset_Loop2300_Obj_1.Count > 0 Then
						Return Loop2310ESubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E)
					If Loop2310ESubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310ESubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 17, 182)
					End If

					If Loop2310ESubset_Loop2300_Obj_1.Count = 0 Then
						Loop2310ESubset_Loop2300_Obj_1.Add(value)
					Else
						Loop2310ESubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2310FSubset_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310F_IFace_Loop2300_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.Loop2310F
				Get
					If Loop2310FSubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310FSubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 18, 182)
					End If

					If Loop2310FSubset_Loop2300_Obj_1.Count > 0 Then
						Return Loop2310FSubset_Loop2300_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F)
					If Loop2310FSubset_Loop2300_Obj_1 Is Nothing Then
						Loop2310FSubset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 18, 182)
					End If

					If Loop2310FSubset_Loop2300_Obj_1.Count = 0 Then
						Loop2310FSubset_Loop2300_Obj_1.Add(value)
					Else
						Loop2310FSubset_Loop2300_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2310ASubset_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private ReadOnly Property Loop2310A_Obj_1_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.Loop2310A
				Get
					If Loop2310ASubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310ASubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 2, 12, 182)
					End If

					Return Loop2310ASubset_Loop2300_Obj_2
				End Get
			End Property
			Private Loop2310BSubset_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310B_IFace_1_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.Loop2310B
				Get
					If Loop2310BSubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310BSubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 13, 182)
					End If

					If Loop2310BSubset_Loop2300_Obj_2.Count > 0 Then
						Return Loop2310BSubset_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B)
					If Loop2310BSubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310BSubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 13, 182)
					End If

					If Loop2310BSubset_Loop2300_Obj_2.Count = 0 Then
						Loop2310BSubset_Loop2300_Obj_2.Add(value)
					Else
						Loop2310BSubset_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2310CSubset_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310C_IFace_1_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.Loop2310C
				Get
					If Loop2310CSubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310CSubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 14, 182)
					End If

					If Loop2310CSubset_Loop2300_Obj_2.Count > 0 Then
						Return Loop2310CSubset_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C)
					If Loop2310CSubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310CSubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 14, 182)
					End If

					If Loop2310CSubset_Loop2300_Obj_2.Count = 0 Then
						Loop2310CSubset_Loop2300_Obj_2.Add(value)
					Else
						Loop2310CSubset_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2310DSubset_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310D_IFace_1_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.Loop2310D
				Get
					If Loop2310DSubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310DSubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 15, 182)
					End If

					If Loop2310DSubset_Loop2300_Obj_2.Count > 0 Then
						Return Loop2310DSubset_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D)
					If Loop2310DSubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310DSubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 15, 182)
					End If

					If Loop2310DSubset_Loop2300_Obj_2.Count = 0 Then
						Loop2310DSubset_Loop2300_Obj_2.Add(value)
					Else
						Loop2310DSubset_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2310ESubset_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310E_IFace_1_Loop2300_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.Loop2310E
				Get
					If Loop2310ESubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310ESubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 15, 3)
					End If

					If Loop2310ESubset_Loop2300_Obj_2.Count > 0 Then
						Return Loop2310ESubset_Loop2300_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E)
					If Loop2310ESubset_Loop2300_Obj_2 Is Nothing Then
						Loop2310ESubset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 15, 3)
					End If

					If Loop2310ESubset_Loop2300_Obj_2.Count = 0 Then
						Loop2310ESubset_Loop2300_Obj_2.Add(value)
					Else
						Loop2310ESubset_Loop2300_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2310ASubset_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310A_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.Loop2310A
				Get
					If Loop2310ASubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310ASubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 12, 182)
					End If

					If Loop2310ASubset_Loop2300_Obj_3.Count > 0 Then
						Return Loop2310ASubset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A)
					If Loop2310ASubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310ASubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 12, 182)
					End If

					If Loop2310ASubset_Loop2300_Obj_3.Count = 0 Then
						Loop2310ASubset_Loop2300_Obj_3.Add(value)
					Else
						Loop2310ASubset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2310BSubset_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310B_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.Loop2310B
				Get
					If Loop2310BSubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310BSubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 13, 182)
					End If

					If Loop2310BSubset_Loop2300_Obj_3.Count > 0 Then
						Return Loop2310BSubset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B)
					If Loop2310BSubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310BSubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 13, 182)
					End If

					If Loop2310BSubset_Loop2300_Obj_3.Count = 0 Then
						Loop2310BSubset_Loop2300_Obj_3.Add(value)
					Else
						Loop2310BSubset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2310CSubset_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310C_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.Loop2310C
				Get
					If Loop2310CSubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310CSubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 14, 182)
					End If

					If Loop2310CSubset_Loop2300_Obj_3.Count > 0 Then
						Return Loop2310CSubset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C)
					If Loop2310CSubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310CSubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 14, 182)
					End If

					If Loop2310CSubset_Loop2300_Obj_3.Count = 0 Then
						Loop2310CSubset_Loop2300_Obj_3.Add(value)
					Else
						Loop2310CSubset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2310DSubset_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310D_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.Loop2310D
				Get
					If Loop2310DSubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310DSubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 15, 182)
					End If

					If Loop2310DSubset_Loop2300_Obj_3.Count > 0 Then
						Return Loop2310DSubset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D)
					If Loop2310DSubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310DSubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 15, 182)
					End If

					If Loop2310DSubset_Loop2300_Obj_3.Count = 0 Then
						Loop2310DSubset_Loop2300_Obj_3.Add(value)
					Else
						Loop2310DSubset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2310ESubset_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310E_IFace_2_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.Loop2310E
				Get
					If Loop2310ESubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310ESubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 16, 182)
					End If

					If Loop2310ESubset_Loop2300_Obj_3.Count > 0 Then
						Return Loop2310ESubset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E)
					If Loop2310ESubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310ESubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 16, 182)
					End If

					If Loop2310ESubset_Loop2300_Obj_3.Count = 0 Then
						Loop2310ESubset_Loop2300_Obj_3.Add(value)
					Else
						Loop2310ESubset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2310FSubset_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F, Dom.Transactions.Transaction837.Loops.Loop2310)
			Private Property Loop2310F_IFace_1_Loop2300_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.Loop2310F
				Get
					If Loop2310FSubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310FSubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 16, 290)
					End If

					If Loop2310FSubset_Loop2300_Obj_3.Count > 0 Then
						Return Loop2310FSubset_Loop2300_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F)
					If Loop2310FSubset_Loop2300_Obj_3 Is Nothing Then
						Loop2310FSubset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F, Dom.Transactions.Transaction837.Loops.Loop2310)(Children(25), 1, 16, 290)
					End If

					If Loop2310FSubset_Loop2300_Obj_3.Count = 0 Then
						Loop2310FSubset_Loop2300_Obj_3.Add(value)
					Else
						Loop2310FSubset_Loop2300_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property Loop2320_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2320) Implements Dom.Transactions.Transaction837.Loops.Loop2300.Loop2320
				Get
					Return CType(Children(26), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2320))
				End Get
			End Property

			Private Loop2320Subset_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)
			Private ReadOnly Property Loop2320_Obj_1_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.Loop2320
				Get
					If Loop2320Subset_Loop2300_Obj_1 Is Nothing Then
						Loop2320Subset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)(Children(26), 10, 19, 326)
					End If

					Return Loop2320Subset_Loop2300_Obj_1
				End Get
			End Property
			Private Loop2320Subset_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)
			Private ReadOnly Property Loop2320_Obj_2_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.Loop2320
				Get
					If Loop2320Subset_Loop2300_Obj_2 Is Nothing Then
						Loop2320Subset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)(Children(26), 10, 19, 326)
					End If

					Return Loop2320Subset_Loop2300_Obj_2
				End Get
			End Property
			Private Loop2320Subset_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)
			Private ReadOnly Property Loop2320_Obj_3_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.Loop2320
				Get
					If Loop2320Subset_Loop2300_Obj_3 Is Nothing Then
						Loop2320Subset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)(Children(26), 10, 19, 326)
					End If

					Return Loop2320Subset_Loop2300_Obj_3
				End Get
			End Property
			Friend ReadOnly Property Loop2400_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2400) Implements Dom.Transactions.Transaction837.Loops.Loop2300.Loop2400
				Get
					Return CType(Children(27), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2400))
				End Get
			End Property

			Private Loop2400Subset_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)
			Private ReadOnly Property Loop2400_Obj_1_Loop2300_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300.Loop2400
				Get
					If Loop2400Subset_Loop2300_Obj_1 Is Nothing Then
						Loop2400Subset_Loop2300_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)(Children(27), 50, 25, 6699)
					End If

					Return Loop2400Subset_Loop2300_Obj_1
				End Get
			End Property
			Private Loop2400Subset_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)
			Private ReadOnly Property Loop2400_Obj_2_Loop2300_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300.Loop2400
				Get
					If Loop2400Subset_Loop2300_Obj_2 Is Nothing Then
						Loop2400Subset_Loop2300_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)(Children(27), 50, 25, 6699)
					End If

					Return Loop2400Subset_Loop2300_Obj_2
				End Get
			End Property
			Private Loop2400Subset_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)
			Private ReadOnly Property Loop2400_Obj_3_Loop2300_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300.Loop2400
				Get
					If Loop2400Subset_Loop2300_Obj_3 Is Nothing Then
						Loop2400Subset_Loop2300_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)(Children(27), 999, 25, 6699)
					End If

					Return Loop2400Subset_Loop2300_Obj_3
				End Get
			End Property

		End Class
		Partial Friend Class Loop2305_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2305
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.CR7_Obj),
													New SegmentContainer(Of Dom.Segments.HSD)(12, 2, 2430)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "CR7", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "HSD", ReadAction.PopulateSegment, 2, False),
									New ReaderState(2, "HSD", ReadAction.PopulateSegment, 2, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "CR7", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR7_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR7_Obj = Seg
				ElseIf String.Compare(segmentName, "HSD", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.HSD_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					HSD_Obj.Add(Seg)
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property CR7_Obj As Dom.Segments.CR7_Obj
				Get
					Return CType(Children(0), Dom.Segments.CR7_Obj)
				End Get
				Set(value As Dom.Segments.CR7_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property CR7_Std As Dom.Segments.CR7 Implements Dom.Transactions.Transaction837.Loops.Loop2305.CR7
				Get
					Return CType(Children(0), Dom.Segments.CR7_Obj)
				End Get
				Set(value As Dom.Segments.CR7)
					Children(0) = value
				End Set
			End Property

			Friend ReadOnly Property HSD_Obj As SegmentContainer(Of Dom.Segments.HSD) Implements Dom.Transactions.Transaction837.Loops.Loop2305.HSD
				Get
					Return CType(Children(1), SegmentContainer(Of Dom.Segments.HSD))
				End Get
			End Property


		End Class
		Partial Friend Class Loop2310_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2310,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310A,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310A,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.NM1_Obj),
													CType(Nothing, Dom.Segments.PRV_Obj),
													New SegmentContainer(Of Dom.Segments.N2)(2, 2, 2600),
													New SegmentContainer(Of Dom.Segments.N3)(2, 2, 2650),
													CType(Nothing, Dom.Segments.N4_Obj),
													New SegmentContainer(Of Dom.Segments.REF)(20, 2, 2710),
													New SegmentContainer(Of Dom.Segments.PER)(2, 2, 2750)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "NM1", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "PRV", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "N2", ReadAction.PopulateSegment, 3, False),
									New ReaderState(2, "N2", ReadAction.PopulateSegment, 3, False),
									New ReaderState(3, "N2", ReadAction.PopulateSegment, 3, False),
									New ReaderState(1, "N3", ReadAction.PopulateSegment, 5, False),
									New ReaderState(2, "N3", ReadAction.PopulateSegment, 5, False),
									New ReaderState(3, "N3", ReadAction.PopulateSegment, 5, False),
									New ReaderState(5, "N3", ReadAction.PopulateSegment, 5, False),
									New ReaderState(1, "N4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(2, "N4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(3, "N4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(5, "N4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(1, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(2, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(3, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(5, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(7, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(8, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(1, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(2, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(3, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(5, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(7, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(8, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(10, "PER", ReadAction.PopulateSegment, 10, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.NM1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					NM1_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.NM1_Obj)
					If MyBase.CompareKey(S2.NM101, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 13
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";77;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 16
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";PW;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 17
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";45;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 18
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 13
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";77;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 14
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";DD;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 3
					ElseIf MyBase.CompareKey(S2.NM101, ";71;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";72;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 13
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";ZZ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 14
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";77;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 16
						Seg.SetSequence = 182
					ElseIf MyBase.CompareKey(S2.NM101, ";DN;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 16
						Seg.SetSequence = 290
					End If
				ElseIf String.Compare(segmentName, "PRV", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PRV_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PRV_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.PRV_Obj)
					If MyBase.CompareKey(S2.PRV01, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 13
						Seg.SetSequence = 6662
					ElseIf MyBase.CompareKey(S2.PRV01, ";RF;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6662
					ElseIf MyBase.CompareKey(S2.PRV01, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 13
						Seg.SetSequence = 6662
					ElseIf MyBase.CompareKey(S2.PRV01, ";AS;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 6662
					ElseIf MyBase.CompareKey(S2.PRV01, ";AT;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 6662
					End If
				ElseIf String.Compare(segmentName, "N2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N2_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N3_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N4", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N4_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N4_Obj = Seg
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.REF_Obj)
					If MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 13
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2310D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 16
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 13
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 14
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2310E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 75
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 12
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 13
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 14
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 15
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 16
						Seg.SetSequence = 1550
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2310F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 16
						Seg.SetSequence = 6770
					End If
				ElseIf String.Compare(segmentName, "PER", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PER_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PER_Obj.Add(Seg)
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property NM1_Obj As Dom.Segments.NM1_Obj
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_Std As Dom.Segments.NM1 Implements Dom.Transactions.Transaction837.Loops.Loop2310.NM1
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_IFace_Loop2310A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_1_Loop2310B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_2_Loop2310C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_3_Loop2310D_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310D.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_4_Loop2310E_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_5_Loop2310F_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_6_Loop2310A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_7_Loop2310B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_8_Loop2310C_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_9_Loop2310D_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_10_Loop2310E_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310E.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310E.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310E.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_11_Loop2310A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_12_Loop2310B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_13_Loop2310C_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_14_Loop2310D_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310D.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_15_Loop2310E_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_16_Loop2310F_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310F.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310F.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310F.NM1)
					Children(0) = value
				End Set
			End Property
			Friend Property PRV_Obj As Dom.Segments.PRV_Obj
				Get
					Return CType(Children(1), Dom.Segments.PRV_Obj)
				End Get
				Set(value As Dom.Segments.PRV_Obj)
					Children(1) = value
				End Set
			End Property

			Private Property PRV_Std As Dom.Segments.PRV Implements Dom.Transactions.Transaction837.Loops.Loop2310.PRV
				Get
					Return CType(Children(1), Dom.Segments.PRV_Obj)
				End Get
				Set(value As Dom.Segments.PRV)
					Children(1) = value
				End Set
			End Property

			Private Property PRV_IFace_Loop2310B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.PRV)
					Children(1) = value
				End Set
			End Property
			Private Property PRV_IFace_1_Loop2310A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310A.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.PRV)
					Children(1) = value
				End Set
			End Property
			Private Property PRV_IFace_2_Loop2310B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.PRV)
					Children(1) = value
				End Set
			End Property
			Private Property PRV_IFace_3_Loop2310D_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.PRV)
					Children(1) = value
				End Set
			End Property
			Private Property PRV_IFace_4_Loop2310A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.PRV)
					Children(1) = value
				End Set
			End Property
			Friend ReadOnly Property N2_Obj As SegmentContainer(Of Dom.Segments.N2) Implements Dom.Transactions.Transaction837.Loops.Loop2310.N2
				Get
					Return CType(Children(2), SegmentContainer(Of Dom.Segments.N2))
				End Get
			End Property

			Friend ReadOnly Property N3_Obj As SegmentContainer(Of Dom.Segments.N3) Implements Dom.Transactions.Transaction837.Loops.Loop2310.N3
				Get
					Return CType(Children(3), SegmentContainer(Of Dom.Segments.N3))
				End Get
			End Property

			Private N3Subset_Loop2310C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N3, Dom.Segments.N3)
			Private Property N3_IFace_Loop2310C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C.N3
				Get
					If N3Subset_Loop2310C_Obj Is Nothing Then
						N3Subset_Loop2310C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N3, Dom.Segments.N3)(Children(3), 1, 15, 6698)
					End If

					If N3Subset_Loop2310C_Obj.Count > 0 Then
						Return N3Subset_Loop2310C_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N3)
					If N3Subset_Loop2310C_Obj Is Nothing Then
						N3Subset_Loop2310C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N3, Dom.Segments.N3)(Children(3), 1, 15, 6698)
					End If

					If N3Subset_Loop2310C_Obj.Count = 0 Then
						N3Subset_Loop2310C_Obj.Add(value)
					Else
						N3Subset_Loop2310C_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_1_Loop2310E_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N3, Dom.Segments.N3)
			Private Property N3_IFace_1_Loop2310E_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E.N3
				Get
					If N3Subset_1_Loop2310E_Obj Is Nothing Then
						N3Subset_1_Loop2310E_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N3, Dom.Segments.N3)(Children(3), 1, 17, 6698)
					End If

					If N3Subset_1_Loop2310E_Obj.Count > 0 Then
						Return N3Subset_1_Loop2310E_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N3)
					If N3Subset_1_Loop2310E_Obj Is Nothing Then
						N3Subset_1_Loop2310E_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N3, Dom.Segments.N3)(Children(3), 1, 17, 6698)
					End If

					If N3Subset_1_Loop2310E_Obj.Count = 0 Then
						N3Subset_1_Loop2310E_Obj.Add(value)
					Else
						N3Subset_1_Loop2310E_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_2_Loop2310F_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N3, Dom.Segments.N3)
			Private Property N3_IFace_2_Loop2310F_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F.N3
				Get
					If N3Subset_2_Loop2310F_Obj Is Nothing Then
						N3Subset_2_Loop2310F_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N3, Dom.Segments.N3)(Children(3), 1, 18, 6698)
					End If

					If N3Subset_2_Loop2310F_Obj.Count > 0 Then
						Return N3Subset_2_Loop2310F_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N3)
					If N3Subset_2_Loop2310F_Obj Is Nothing Then
						N3Subset_2_Loop2310F_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N3, Dom.Segments.N3)(Children(3), 1, 18, 6698)
					End If

					If N3Subset_2_Loop2310F_Obj.Count = 0 Then
						N3Subset_2_Loop2310F_Obj.Add(value)
					Else
						N3Subset_2_Loop2310F_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_3_Loop2310C_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N3, Dom.Segments.N3)
			Private Property N3_IFace_3_Loop2310C_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C.N3
				Get
					If N3Subset_3_Loop2310C_Obj_1 Is Nothing Then
						N3Subset_3_Loop2310C_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N3, Dom.Segments.N3)(Children(3), 1, 14, 1514)
					End If

					If N3Subset_3_Loop2310C_Obj_1.Count > 0 Then
						Return N3Subset_3_Loop2310C_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N3)
					If N3Subset_3_Loop2310C_Obj_1 Is Nothing Then
						N3Subset_3_Loop2310C_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N3, Dom.Segments.N3)(Children(3), 1, 14, 1514)
					End If

					If N3Subset_3_Loop2310C_Obj_1.Count = 0 Then
						N3Subset_3_Loop2310C_Obj_1.Add(value)
					Else
						N3Subset_3_Loop2310C_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_4_Loop2310E_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N3, Dom.Segments.N3)
			Private Property N3_IFace_4_Loop2310E_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E.N3
				Get
					If N3Subset_4_Loop2310E_Obj_2 Is Nothing Then
						N3Subset_4_Loop2310E_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N3, Dom.Segments.N3)(Children(3), 1, 16, 6698)
					End If

					If N3Subset_4_Loop2310E_Obj_2.Count > 0 Then
						Return N3Subset_4_Loop2310E_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N3)
					If N3Subset_4_Loop2310E_Obj_2 Is Nothing Then
						N3Subset_4_Loop2310E_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N3, Dom.Segments.N3)(Children(3), 1, 16, 6698)
					End If

					If N3Subset_4_Loop2310E_Obj_2.Count = 0 Then
						N3Subset_4_Loop2310E_Obj_2.Add(value)
					Else
						N3Subset_4_Loop2310E_Obj_2(0) = value
					End If
				End Set
			End Property
			Friend Property N4_Obj As Dom.Segments.N4_Obj
				Get
					Return CType(Children(4), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4_Obj)
					Children(4) = value
				End Set
			End Property

			Private Property N4_Std As Dom.Segments.N4 Implements Dom.Transactions.Transaction837.Loops.Loop2310.N4
				Get
					Return CType(Children(4), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4)
					Children(4) = value
				End Set
			End Property

			Private Property N4_IFace_Loop2310C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N4)
					Children(4) = value
				End Set
			End Property
			Private Property N4_IFace_1_Loop2310E_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N4)
					Children(4) = value
				End Set
			End Property
			Private Property N4_IFace_2_Loop2310F_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N4)
					Children(4) = value
				End Set
			End Property
			Private Property N4_IFace_3_Loop2310C_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N4)
					Children(4) = value
				End Set
			End Property
			Private Property N4_IFace_4_Loop2310E_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N4)
					Children(4) = value
				End Set
			End Property
			Friend ReadOnly Property REF_Obj As SegmentContainer(Of Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Loops.Loop2310.REF
				Get
					Return CType(Children(5), SegmentContainer(Of Dom.Segments.REF))
				End Get
			End Property

			Private REFSubset_Loop2310A_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310A.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310A_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310A.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310A.REF
				Get
					If REFSubset_Loop2310A_Obj Is Nothing Then
						REFSubset_Loop2310A_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310A.REF, Dom.Segments.REF)(Children(5), 3, 12, 1550)
					End If

					Return REFSubset_Loop2310A_Obj
				End Get
			End Property
			Private REFSubset_1_Loop2310B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B.REF
				Get
					If REFSubset_1_Loop2310B_Obj Is Nothing Then
						REFSubset_1_Loop2310B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.REF, Dom.Segments.REF)(Children(5), 4, 13, 1550)
					End If

					Return REFSubset_1_Loop2310B_Obj
				End Get
			End Property
			Private REFSubset_2_Loop2310C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C.REF
				Get
					If REFSubset_2_Loop2310C_Obj Is Nothing Then
						REFSubset_2_Loop2310C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.REF, Dom.Segments.REF)(Children(5), 3, 15, 1550)
					End If

					Return REFSubset_2_Loop2310C_Obj
				End Get
			End Property
			Private REFSubset_3_Loop2310D_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310D_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D.REF
				Get
					If REFSubset_3_Loop2310D_Obj Is Nothing Then
						REFSubset_3_Loop2310D_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310D.REF, Dom.Segments.REF)(Children(5), 4, 16, 1550)
					End If

					Return REFSubset_3_Loop2310D_Obj
				End Get
			End Property
			Private REFSubset_4_Loop2310A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310A.REF
				Get
					If REFSubset_4_Loop2310A_Obj_1 Is Nothing Then
						REFSubset_4_Loop2310A_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.REF, Dom.Segments.REF)(Children(5), 3, 12, 1550)
					End If

					Return REFSubset_4_Loop2310A_Obj_1
				End Get
			End Property
			Private REFSubset_5_Loop2310B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B.REF
				Get
					If REFSubset_5_Loop2310B_Obj_1 Is Nothing Then
						REFSubset_5_Loop2310B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.REF, Dom.Segments.REF)(Children(5), 4, 13, 1550)
					End If

					Return REFSubset_5_Loop2310B_Obj_1
				End Get
			End Property
			Private REFSubset_6_Loop2310C_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310C_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C.REF
				Get
					If REFSubset_6_Loop2310C_Obj_1 Is Nothing Then
						REFSubset_6_Loop2310C_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.REF, Dom.Segments.REF)(Children(5), 3, 14, 1550)
					End If

					Return REFSubset_6_Loop2310C_Obj_1
				End Get
			End Property
			Private REFSubset_7_Loop2310D_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310D_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D.REF
				Get
					If REFSubset_7_Loop2310D_Obj_1 Is Nothing Then
						REFSubset_7_Loop2310D_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.REF, Dom.Segments.REF)(Children(5), 4, 15, 1550)
					End If

					Return REFSubset_7_Loop2310D_Obj_1
				End Get
			End Property
			Private REFSubset_8_Loop2310E_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310E.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310E_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310E.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E.REF
				Get
					If REFSubset_8_Loop2310E_Obj_1 Is Nothing Then
						REFSubset_8_Loop2310E_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310E.REF, Dom.Segments.REF)(Children(5), 4, 15, 75)
					End If

					Return REFSubset_8_Loop2310E_Obj_1
				End Get
			End Property
			Private REFSubset_9_Loop2310A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A.REF
				Get
					If REFSubset_9_Loop2310A_Obj_2 Is Nothing Then
						REFSubset_9_Loop2310A_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.REF, Dom.Segments.REF)(Children(5), 4, 12, 1550)
					End If

					Return REFSubset_9_Loop2310A_Obj_2
				End Get
			End Property
			Private REFSubset_10_Loop2310B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B.REF
				Get
					If REFSubset_10_Loop2310B_Obj_2 Is Nothing Then
						REFSubset_10_Loop2310B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310B.REF, Dom.Segments.REF)(Children(5), 4, 13, 1550)
					End If

					Return REFSubset_10_Loop2310B_Obj_2
				End Get
			End Property
			Private REFSubset_11_Loop2310C_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310C_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C.REF
				Get
					If REFSubset_11_Loop2310C_Obj_2 Is Nothing Then
						REFSubset_11_Loop2310C_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310C.REF, Dom.Segments.REF)(Children(5), 4, 14, 1550)
					End If

					Return REFSubset_11_Loop2310C_Obj_2
				End Get
			End Property
			Private REFSubset_12_Loop2310D_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310D_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D.REF
				Get
					If REFSubset_12_Loop2310D_Obj_2 Is Nothing Then
						REFSubset_12_Loop2310D_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310D.REF, Dom.Segments.REF)(Children(5), 4, 15, 1550)
					End If

					Return REFSubset_12_Loop2310D_Obj_2
				End Get
			End Property
			Private REFSubset_13_Loop2310E_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310E_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E.REF
				Get
					If REFSubset_13_Loop2310E_Obj_2 Is Nothing Then
						REFSubset_13_Loop2310E_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.REF, Dom.Segments.REF)(Children(5), 3, 16, 1550)
					End If

					Return REFSubset_13_Loop2310E_Obj_2
				End Get
			End Property
			Private REFSubset_14_Loop2310F_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310F.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2310F_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310F.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F.REF
				Get
					If REFSubset_14_Loop2310F_Obj_1 Is Nothing Then
						REFSubset_14_Loop2310F_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310F.REF, Dom.Segments.REF)(Children(5), 3, 16, 6770)
					End If

					Return REFSubset_14_Loop2310F_Obj_1
				End Get
			End Property
			Friend ReadOnly Property PER_Obj As SegmentContainer(Of Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Loops.Loop2310.PER
				Get
					Return CType(Children(6), SegmentContainer(Of Dom.Segments.PER))
				End Get
			End Property

			Private PERSubset_Loop2310C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.PER, Dom.Segments.PER)
			Private Property PER_IFace_Loop2310C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.PER Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C.PER
				Get
					If PERSubset_Loop2310C_Obj Is Nothing Then
						PERSubset_Loop2310C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.PER, Dom.Segments.PER)(Children(6), 1, 15, 6734)
					End If

					If PERSubset_Loop2310C_Obj.Count > 0 Then
						Return PERSubset_Loop2310C_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.PER)
					If PERSubset_Loop2310C_Obj Is Nothing Then
						PERSubset_Loop2310C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.PER, Dom.Segments.PER)(Children(6), 1, 15, 6734)
					End If

					If PERSubset_Loop2310C_Obj.Count = 0 Then
						PERSubset_Loop2310C_Obj.Add(value)
					Else
						PERSubset_Loop2310C_Obj(0) = value
					End If
				End Set
			End Property

		End Class
		Partial Friend Class Loop2320_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2320,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.SBR_Obj),
													New SegmentContainer(Of Dom.Segments.CAS)(99, 2, 2950),
													New SegmentContainer(Of Dom.Segments.AMT)(15, 2, 3000),
													CType(Nothing, Dom.Segments.DMG_Obj),
													CType(Nothing, Dom.Segments.OI_Obj),
													CType(Nothing, Dom.Segments.MIA_Obj),
													CType(Nothing, Dom.Segments.MOA_Obj),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2330)(10, 2, 3250)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "SBR", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "CAS", ReadAction.PopulateSegment, 2, False),
									New ReaderState(2, "CAS", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "AMT", ReadAction.PopulateSegment, 4, False),
									New ReaderState(2, "AMT", ReadAction.PopulateSegment, 4, False),
									New ReaderState(4, "AMT", ReadAction.PopulateSegment, 4, False),
									New ReaderState(1, "DMG", ReadAction.PopulateSegment, 6, False),
									New ReaderState(2, "DMG", ReadAction.PopulateSegment, 6, False),
									New ReaderState(4, "DMG", ReadAction.PopulateSegment, 6, False),
									New ReaderState(1, "OI", ReadAction.PopulateSegment, 7, False),
									New ReaderState(2, "OI", ReadAction.PopulateSegment, 7, False),
									New ReaderState(4, "OI", ReadAction.PopulateSegment, 7, False),
									New ReaderState(6, "OI", ReadAction.PopulateSegment, 7, False),
									New ReaderState(1, "MIA", ReadAction.PopulateSegment, 8, False),
									New ReaderState(2, "MIA", ReadAction.PopulateSegment, 8, False),
									New ReaderState(4, "MIA", ReadAction.PopulateSegment, 8, False),
									New ReaderState(6, "MIA", ReadAction.PopulateSegment, 8, False),
									New ReaderState(7, "MIA", ReadAction.PopulateSegment, 8, False),
									New ReaderState(1, "MOA", ReadAction.PopulateSegment, 9, False),
									New ReaderState(2, "MOA", ReadAction.PopulateSegment, 9, False),
									New ReaderState(4, "MOA", ReadAction.PopulateSegment, 9, False),
									New ReaderState(6, "MOA", ReadAction.PopulateSegment, 9, False),
									New ReaderState(7, "MOA", ReadAction.PopulateSegment, 9, False),
									New ReaderState(8, "MOA", ReadAction.PopulateSegment, 9, False),
									New ReaderState(1, "NM1", ReadAction.PopulateLoop, 10, False),
									New ReaderState(2, "NM1", ReadAction.PopulateLoop, 10, False),
									New ReaderState(4, "NM1", ReadAction.PopulateLoop, 10, False),
									New ReaderState(6, "NM1", ReadAction.PopulateLoop, 10, False),
									New ReaderState(7, "NM1", ReadAction.PopulateLoop, 10, False),
									New ReaderState(8, "NM1", ReadAction.PopulateLoop, 10, False),
									New ReaderState(9, "NM1", ReadAction.PopulateLoop, 10, False),
									New ReaderState(10, "NM1", ReadAction.PopulateLoop, 10, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "SBR", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SBR_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SBR_Obj = Seg
				ElseIf String.Compare(segmentName, "CAS", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CAS_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CAS_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "AMT", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.AMT_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					AMT_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.AMT_Obj)
					If MyBase.CompareKey(S2.AMT01, ";D;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 3
					ElseIf MyBase.CompareKey(S2.AMT01, ";A8;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 2595
					ElseIf MyBase.CompareKey(S2.AMT01, ";EAF;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 6483
					ElseIf MyBase.CompareKey(S2.AMT01, ";D;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 3
					ElseIf MyBase.CompareKey(S2.AMT01, ";EAF;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 1299
					ElseIf MyBase.CompareKey(S2.AMT01, ";A8;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 2595
					ElseIf MyBase.CompareKey(S2.AMT01, ";D;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 3
					ElseIf MyBase.CompareKey(S2.AMT01, ";EAF;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 1299
					ElseIf MyBase.CompareKey(S2.AMT01, ";A8;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 2595
					End If
				ElseIf String.Compare(segmentName, "DMG", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DMG_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DMG_Obj = Seg
				ElseIf String.Compare(segmentName, "OI", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.OI_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					OI_Obj = Seg
				ElseIf String.Compare(segmentName, "MIA", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.MIA_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					MIA_Obj = Seg
				ElseIf String.Compare(segmentName, "MOA", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.MOA_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					MOA_Obj = Seg
				End If
			End Sub

			Private Async Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				If String.Compare(args.DataSegment.SegmentID, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2330_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2330_Obj.Add(NewLoop)
					If MyBase.CompareKey(LoopKey, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2320__2330A"
						NewLoop.SetArea = 19
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2320__2330B"
						NewLoop.SetArea = 20
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2320__2330C"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2320__2330D"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 6699
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";77;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2320__2330E"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 6700
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2320__2330F"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 6701
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";85;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2320__2330G"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 6594
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320__2330A"
						NewLoop.SetArea = 19
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320__2330B"
						NewLoop.SetArea = 20
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320__2330C"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320__2330D"
						NewLoop.SetArea = 23
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320__2330E"
						NewLoop.SetArea = 23
						NewLoop.SetSequence = 255
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";85;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320__2330F"
						NewLoop.SetArea = 23
						NewLoop.SetSequence = 327
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";77;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320__2330G"
						NewLoop.SetArea = 23
						NewLoop.SetSequence = 148
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DD;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2320__2330H"
						NewLoop.SetArea = 23
						NewLoop.SetSequence = 292
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330A"
						NewLoop.SetArea = 19
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330B"
						NewLoop.SetArea = 20
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";71;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330C"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 6555
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";72;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330D"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 219
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";ZZ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330E"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 255
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";77;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330F"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 327
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330G"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 4
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DN;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330H"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";85;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2320__2330I"
						NewLoop.SetArea = 22
						NewLoop.SetSequence = 6
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				End If
				args.Implementation = Temp
			End Function
			Friend Property SBR_Obj As Dom.Segments.SBR_Obj
				Get
					Return CType(Children(0), Dom.Segments.SBR_Obj)
				End Get
				Set(value As Dom.Segments.SBR_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property SBR_Std As Dom.Segments.SBR Implements Dom.Transactions.Transaction837.Loops.Loop2320.SBR
				Get
					Return CType(Children(0), Dom.Segments.SBR_Obj)
				End Get
				Set(value As Dom.Segments.SBR)
					Children(0) = value
				End Set
			End Property

			Private Property SBR_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.SBR Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.SBR
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.SBR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.SBR)
					Children(0) = value
				End Set
			End Property
			Private Property SBR_IFace_1_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.SBR Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.SBR
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.SBR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.SBR)
					Children(0) = value
				End Set
			End Property
			Private Property SBR_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.SBR Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.SBR
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.SBR)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.SBR)
					Children(0) = value
				End Set
			End Property
			Friend ReadOnly Property CAS_Obj As SegmentContainer(Of Dom.Segments.CAS) Implements Dom.Transactions.Transaction837.Loops.Loop2320.CAS
				Get
					Return CType(Children(1), SegmentContainer(Of Dom.Segments.CAS))
				End Get
			End Property

			Private CASSubset_Loop2320_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.CAS, Dom.Segments.CAS)
			Private ReadOnly Property CAS_Loop2320_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.CAS, Dom.Segments.CAS) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.CAS
				Get
					If CASSubset_Loop2320_Obj_1 Is Nothing Then
						CASSubset_Loop2320_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.CAS, Dom.Segments.CAS)(Children(1), 5, 19, 6806)
					End If

					Return CASSubset_Loop2320_Obj_1
				End Get
			End Property
			Private CASSubset_1_Loop2320_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.CAS, Dom.Segments.CAS)
			Private ReadOnly Property CAS_Loop2320_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.CAS, Dom.Segments.CAS) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.CAS
				Get
					If CASSubset_1_Loop2320_Obj_2 Is Nothing Then
						CASSubset_1_Loop2320_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.CAS, Dom.Segments.CAS)(Children(1), 5, 19, 6806)
					End If

					Return CASSubset_1_Loop2320_Obj_2
				End Get
			End Property
			Private CASSubset_2_Loop2320_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.CAS, Dom.Segments.CAS)
			Private ReadOnly Property CAS_Loop2320_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.CAS, Dom.Segments.CAS) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.CAS
				Get
					If CASSubset_2_Loop2320_Obj_3 Is Nothing Then
						CASSubset_2_Loop2320_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.CAS, Dom.Segments.CAS)(Children(1), 5, 19, 6806)
					End If

					Return CASSubset_2_Loop2320_Obj_3
				End Get
			End Property
			Friend ReadOnly Property AMT_Obj As SegmentContainer(Of Dom.Segments.AMT) Implements Dom.Transactions.Transaction837.Loops.Loop2320.AMT
				Get
					Return CType(Children(2), SegmentContainer(Of Dom.Segments.AMT))
				End Get
			End Property

			Private AMTSubset_Loop2320_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.AMT
				Get
					If AMTSubset_Loop2320_Obj_1 Is Nothing Then
						AMTSubset_Loop2320_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT, Dom.Segments.AMT)(Children(2), 1, 19, 3)
					End If

					If AMTSubset_Loop2320_Obj_1.Count > 0 Then
						Return AMTSubset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT)
					If AMTSubset_Loop2320_Obj_1 Is Nothing Then
						AMTSubset_Loop2320_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT, Dom.Segments.AMT)(Children(2), 1, 19, 3)
					End If

					If AMTSubset_Loop2320_Obj_1.Count = 0 Then
						AMTSubset_Loop2320_Obj_1.Add(value)
					Else
						AMTSubset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private AMT_1Subset_Loop2320_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_1, Dom.Segments.AMT)
			Private Property AMT_IFace_1_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.AMT_1
				Get
					If AMT_1Subset_Loop2320_Obj_1 Is Nothing Then
						AMT_1Subset_Loop2320_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_1, Dom.Segments.AMT)(Children(2), 1, 19, 2595)
					End If

					If AMT_1Subset_Loop2320_Obj_1.Count > 0 Then
						Return AMT_1Subset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_1)
					If AMT_1Subset_Loop2320_Obj_1 Is Nothing Then
						AMT_1Subset_Loop2320_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_1, Dom.Segments.AMT)(Children(2), 1, 19, 2595)
					End If

					If AMT_1Subset_Loop2320_Obj_1.Count = 0 Then
						AMT_1Subset_Loop2320_Obj_1.Add(value)
					Else
						AMT_1Subset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private AMT_2Subset_Loop2320_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_2, Dom.Segments.AMT)
			Private Property AMT_IFace_2_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_2 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.AMT_2
				Get
					If AMT_2Subset_Loop2320_Obj_1 Is Nothing Then
						AMT_2Subset_Loop2320_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_2, Dom.Segments.AMT)(Children(2), 1, 19, 6483)
					End If

					If AMT_2Subset_Loop2320_Obj_1.Count > 0 Then
						Return AMT_2Subset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_2)
					If AMT_2Subset_Loop2320_Obj_1 Is Nothing Then
						AMT_2Subset_Loop2320_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_2, Dom.Segments.AMT)(Children(2), 1, 19, 6483)
					End If

					If AMT_2Subset_Loop2320_Obj_1.Count = 0 Then
						AMT_2Subset_Loop2320_Obj_1.Add(value)
					Else
						AMT_2Subset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private AMTSubset_1_Loop2320_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_3_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.AMT
				Get
					If AMTSubset_1_Loop2320_Obj_2 Is Nothing Then
						AMTSubset_1_Loop2320_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT, Dom.Segments.AMT)(Children(2), 1, 19, 3)
					End If

					If AMTSubset_1_Loop2320_Obj_2.Count > 0 Then
						Return AMTSubset_1_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT)
					If AMTSubset_1_Loop2320_Obj_2 Is Nothing Then
						AMTSubset_1_Loop2320_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT, Dom.Segments.AMT)(Children(2), 1, 19, 3)
					End If

					If AMTSubset_1_Loop2320_Obj_2.Count = 0 Then
						AMTSubset_1_Loop2320_Obj_2.Add(value)
					Else
						AMTSubset_1_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private AMT_1Subset_1_Loop2320_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_1, Dom.Segments.AMT)
			Private Property AMT_IFace_4_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.AMT_1
				Get
					If AMT_1Subset_1_Loop2320_Obj_2 Is Nothing Then
						AMT_1Subset_1_Loop2320_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_1, Dom.Segments.AMT)(Children(2), 1, 19, 1299)
					End If

					If AMT_1Subset_1_Loop2320_Obj_2.Count > 0 Then
						Return AMT_1Subset_1_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_1)
					If AMT_1Subset_1_Loop2320_Obj_2 Is Nothing Then
						AMT_1Subset_1_Loop2320_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_1, Dom.Segments.AMT)(Children(2), 1, 19, 1299)
					End If

					If AMT_1Subset_1_Loop2320_Obj_2.Count = 0 Then
						AMT_1Subset_1_Loop2320_Obj_2.Add(value)
					Else
						AMT_1Subset_1_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private AMT_2Subset_1_Loop2320_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_2, Dom.Segments.AMT)
			Private Property AMT_IFace_5_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_2 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.AMT_2
				Get
					If AMT_2Subset_1_Loop2320_Obj_2 Is Nothing Then
						AMT_2Subset_1_Loop2320_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_2, Dom.Segments.AMT)(Children(2), 1, 19, 2595)
					End If

					If AMT_2Subset_1_Loop2320_Obj_2.Count > 0 Then
						Return AMT_2Subset_1_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_2)
					If AMT_2Subset_1_Loop2320_Obj_2 Is Nothing Then
						AMT_2Subset_1_Loop2320_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_2, Dom.Segments.AMT)(Children(2), 1, 19, 2595)
					End If

					If AMT_2Subset_1_Loop2320_Obj_2.Count = 0 Then
						AMT_2Subset_1_Loop2320_Obj_2.Add(value)
					Else
						AMT_2Subset_1_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private AMTSubset_2_Loop2320_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_6_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.AMT
				Get
					If AMTSubset_2_Loop2320_Obj_3 Is Nothing Then
						AMTSubset_2_Loop2320_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT, Dom.Segments.AMT)(Children(2), 1, 19, 3)
					End If

					If AMTSubset_2_Loop2320_Obj_3.Count > 0 Then
						Return AMTSubset_2_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT)
					If AMTSubset_2_Loop2320_Obj_3 Is Nothing Then
						AMTSubset_2_Loop2320_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT, Dom.Segments.AMT)(Children(2), 1, 19, 3)
					End If

					If AMTSubset_2_Loop2320_Obj_3.Count = 0 Then
						AMTSubset_2_Loop2320_Obj_3.Add(value)
					Else
						AMTSubset_2_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private AMT_1Subset_2_Loop2320_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_1, Dom.Segments.AMT)
			Private Property AMT_IFace_7_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.AMT_1
				Get
					If AMT_1Subset_2_Loop2320_Obj_3 Is Nothing Then
						AMT_1Subset_2_Loop2320_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_1, Dom.Segments.AMT)(Children(2), 1, 19, 1299)
					End If

					If AMT_1Subset_2_Loop2320_Obj_3.Count > 0 Then
						Return AMT_1Subset_2_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_1)
					If AMT_1Subset_2_Loop2320_Obj_3 Is Nothing Then
						AMT_1Subset_2_Loop2320_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_1, Dom.Segments.AMT)(Children(2), 1, 19, 1299)
					End If

					If AMT_1Subset_2_Loop2320_Obj_3.Count = 0 Then
						AMT_1Subset_2_Loop2320_Obj_3.Add(value)
					Else
						AMT_1Subset_2_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private AMT_2Subset_2_Loop2320_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_2, Dom.Segments.AMT)
			Private Property AMT_IFace_8_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_2 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.AMT_2
				Get
					If AMT_2Subset_2_Loop2320_Obj_3 Is Nothing Then
						AMT_2Subset_2_Loop2320_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_2, Dom.Segments.AMT)(Children(2), 1, 19, 2595)
					End If

					If AMT_2Subset_2_Loop2320_Obj_3.Count > 0 Then
						Return AMT_2Subset_2_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_2)
					If AMT_2Subset_2_Loop2320_Obj_3 Is Nothing Then
						AMT_2Subset_2_Loop2320_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_2, Dom.Segments.AMT)(Children(2), 1, 19, 2595)
					End If

					If AMT_2Subset_2_Loop2320_Obj_3.Count = 0 Then
						AMT_2Subset_2_Loop2320_Obj_3.Add(value)
					Else
						AMT_2Subset_2_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend Property DMG_Obj As Dom.Segments.DMG_Obj
				Get
					Return CType(Children(3), Dom.Segments.DMG_Obj)
				End Get
				Set(value As Dom.Segments.DMG_Obj)
					Children(3) = value
				End Set
			End Property

			Private Property DMG_Std As Dom.Segments.DMG Implements Dom.Transactions.Transaction837.Loops.Loop2320.DMG
				Get
					Return CType(Children(3), Dom.Segments.DMG_Obj)
				End Get
				Set(value As Dom.Segments.DMG)
					Children(3) = value
				End Set
			End Property

			Friend Property OI_Obj As Dom.Segments.OI_Obj
				Get
					Return CType(Children(4), Dom.Segments.OI_Obj)
				End Get
				Set(value As Dom.Segments.OI_Obj)
					Children(4) = value
				End Set
			End Property

			Private Property OI_Std As Dom.Segments.OI Implements Dom.Transactions.Transaction837.Loops.Loop2320.OI
				Get
					Return CType(Children(4), Dom.Segments.OI_Obj)
				End Get
				Set(value As Dom.Segments.OI)
					Children(4) = value
				End Set
			End Property

			Friend Property MIA_Obj As Dom.Segments.MIA_Obj
				Get
					Return CType(Children(5), Dom.Segments.MIA_Obj)
				End Get
				Set(value As Dom.Segments.MIA_Obj)
					Children(5) = value
				End Set
			End Property

			Private Property MIA_Std As Dom.Segments.MIA Implements Dom.Transactions.Transaction837.Loops.Loop2320.MIA
				Get
					Return CType(Children(5), Dom.Segments.MIA_Obj)
				End Get
				Set(value As Dom.Segments.MIA)
					Children(5) = value
				End Set
			End Property

			Private Property MIA_IFace_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.MIA Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.MIA
				Get
					Return CType(Children(5), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.MIA)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.MIA)
					Children(5) = value
				End Set
			End Property
			Friend Property MOA_Obj As Dom.Segments.MOA_Obj
				Get
					Return CType(Children(6), Dom.Segments.MOA_Obj)
				End Get
				Set(value As Dom.Segments.MOA_Obj)
					Children(6) = value
				End Set
			End Property

			Private Property MOA_Std As Dom.Segments.MOA Implements Dom.Transactions.Transaction837.Loops.Loop2320.MOA
				Get
					Return CType(Children(6), Dom.Segments.MOA_Obj)
				End Get
				Set(value As Dom.Segments.MOA)
					Children(6) = value
				End Set
			End Property

			Private Property MOA_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.MOA Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.MOA
				Get
					Return CType(Children(6), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.MOA)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.MOA)
					Children(6) = value
				End Set
			End Property
			Private Property MOA_IFace_1_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.MOA Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.MOA
				Get
					Return CType(Children(6), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.MOA)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.MOA)
					Children(6) = value
				End Set
			End Property
			Private Property MOA_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.MOA Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.MOA
				Get
					Return CType(Children(6), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.MOA)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.MOA)
					Children(6) = value
				End Set
			End Property
			Friend ReadOnly Property Loop2330_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2330) Implements Dom.Transactions.Transaction837.Loops.Loop2320.Loop2330
				Get
					Return CType(Children(7), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2330))
				End Get
			End Property

			Private Loop2330ASubset_Loop2320_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330A_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.Loop2330A
				Get
					If Loop2330ASubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330ASubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 19, 6555)
					End If

					If Loop2330ASubset_Loop2320_Obj_1.Count > 0 Then
						Return Loop2330ASubset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A)
					If Loop2330ASubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330ASubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 19, 6555)
					End If

					If Loop2330ASubset_Loop2320_Obj_1.Count = 0 Then
						Loop2330ASubset_Loop2320_Obj_1.Add(value)
					Else
						Loop2330ASubset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2330BSubset_Loop2320_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330B_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.Loop2330B
				Get
					If Loop2330BSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330BSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 20, 6555)
					End If

					If Loop2330BSubset_Loop2320_Obj_1.Count > 0 Then
						Return Loop2330BSubset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B)
					If Loop2330BSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330BSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 20, 6555)
					End If

					If Loop2330BSubset_Loop2320_Obj_1.Count = 0 Then
						Loop2330BSubset_Loop2320_Obj_1.Add(value)
					Else
						Loop2330BSubset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2330CSubset_Loop2320_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private ReadOnly Property Loop2330C_Obj_Loop2320_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.Loop2330C
				Get
					If Loop2330CSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330CSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 2, 22, 6555)
					End If

					Return Loop2330CSubset_Loop2320_Obj_1
				End Get
			End Property
			Private Loop2330DSubset_Loop2320_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330D_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.Loop2330D
				Get
					If Loop2330DSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330DSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6699)
					End If

					If Loop2330DSubset_Loop2320_Obj_1.Count > 0 Then
						Return Loop2330DSubset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D)
					If Loop2330DSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330DSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6699)
					End If

					If Loop2330DSubset_Loop2320_Obj_1.Count = 0 Then
						Loop2330DSubset_Loop2320_Obj_1.Add(value)
					Else
						Loop2330DSubset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2330ESubset_Loop2320_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330E_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.Loop2330E
				Get
					If Loop2330ESubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330ESubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6700)
					End If

					If Loop2330ESubset_Loop2320_Obj_1.Count > 0 Then
						Return Loop2330ESubset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E)
					If Loop2330ESubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330ESubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6700)
					End If

					If Loop2330ESubset_Loop2320_Obj_1.Count = 0 Then
						Loop2330ESubset_Loop2320_Obj_1.Add(value)
					Else
						Loop2330ESubset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2330FSubset_Loop2320_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330F_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.Loop2330F
				Get
					If Loop2330FSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330FSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6701)
					End If

					If Loop2330FSubset_Loop2320_Obj_1.Count > 0 Then
						Return Loop2330FSubset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F)
					If Loop2330FSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330FSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6701)
					End If

					If Loop2330FSubset_Loop2320_Obj_1.Count = 0 Then
						Loop2330FSubset_Loop2320_Obj_1.Add(value)
					Else
						Loop2330FSubset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2330GSubset_Loop2320_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330G_IFace_Loop2320_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320.Loop2330G
				Get
					If Loop2330GSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330GSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6594)
					End If

					If Loop2330GSubset_Loop2320_Obj_1.Count > 0 Then
						Return Loop2330GSubset_Loop2320_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G)
					If Loop2330GSubset_Loop2320_Obj_1 Is Nothing Then
						Loop2330GSubset_Loop2320_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6594)
					End If

					If Loop2330GSubset_Loop2320_Obj_1.Count = 0 Then
						Loop2330GSubset_Loop2320_Obj_1.Add(value)
					Else
						Loop2330GSubset_Loop2320_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2330ASubset_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330A_IFace_1_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.Loop2330A
				Get
					If Loop2330ASubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330ASubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 19, 6555)
					End If

					If Loop2330ASubset_Loop2320_Obj_2.Count > 0 Then
						Return Loop2330ASubset_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A)
					If Loop2330ASubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330ASubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 19, 6555)
					End If

					If Loop2330ASubset_Loop2320_Obj_2.Count = 0 Then
						Loop2330ASubset_Loop2320_Obj_2.Add(value)
					Else
						Loop2330ASubset_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2330BSubset_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330B_IFace_1_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.Loop2330B
				Get
					If Loop2330BSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330BSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 20, 6555)
					End If

					If Loop2330BSubset_Loop2320_Obj_2.Count > 0 Then
						Return Loop2330BSubset_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B)
					If Loop2330BSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330BSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 20, 6555)
					End If

					If Loop2330BSubset_Loop2320_Obj_2.Count = 0 Then
						Loop2330BSubset_Loop2320_Obj_2.Add(value)
					Else
						Loop2330BSubset_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2330CSubset_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private ReadOnly Property Loop2330C_Obj_1_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.Loop2330C
				Get
					If Loop2330CSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330CSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 2, 22, 6555)
					End If

					Return Loop2330CSubset_Loop2320_Obj_2
				End Get
			End Property
			Private Loop2330DSubset_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330D_IFace_1_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.Loop2330D
				Get
					If Loop2330DSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330DSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 6555)
					End If

					If Loop2330DSubset_Loop2320_Obj_2.Count > 0 Then
						Return Loop2330DSubset_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D)
					If Loop2330DSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330DSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 6555)
					End If

					If Loop2330DSubset_Loop2320_Obj_2.Count = 0 Then
						Loop2330DSubset_Loop2320_Obj_2.Add(value)
					Else
						Loop2330DSubset_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2330ESubset_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330E_IFace_1_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.Loop2330E
				Get
					If Loop2330ESubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330ESubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 255)
					End If

					If Loop2330ESubset_Loop2320_Obj_2.Count > 0 Then
						Return Loop2330ESubset_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E)
					If Loop2330ESubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330ESubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 255)
					End If

					If Loop2330ESubset_Loop2320_Obj_2.Count = 0 Then
						Loop2330ESubset_Loop2320_Obj_2.Add(value)
					Else
						Loop2330ESubset_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2330FSubset_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330F_IFace_1_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.Loop2330F
				Get
					If Loop2330FSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330FSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 327)
					End If

					If Loop2330FSubset_Loop2320_Obj_2.Count > 0 Then
						Return Loop2330FSubset_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F)
					If Loop2330FSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330FSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 327)
					End If

					If Loop2330FSubset_Loop2320_Obj_2.Count = 0 Then
						Loop2330FSubset_Loop2320_Obj_2.Add(value)
					Else
						Loop2330FSubset_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2330GSubset_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330G_IFace_1_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.Loop2330G
				Get
					If Loop2330GSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330GSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 148)
					End If

					If Loop2330GSubset_Loop2320_Obj_2.Count > 0 Then
						Return Loop2330GSubset_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G)
					If Loop2330GSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330GSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 148)
					End If

					If Loop2330GSubset_Loop2320_Obj_2.Count = 0 Then
						Loop2330GSubset_Loop2320_Obj_2.Add(value)
					Else
						Loop2330GSubset_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2330HSubset_Loop2320_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330H_IFace_Loop2320_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320.Loop2330H
				Get
					If Loop2330HSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330HSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 292)
					End If

					If Loop2330HSubset_Loop2320_Obj_2.Count > 0 Then
						Return Loop2330HSubset_Loop2320_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H)
					If Loop2330HSubset_Loop2320_Obj_2 Is Nothing Then
						Loop2330HSubset_Loop2320_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 23, 292)
					End If

					If Loop2330HSubset_Loop2320_Obj_2.Count = 0 Then
						Loop2330HSubset_Loop2320_Obj_2.Add(value)
					Else
						Loop2330HSubset_Loop2320_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2330ASubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330A_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330A
				Get
					If Loop2330ASubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330ASubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 19, 6555)
					End If

					If Loop2330ASubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330ASubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A)
					If Loop2330ASubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330ASubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 19, 6555)
					End If

					If Loop2330ASubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330ASubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330ASubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2330BSubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330B_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330B
				Get
					If Loop2330BSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330BSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 20, 6555)
					End If

					If Loop2330BSubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330BSubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B)
					If Loop2330BSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330BSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 20, 6555)
					End If

					If Loop2330BSubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330BSubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330BSubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2330CSubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330C_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330C
				Get
					If Loop2330CSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330CSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6555)
					End If

					If Loop2330CSubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330CSubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C)
					If Loop2330CSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330CSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6555)
					End If

					If Loop2330CSubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330CSubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330CSubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2330DSubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330D_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330D
				Get
					If Loop2330DSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330DSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 219)
					End If

					If Loop2330DSubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330DSubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D)
					If Loop2330DSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330DSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 219)
					End If

					If Loop2330DSubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330DSubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330DSubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2330ESubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330E_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330E
				Get
					If Loop2330ESubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330ESubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 255)
					End If

					If Loop2330ESubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330ESubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E)
					If Loop2330ESubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330ESubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 255)
					End If

					If Loop2330ESubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330ESubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330ESubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2330FSubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330F_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330F
				Get
					If Loop2330FSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330FSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 327)
					End If

					If Loop2330FSubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330FSubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F)
					If Loop2330FSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330FSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 327)
					End If

					If Loop2330FSubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330FSubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330FSubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2330GSubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330G_IFace_2_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330G
				Get
					If Loop2330GSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330GSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 4)
					End If

					If Loop2330GSubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330GSubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G)
					If Loop2330GSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330GSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 4)
					End If

					If Loop2330GSubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330GSubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330GSubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2330HSubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330H_IFace_1_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330H
				Get
					If Loop2330HSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330HSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 5)
					End If

					If Loop2330HSubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330HSubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H)
					If Loop2330HSubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330HSubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 5)
					End If

					If Loop2330HSubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330HSubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330HSubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2330ISubset_Loop2320_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I, Dom.Transactions.Transaction837.Loops.Loop2330)
			Private Property Loop2330I_IFace_Loop2320_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320.Loop2330I
				Get
					If Loop2330ISubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330ISubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6)
					End If

					If Loop2330ISubset_Loop2320_Obj_3.Count > 0 Then
						Return Loop2330ISubset_Loop2320_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I)
					If Loop2330ISubset_Loop2320_Obj_3 Is Nothing Then
						Loop2330ISubset_Loop2320_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I, Dom.Transactions.Transaction837.Loops.Loop2330)(Children(7), 1, 22, 6)
					End If

					If Loop2330ISubset_Loop2320_Obj_3.Count = 0 Then
						Loop2330ISubset_Loop2320_Obj_3.Add(value)
					Else
						Loop2330ISubset_Loop2320_Obj_3(0) = value
					End If
				End Set
			End Property

		End Class
		Partial Friend Class Loop2330_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2330,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330C,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330C,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.NM1_Obj),
													New SegmentContainer(Of Dom.Segments.N2)(2, 2, 3300),
													New SegmentContainer(Of Dom.Segments.N3)(2, 2, 3320),
													CType(Nothing, Dom.Segments.N4_Obj),
													New SegmentContainer(Of Dom.Segments.PER)(2, 2, 3450),
													New SegmentContainer(Of Dom.Segments.DTP)(9, 2, 3500),
													New SegmentContainer(Of Dom.Segments.REF)(0, 2, 3550)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "NM1", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "N2", ReadAction.PopulateSegment, 2, False),
									New ReaderState(2, "N2", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(2, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(4, "N3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(1, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(2, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(4, "N4", ReadAction.PopulateSegment, 6, False),
									New ReaderState(1, "PER", ReadAction.PopulateSegment, 7, False),
									New ReaderState(2, "PER", ReadAction.PopulateSegment, 7, False),
									New ReaderState(4, "PER", ReadAction.PopulateSegment, 7, False),
									New ReaderState(6, "PER", ReadAction.PopulateSegment, 7, False),
									New ReaderState(7, "PER", ReadAction.PopulateSegment, 7, False),
									New ReaderState(1, "DTP", ReadAction.PopulateSegment, 9, False),
									New ReaderState(2, "DTP", ReadAction.PopulateSegment, 9, False),
									New ReaderState(4, "DTP", ReadAction.PopulateSegment, 9, False),
									New ReaderState(6, "DTP", ReadAction.PopulateSegment, 9, False),
									New ReaderState(7, "DTP", ReadAction.PopulateSegment, 9, False),
									New ReaderState(9, "DTP", ReadAction.PopulateSegment, 9, False),
									New ReaderState(1, "REF", ReadAction.PopulateSegment, 11, False),
									New ReaderState(2, "REF", ReadAction.PopulateSegment, 11, False),
									New ReaderState(4, "REF", ReadAction.PopulateSegment, 11, False),
									New ReaderState(6, "REF", ReadAction.PopulateSegment, 11, False),
									New ReaderState(7, "REF", ReadAction.PopulateSegment, 11, False),
									New ReaderState(9, "REF", ReadAction.PopulateSegment, 11, False),
									New ReaderState(11, "REF", ReadAction.PopulateSegment, 11, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.NM1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					NM1_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.NM1_Obj)
					If MyBase.CompareKey(S2.NM101, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6699
					ElseIf MyBase.CompareKey(S2.NM101, ";77;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6700
					ElseIf MyBase.CompareKey(S2.NM101, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6701
					ElseIf MyBase.CompareKey(S2.NM101, ";85;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330G", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6594
					ElseIf MyBase.CompareKey(S2.NM101, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 255
					ElseIf MyBase.CompareKey(S2.NM101, ";85;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 327
					ElseIf MyBase.CompareKey(S2.NM101, ";77;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330G", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 148
					ElseIf MyBase.CompareKey(S2.NM101, ";DD;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330H", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 292
					ElseIf MyBase.CompareKey(S2.NM101, ";IL;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";PR;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";71;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6555
					ElseIf MyBase.CompareKey(S2.NM101, ";72;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 219
					ElseIf MyBase.CompareKey(S2.NM101, ";ZZ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 255
					ElseIf MyBase.CompareKey(S2.NM101, ";77;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 327
					ElseIf MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330G", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 4
					ElseIf MyBase.CompareKey(S2.NM101, ";DN;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330H", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";85;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330I", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6
					End If
				ElseIf String.Compare(segmentName, "N2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N2_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N3_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N4", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N4_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N4_Obj = Seg
				ElseIf String.Compare(segmentName, "PER", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PER_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PER_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "DTP", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DTP_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DTP_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.DTP_Obj)
					If MyBase.CompareKey(S2.DTP01, ";573;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 9219
					ElseIf MyBase.CompareKey(S2.DTP01, ";573;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 183
					ElseIf MyBase.CompareKey(S2.DTP01, ";573;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 183
					End If
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.REF_Obj)
					If MyBase.CompareKey(S2.REF01, ";SY;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;EI;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";G1;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 7959
					ElseIf MyBase.CompareKey(S2.REF01, ";9F;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 147927
					ElseIf MyBase.CompareKey(S2.REF01, ";T4;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 9255
					ElseIf MyBase.CompareKey(S2.REF01, ";F8;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 242535
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6520
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6665
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6486
					ElseIf MyBase.CompareKey(S2.REF01, ";G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2320__2330G", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 222
					ElseIf MyBase.CompareKey(S2.REF01, ";SY;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;EI;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";G1;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 7959
					ElseIf MyBase.CompareKey(S2.REF01, ";9F;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 147927
					ElseIf MyBase.CompareKey(S2.REF01, ";T4;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 9255
					ElseIf MyBase.CompareKey(S2.REF01, ";G3;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 242535
					ElseIf MyBase.CompareKey(S2.REF01, ";F8;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 10551
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 6735
					ElseIf MyBase.CompareKey(S2.REF01, ";G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 6484
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330G", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 184
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2320__2330H", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 23
						Seg.SetSequence = 328
					ElseIf MyBase.CompareKey(S2.REF01, ";SY;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 19
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";2U;EI;FY;NF;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";G1;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 7959
					ElseIf MyBase.CompareKey(S2.REF01, ";9F;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 147927
					ElseIf MyBase.CompareKey(S2.REF01, ";T4;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 241239
					ElseIf MyBase.CompareKey(S2.REF01, ";F8;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 20
						Seg.SetSequence = 9255
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6663
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6699
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6735
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6807
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330G", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6484
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330H", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6485
					ElseIf MyBase.CompareKey(S2.REF01, ";G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2320__2330I", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 22
						Seg.SetSequence = 6486
					End If
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property NM1_Obj As Dom.Segments.NM1_Obj
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_Std As Dom.Segments.NM1 Implements Dom.Transactions.Transaction837.Loops.Loop2330.NM1
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_IFace_Loop2330A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_1_Loop2330B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_2_Loop2330C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_3_Loop2330D_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330D.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_4_Loop2330E_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330E.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330E.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330E.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_5_Loop2330F_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330F.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330F.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330F.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_6_Loop2330G_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330G.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330G.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330G.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_7_Loop2330A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_8_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_9_Loop2330C_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_10_Loop2330D_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330D.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_11_Loop2330E_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330E.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330E.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330E.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_12_Loop2330F_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330F.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330F.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330F.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_13_Loop2330G_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330G.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330G.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330G.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_14_Loop2330H_Obj As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330H.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330H.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330H.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_15_Loop2330A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_16_Loop2330B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_17_Loop2330C_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_18_Loop2330D_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330D.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_19_Loop2330E_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330E.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330E.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330E.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_20_Loop2330F_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330F.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330F.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330F.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_21_Loop2330G_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330G.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330G.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330G.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_22_Loop2330H_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330H.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330H.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330H.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_23_Loop2330I_Obj As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330I.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330I.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330I.NM1)
					Children(0) = value
				End Set
			End Property
			Friend ReadOnly Property N2_Obj As SegmentContainer(Of Dom.Segments.N2) Implements Dom.Transactions.Transaction837.Loops.Loop2330.N2
				Get
					Return CType(Children(1), SegmentContainer(Of Dom.Segments.N2))
				End Get
			End Property

			Friend ReadOnly Property N3_Obj As SegmentContainer(Of Dom.Segments.N3) Implements Dom.Transactions.Transaction837.Loops.Loop2330.N3
				Get
					Return CType(Children(2), SegmentContainer(Of Dom.Segments.N3))
				End Get
			End Property

			Private N3Subset_Loop2330A_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N3, Dom.Segments.N3)
			Private Property N3_IFace_Loop2330A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A.N3
				Get
					If N3Subset_Loop2330A_Obj Is Nothing Then
						N3Subset_Loop2330A_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N3, Dom.Segments.N3)(Children(2), 1, 19, 2703)
					End If

					If N3Subset_Loop2330A_Obj.Count > 0 Then
						Return N3Subset_Loop2330A_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N3)
					If N3Subset_Loop2330A_Obj Is Nothing Then
						N3Subset_Loop2330A_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N3, Dom.Segments.N3)(Children(2), 1, 19, 2703)
					End If

					If N3Subset_Loop2330A_Obj.Count = 0 Then
						N3Subset_Loop2330A_Obj.Add(value)
					Else
						N3Subset_Loop2330A_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_1_Loop2330B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N3, Dom.Segments.N3)
			Private Property N3_IFace_1_Loop2330B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.N3
				Get
					If N3Subset_1_Loop2330B_Obj Is Nothing Then
						N3Subset_1_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N3, Dom.Segments.N3)(Children(2), 1, 20, 2703)
					End If

					If N3Subset_1_Loop2330B_Obj.Count > 0 Then
						Return N3Subset_1_Loop2330B_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N3)
					If N3Subset_1_Loop2330B_Obj Is Nothing Then
						N3Subset_1_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N3, Dom.Segments.N3)(Children(2), 1, 20, 2703)
					End If

					If N3Subset_1_Loop2330B_Obj.Count = 0 Then
						N3Subset_1_Loop2330B_Obj.Add(value)
					Else
						N3Subset_1_Loop2330B_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_2_Loop2330A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N3, Dom.Segments.N3)
			Private Property N3_IFace_2_Loop2330A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A.N3
				Get
					If N3Subset_2_Loop2330A_Obj_1 Is Nothing Then
						N3Subset_2_Loop2330A_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N3, Dom.Segments.N3)(Children(2), 1, 19, 2703)
					End If

					If N3Subset_2_Loop2330A_Obj_1.Count > 0 Then
						Return N3Subset_2_Loop2330A_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N3)
					If N3Subset_2_Loop2330A_Obj_1 Is Nothing Then
						N3Subset_2_Loop2330A_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N3, Dom.Segments.N3)(Children(2), 1, 19, 2703)
					End If

					If N3Subset_2_Loop2330A_Obj_1.Count = 0 Then
						N3Subset_2_Loop2330A_Obj_1.Add(value)
					Else
						N3Subset_2_Loop2330A_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_3_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N3, Dom.Segments.N3)
			Private Property N3_IFace_3_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.N3
				Get
					If N3Subset_3_Loop2330B_Obj_1 Is Nothing Then
						N3Subset_3_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N3, Dom.Segments.N3)(Children(2), 1, 20, 2703)
					End If

					If N3Subset_3_Loop2330B_Obj_1.Count > 0 Then
						Return N3Subset_3_Loop2330B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N3)
					If N3Subset_3_Loop2330B_Obj_1 Is Nothing Then
						N3Subset_3_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N3, Dom.Segments.N3)(Children(2), 1, 20, 2703)
					End If

					If N3Subset_3_Loop2330B_Obj_1.Count = 0 Then
						N3Subset_3_Loop2330B_Obj_1.Add(value)
					Else
						N3Subset_3_Loop2330B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private N3Subset_4_Loop2330A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N3, Dom.Segments.N3)
			Private Property N3_IFace_4_Loop2330A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A.N3
				Get
					If N3Subset_4_Loop2330A_Obj_2 Is Nothing Then
						N3Subset_4_Loop2330A_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N3, Dom.Segments.N3)(Children(2), 1, 19, 2703)
					End If

					If N3Subset_4_Loop2330A_Obj_2.Count > 0 Then
						Return N3Subset_4_Loop2330A_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N3)
					If N3Subset_4_Loop2330A_Obj_2 Is Nothing Then
						N3Subset_4_Loop2330A_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N3, Dom.Segments.N3)(Children(2), 1, 19, 2703)
					End If

					If N3Subset_4_Loop2330A_Obj_2.Count = 0 Then
						N3Subset_4_Loop2330A_Obj_2.Add(value)
					Else
						N3Subset_4_Loop2330A_Obj_2(0) = value
					End If
				End Set
			End Property
			Private N3Subset_5_Loop2330B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N3, Dom.Segments.N3)
			Private Property N3_IFace_5_Loop2330B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.N3
				Get
					If N3Subset_5_Loop2330B_Obj_2 Is Nothing Then
						N3Subset_5_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N3, Dom.Segments.N3)(Children(2), 1, 20, 2703)
					End If

					If N3Subset_5_Loop2330B_Obj_2.Count > 0 Then
						Return N3Subset_5_Loop2330B_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N3)
					If N3Subset_5_Loop2330B_Obj_2 Is Nothing Then
						N3Subset_5_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N3, Dom.Segments.N3)(Children(2), 1, 20, 2703)
					End If

					If N3Subset_5_Loop2330B_Obj_2.Count = 0 Then
						N3Subset_5_Loop2330B_Obj_2.Add(value)
					Else
						N3Subset_5_Loop2330B_Obj_2(0) = value
					End If
				End Set
			End Property
			Friend Property N4_Obj As Dom.Segments.N4_Obj
				Get
					Return CType(Children(3), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4_Obj)
					Children(3) = value
				End Set
			End Property

			Private Property N4_Std As Dom.Segments.N4 Implements Dom.Transactions.Transaction837.Loops.Loop2330.N4
				Get
					Return CType(Children(3), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4)
					Children(3) = value
				End Set
			End Property

			Private Property N4_IFace_Loop2330A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_1_Loop2330B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_2_Loop2330A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_3_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_4_Loop2330A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N4)
					Children(3) = value
				End Set
			End Property
			Private Property N4_IFace_5_Loop2330B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.N4
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N4)
					Children(3) = value
				End Set
			End Property
			Friend ReadOnly Property PER_Obj As SegmentContainer(Of Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Loops.Loop2330.PER
				Get
					Return CType(Children(4), SegmentContainer(Of Dom.Segments.PER))
				End Get
			End Property

			Friend ReadOnly Property DTP_Obj As SegmentContainer(Of Dom.Segments.DTP) Implements Dom.Transactions.Transaction837.Loops.Loop2330.DTP
				Get
					Return CType(Children(5), SegmentContainer(Of Dom.Segments.DTP))
				End Get
			End Property

			Private DTPSubset_Loop2330B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_Loop2330B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.DTP
				Get
					If DTPSubset_Loop2330B_Obj Is Nothing Then
						DTPSubset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.DTP, Dom.Segments.DTP)(Children(5), 1, 20, 9219)
					End If

					If DTPSubset_Loop2330B_Obj.Count > 0 Then
						Return DTPSubset_Loop2330B_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.DTP)
					If DTPSubset_Loop2330B_Obj Is Nothing Then
						DTPSubset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.DTP, Dom.Segments.DTP)(Children(5), 1, 20, 9219)
					End If

					If DTPSubset_Loop2330B_Obj.Count = 0 Then
						DTPSubset_Loop2330B_Obj.Add(value)
					Else
						DTPSubset_Loop2330B_Obj(0) = value
					End If
				End Set
			End Property
			Private DTPSubset_1_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_1_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.DTP
				Get
					If DTPSubset_1_Loop2330B_Obj_1 Is Nothing Then
						DTPSubset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.DTP, Dom.Segments.DTP)(Children(5), 1, 20, 183)
					End If

					If DTPSubset_1_Loop2330B_Obj_1.Count > 0 Then
						Return DTPSubset_1_Loop2330B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.DTP)
					If DTPSubset_1_Loop2330B_Obj_1 Is Nothing Then
						DTPSubset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.DTP, Dom.Segments.DTP)(Children(5), 1, 20, 183)
					End If

					If DTPSubset_1_Loop2330B_Obj_1.Count = 0 Then
						DTPSubset_1_Loop2330B_Obj_1.Add(value)
					Else
						DTPSubset_1_Loop2330B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTPSubset_2_Loop2330B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_2_Loop2330B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.DTP
				Get
					If DTPSubset_2_Loop2330B_Obj_2 Is Nothing Then
						DTPSubset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.DTP, Dom.Segments.DTP)(Children(5), 1, 20, 183)
					End If

					If DTPSubset_2_Loop2330B_Obj_2.Count > 0 Then
						Return DTPSubset_2_Loop2330B_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.DTP)
					If DTPSubset_2_Loop2330B_Obj_2 Is Nothing Then
						DTPSubset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.DTP, Dom.Segments.DTP)(Children(5), 1, 20, 183)
					End If

					If DTPSubset_2_Loop2330B_Obj_2.Count = 0 Then
						DTPSubset_2_Loop2330B_Obj_2.Add(value)
					Else
						DTPSubset_2_Loop2330B_Obj_2(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property REF_Obj As SegmentContainer(Of Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Loops.Loop2330.REF
				Get
					Return CType(Children(6), SegmentContainer(Of Dom.Segments.REF))
				End Get
			End Property

			Private REFSubset_Loop2330A_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.REF, Dom.Segments.REF)
			Private Property REF_IFace_Loop2330A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.REF Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A.REF
				Get
					If REFSubset_Loop2330A_Obj Is Nothing Then
						REFSubset_Loop2330A_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.REF, Dom.Segments.REF)(Children(6), 1, 19, 6663)
					End If

					If REFSubset_Loop2330A_Obj.Count > 0 Then
						Return REFSubset_Loop2330A_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.REF)
					If REFSubset_Loop2330A_Obj Is Nothing Then
						REFSubset_Loop2330A_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.REF, Dom.Segments.REF)(Children(6), 1, 19, 6663)
					End If

					If REFSubset_Loop2330A_Obj.Count = 0 Then
						REFSubset_Loop2330A_Obj.Add(value)
					Else
						REFSubset_Loop2330A_Obj(0) = value
					End If
				End Set
			End Property
			Private REFSubset_1_Loop2330B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.REF
				Get
					If REFSubset_1_Loop2330B_Obj Is Nothing Then
						REFSubset_1_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF, Dom.Segments.REF)(Children(6), 2, 20, 6663)
					End If

					Return REFSubset_1_Loop2330B_Obj
				End Get
			End Property
			Private REF_1Subset_Loop2330B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_2_Loop2330B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.REF_1
				Get
					If REF_1Subset_Loop2330B_Obj Is Nothing Then
						REF_1Subset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_1, Dom.Segments.REF)(Children(6), 1, 20, 7959)
					End If

					If REF_1Subset_Loop2330B_Obj.Count > 0 Then
						Return REF_1Subset_Loop2330B_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_1)
					If REF_1Subset_Loop2330B_Obj Is Nothing Then
						REF_1Subset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_1, Dom.Segments.REF)(Children(6), 1, 20, 7959)
					End If

					If REF_1Subset_Loop2330B_Obj.Count = 0 Then
						REF_1Subset_Loop2330B_Obj.Add(value)
					Else
						REF_1Subset_Loop2330B_Obj(0) = value
					End If
				End Set
			End Property
			Private REF_2Subset_Loop2330B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_2, Dom.Segments.REF)
			Private Property REF_IFace_3_Loop2330B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_2 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.REF_2
				Get
					If REF_2Subset_Loop2330B_Obj Is Nothing Then
						REF_2Subset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_2, Dom.Segments.REF)(Children(6), 1, 20, 147927)
					End If

					If REF_2Subset_Loop2330B_Obj.Count > 0 Then
						Return REF_2Subset_Loop2330B_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_2)
					If REF_2Subset_Loop2330B_Obj Is Nothing Then
						REF_2Subset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_2, Dom.Segments.REF)(Children(6), 1, 20, 147927)
					End If

					If REF_2Subset_Loop2330B_Obj.Count = 0 Then
						REF_2Subset_Loop2330B_Obj.Add(value)
					Else
						REF_2Subset_Loop2330B_Obj(0) = value
					End If
				End Set
			End Property
			Private REF_3Subset_Loop2330B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_3, Dom.Segments.REF)
			Private Property REF_IFace_4_Loop2330B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.REF_3
				Get
					If REF_3Subset_Loop2330B_Obj Is Nothing Then
						REF_3Subset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_3, Dom.Segments.REF)(Children(6), 1, 20, 9255)
					End If

					If REF_3Subset_Loop2330B_Obj.Count > 0 Then
						Return REF_3Subset_Loop2330B_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_3)
					If REF_3Subset_Loop2330B_Obj Is Nothing Then
						REF_3Subset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_3, Dom.Segments.REF)(Children(6), 1, 20, 9255)
					End If

					If REF_3Subset_Loop2330B_Obj.Count = 0 Then
						REF_3Subset_Loop2330B_Obj.Add(value)
					Else
						REF_3Subset_Loop2330B_Obj(0) = value
					End If
				End Set
			End Property
			Private REF_4Subset_Loop2330B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_4, Dom.Segments.REF)
			Private Property REF_IFace_5_Loop2330B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B.REF_4
				Get
					If REF_4Subset_Loop2330B_Obj Is Nothing Then
						REF_4Subset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_4, Dom.Segments.REF)(Children(6), 1, 20, 242535)
					End If

					If REF_4Subset_Loop2330B_Obj.Count > 0 Then
						Return REF_4Subset_Loop2330B_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_4)
					If REF_4Subset_Loop2330B_Obj Is Nothing Then
						REF_4Subset_Loop2330B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_4, Dom.Segments.REF)(Children(6), 1, 20, 242535)
					End If

					If REF_4Subset_Loop2330B_Obj.Count = 0 Then
						REF_4Subset_Loop2330B_Obj.Add(value)
					Else
						REF_4Subset_Loop2330B_Obj(0) = value
					End If
				End Set
			End Property
			Private REFSubset_2_Loop2330C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330C.REF
				Get
					If REFSubset_2_Loop2330C_Obj Is Nothing Then
						REFSubset_2_Loop2330C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330C.REF, Dom.Segments.REF)(Children(6), 3, 22, 6663)
					End If

					Return REFSubset_2_Loop2330C_Obj
				End Get
			End Property
			Private REFSubset_3_Loop2330D_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330D_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D.REF
				Get
					If REFSubset_3_Loop2330D_Obj Is Nothing Then
						REFSubset_3_Loop2330D_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330D.REF, Dom.Segments.REF)(Children(6), 3, 22, 6520)
					End If

					Return REFSubset_3_Loop2330D_Obj
				End Get
			End Property
			Private REFSubset_4_Loop2330E_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330E.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330E_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330E.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E.REF
				Get
					If REFSubset_4_Loop2330E_Obj Is Nothing Then
						REFSubset_4_Loop2330E_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330E.REF, Dom.Segments.REF)(Children(6), 3, 22, 6665)
					End If

					Return REFSubset_4_Loop2330E_Obj
				End Get
			End Property
			Private REFSubset_5_Loop2330F_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330F.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330F_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330F.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F.REF
				Get
					If REFSubset_5_Loop2330F_Obj Is Nothing Then
						REFSubset_5_Loop2330F_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330F.REF, Dom.Segments.REF)(Children(6), 3, 22, 6486)
					End If

					Return REFSubset_5_Loop2330F_Obj
				End Get
			End Property
			Private REFSubset_6_Loop2330G_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330G.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330G_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330G.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G.REF
				Get
					If REFSubset_6_Loop2330G_Obj Is Nothing Then
						REFSubset_6_Loop2330G_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330G.REF, Dom.Segments.REF)(Children(6), 2, 22, 222)
					End If

					Return REFSubset_6_Loop2330G_Obj
				End Get
			End Property
			Private REFSubset_7_Loop2330A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A.REF
				Get
					If REFSubset_7_Loop2330A_Obj_1 Is Nothing Then
						REFSubset_7_Loop2330A_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.REF, Dom.Segments.REF)(Children(6), 2, 19, 6663)
					End If

					Return REFSubset_7_Loop2330A_Obj_1
				End Get
			End Property
			Private REFSubset_8_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.REF
				Get
					If REFSubset_8_Loop2330B_Obj_1 Is Nothing Then
						REFSubset_8_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF, Dom.Segments.REF)(Children(6), 3, 20, 6663)
					End If

					Return REFSubset_8_Loop2330B_Obj_1
				End Get
			End Property
			Private REF_1Subset_1_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_13_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.REF_1
				Get
					If REF_1Subset_1_Loop2330B_Obj_1 Is Nothing Then
						REF_1Subset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_1, Dom.Segments.REF)(Children(6), 1, 20, 7959)
					End If

					If REF_1Subset_1_Loop2330B_Obj_1.Count > 0 Then
						Return REF_1Subset_1_Loop2330B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_1)
					If REF_1Subset_1_Loop2330B_Obj_1 Is Nothing Then
						REF_1Subset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_1, Dom.Segments.REF)(Children(6), 1, 20, 7959)
					End If

					If REF_1Subset_1_Loop2330B_Obj_1.Count = 0 Then
						REF_1Subset_1_Loop2330B_Obj_1.Add(value)
					Else
						REF_1Subset_1_Loop2330B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_2Subset_1_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_2, Dom.Segments.REF)
			Private Property REF_IFace_14_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_2 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.REF_2
				Get
					If REF_2Subset_1_Loop2330B_Obj_1 Is Nothing Then
						REF_2Subset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_2, Dom.Segments.REF)(Children(6), 1, 20, 147927)
					End If

					If REF_2Subset_1_Loop2330B_Obj_1.Count > 0 Then
						Return REF_2Subset_1_Loop2330B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_2)
					If REF_2Subset_1_Loop2330B_Obj_1 Is Nothing Then
						REF_2Subset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_2, Dom.Segments.REF)(Children(6), 1, 20, 147927)
					End If

					If REF_2Subset_1_Loop2330B_Obj_1.Count = 0 Then
						REF_2Subset_1_Loop2330B_Obj_1.Add(value)
					Else
						REF_2Subset_1_Loop2330B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_3Subset_1_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_3, Dom.Segments.REF)
			Private Property REF_IFace_15_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.REF_3
				Get
					If REF_3Subset_1_Loop2330B_Obj_1 Is Nothing Then
						REF_3Subset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_3, Dom.Segments.REF)(Children(6), 1, 20, 9255)
					End If

					If REF_3Subset_1_Loop2330B_Obj_1.Count > 0 Then
						Return REF_3Subset_1_Loop2330B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_3)
					If REF_3Subset_1_Loop2330B_Obj_1 Is Nothing Then
						REF_3Subset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_3, Dom.Segments.REF)(Children(6), 1, 20, 9255)
					End If

					If REF_3Subset_1_Loop2330B_Obj_1.Count = 0 Then
						REF_3Subset_1_Loop2330B_Obj_1.Add(value)
					Else
						REF_3Subset_1_Loop2330B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_4Subset_1_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_4, Dom.Segments.REF)
			Private Property REF_IFace_16_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.REF_4
				Get
					If REF_4Subset_1_Loop2330B_Obj_1 Is Nothing Then
						REF_4Subset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_4, Dom.Segments.REF)(Children(6), 1, 20, 242535)
					End If

					If REF_4Subset_1_Loop2330B_Obj_1.Count > 0 Then
						Return REF_4Subset_1_Loop2330B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_4)
					If REF_4Subset_1_Loop2330B_Obj_1 Is Nothing Then
						REF_4Subset_1_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_4, Dom.Segments.REF)(Children(6), 1, 20, 242535)
					End If

					If REF_4Subset_1_Loop2330B_Obj_1.Count = 0 Then
						REF_4Subset_1_Loop2330B_Obj_1.Add(value)
					Else
						REF_4Subset_1_Loop2330B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_5Subset_Loop2330B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_5, Dom.Segments.REF)
			Private Property REF_IFace_17_Loop2330B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_5 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B.REF_5
				Get
					If REF_5Subset_Loop2330B_Obj_1 Is Nothing Then
						REF_5Subset_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_5, Dom.Segments.REF)(Children(6), 1, 20, 10551)
					End If

					If REF_5Subset_Loop2330B_Obj_1.Count > 0 Then
						Return REF_5Subset_Loop2330B_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_5)
					If REF_5Subset_Loop2330B_Obj_1 Is Nothing Then
						REF_5Subset_Loop2330B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_5, Dom.Segments.REF)(Children(6), 1, 20, 10551)
					End If

					If REF_5Subset_Loop2330B_Obj_1.Count = 0 Then
						REF_5Subset_Loop2330B_Obj_1.Add(value)
					Else
						REF_5Subset_Loop2330B_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REFSubset_9_Loop2330C_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330C_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330C.REF
				Get
					If REFSubset_9_Loop2330C_Obj_1 Is Nothing Then
						REFSubset_9_Loop2330C_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330C.REF, Dom.Segments.REF)(Children(6), 3, 22, 6663)
					End If

					Return REFSubset_9_Loop2330C_Obj_1
				End Get
			End Property
			Private REFSubset_10_Loop2330D_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330D_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D.REF
				Get
					If REFSubset_10_Loop2330D_Obj_1 Is Nothing Then
						REFSubset_10_Loop2330D_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330D.REF, Dom.Segments.REF)(Children(6), 3, 23, 6663)
					End If

					Return REFSubset_10_Loop2330D_Obj_1
				End Get
			End Property
			Private REFSubset_11_Loop2330E_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330E.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330E_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330E.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E.REF
				Get
					If REFSubset_11_Loop2330E_Obj_1 Is Nothing Then
						REFSubset_11_Loop2330E_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330E.REF, Dom.Segments.REF)(Children(6), 3, 23, 6735)
					End If

					Return REFSubset_11_Loop2330E_Obj_1
				End Get
			End Property
			Private REFSubset_12_Loop2330F_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330F.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330F_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330F.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F.REF
				Get
					If REFSubset_12_Loop2330F_Obj_1 Is Nothing Then
						REFSubset_12_Loop2330F_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330F.REF, Dom.Segments.REF)(Children(6), 2, 23, 6484)
					End If

					Return REFSubset_12_Loop2330F_Obj_1
				End Get
			End Property
			Private REFSubset_13_Loop2330G_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330G.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330G_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330G.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G.REF
				Get
					If REFSubset_13_Loop2330G_Obj_1 Is Nothing Then
						REFSubset_13_Loop2330G_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330G.REF, Dom.Segments.REF)(Children(6), 3, 23, 184)
					End If

					Return REFSubset_13_Loop2330G_Obj_1
				End Get
			End Property
			Private REFSubset_14_Loop2330H_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330H.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330H_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330H.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H.REF
				Get
					If REFSubset_14_Loop2330H_Obj Is Nothing Then
						REFSubset_14_Loop2330H_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330H.REF, Dom.Segments.REF)(Children(6), 3, 23, 328)
					End If

					Return REFSubset_14_Loop2330H_Obj
				End Get
			End Property
			Private REFSubset_15_Loop2330A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A.REF
				Get
					If REFSubset_15_Loop2330A_Obj_2 Is Nothing Then
						REFSubset_15_Loop2330A_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.REF, Dom.Segments.REF)(Children(6), 2, 19, 6663)
					End If

					Return REFSubset_15_Loop2330A_Obj_2
				End Get
			End Property
			Private REFSubset_16_Loop2330B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.REF
				Get
					If REFSubset_16_Loop2330B_Obj_2 Is Nothing Then
						REFSubset_16_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF, Dom.Segments.REF)(Children(6), 2, 20, 6663)
					End If

					Return REFSubset_16_Loop2330B_Obj_2
				End Get
			End Property
			Private REF_1Subset_2_Loop2330B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_26_Loop2330B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.REF_1
				Get
					If REF_1Subset_2_Loop2330B_Obj_2 Is Nothing Then
						REF_1Subset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_1, Dom.Segments.REF)(Children(6), 1, 20, 7959)
					End If

					If REF_1Subset_2_Loop2330B_Obj_2.Count > 0 Then
						Return REF_1Subset_2_Loop2330B_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_1)
					If REF_1Subset_2_Loop2330B_Obj_2 Is Nothing Then
						REF_1Subset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_1, Dom.Segments.REF)(Children(6), 1, 20, 7959)
					End If

					If REF_1Subset_2_Loop2330B_Obj_2.Count = 0 Then
						REF_1Subset_2_Loop2330B_Obj_2.Add(value)
					Else
						REF_1Subset_2_Loop2330B_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_2Subset_2_Loop2330B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_2, Dom.Segments.REF)
			Private Property REF_IFace_27_Loop2330B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_2 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.REF_2
				Get
					If REF_2Subset_2_Loop2330B_Obj_2 Is Nothing Then
						REF_2Subset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_2, Dom.Segments.REF)(Children(6), 1, 20, 147927)
					End If

					If REF_2Subset_2_Loop2330B_Obj_2.Count > 0 Then
						Return REF_2Subset_2_Loop2330B_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_2)
					If REF_2Subset_2_Loop2330B_Obj_2 Is Nothing Then
						REF_2Subset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_2, Dom.Segments.REF)(Children(6), 1, 20, 147927)
					End If

					If REF_2Subset_2_Loop2330B_Obj_2.Count = 0 Then
						REF_2Subset_2_Loop2330B_Obj_2.Add(value)
					Else
						REF_2Subset_2_Loop2330B_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_3Subset_2_Loop2330B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_3, Dom.Segments.REF)
			Private Property REF_IFace_28_Loop2330B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_3 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.REF_3
				Get
					If REF_3Subset_2_Loop2330B_Obj_2 Is Nothing Then
						REF_3Subset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_3, Dom.Segments.REF)(Children(6), 1, 20, 241239)
					End If

					If REF_3Subset_2_Loop2330B_Obj_2.Count > 0 Then
						Return REF_3Subset_2_Loop2330B_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_3)
					If REF_3Subset_2_Loop2330B_Obj_2 Is Nothing Then
						REF_3Subset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_3, Dom.Segments.REF)(Children(6), 1, 20, 241239)
					End If

					If REF_3Subset_2_Loop2330B_Obj_2.Count = 0 Then
						REF_3Subset_2_Loop2330B_Obj_2.Add(value)
					Else
						REF_3Subset_2_Loop2330B_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_4Subset_2_Loop2330B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_4, Dom.Segments.REF)
			Private Property REF_IFace_29_Loop2330B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_4 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B.REF_4
				Get
					If REF_4Subset_2_Loop2330B_Obj_2 Is Nothing Then
						REF_4Subset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_4, Dom.Segments.REF)(Children(6), 1, 20, 9255)
					End If

					If REF_4Subset_2_Loop2330B_Obj_2.Count > 0 Then
						Return REF_4Subset_2_Loop2330B_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_4)
					If REF_4Subset_2_Loop2330B_Obj_2 Is Nothing Then
						REF_4Subset_2_Loop2330B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_4, Dom.Segments.REF)(Children(6), 1, 20, 9255)
					End If

					If REF_4Subset_2_Loop2330B_Obj_2.Count = 0 Then
						REF_4Subset_2_Loop2330B_Obj_2.Add(value)
					Else
						REF_4Subset_2_Loop2330B_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REFSubset_17_Loop2330C_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330C_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C.REF
				Get
					If REFSubset_17_Loop2330C_Obj_2 Is Nothing Then
						REFSubset_17_Loop2330C_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330C.REF, Dom.Segments.REF)(Children(6), 4, 22, 6663)
					End If

					Return REFSubset_17_Loop2330C_Obj_2
				End Get
			End Property
			Private REFSubset_18_Loop2330D_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330D_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D.REF
				Get
					If REFSubset_18_Loop2330D_Obj_2 Is Nothing Then
						REFSubset_18_Loop2330D_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330D.REF, Dom.Segments.REF)(Children(6), 4, 22, 6699)
					End If

					Return REFSubset_18_Loop2330D_Obj_2
				End Get
			End Property
			Private REFSubset_19_Loop2330E_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330E.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330E_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330E.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E.REF
				Get
					If REFSubset_19_Loop2330E_Obj_2 Is Nothing Then
						REFSubset_19_Loop2330E_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330E.REF, Dom.Segments.REF)(Children(6), 4, 22, 6735)
					End If

					Return REFSubset_19_Loop2330E_Obj_2
				End Get
			End Property
			Private REFSubset_20_Loop2330F_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330F.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330F_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330F.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F.REF
				Get
					If REFSubset_20_Loop2330F_Obj_2 Is Nothing Then
						REFSubset_20_Loop2330F_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330F.REF, Dom.Segments.REF)(Children(6), 3, 22, 6807)
					End If

					Return REFSubset_20_Loop2330F_Obj_2
				End Get
			End Property
			Private REFSubset_21_Loop2330G_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330G.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330G_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330G.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G.REF
				Get
					If REFSubset_21_Loop2330G_Obj_2 Is Nothing Then
						REFSubset_21_Loop2330G_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330G.REF, Dom.Segments.REF)(Children(6), 4, 22, 6484)
					End If

					Return REFSubset_21_Loop2330G_Obj_2
				End Get
			End Property
			Private REFSubset_22_Loop2330H_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330H.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330H_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330H.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H.REF
				Get
					If REFSubset_22_Loop2330H_Obj_1 Is Nothing Then
						REFSubset_22_Loop2330H_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330H.REF, Dom.Segments.REF)(Children(6), 3, 22, 6485)
					End If

					Return REFSubset_22_Loop2330H_Obj_1
				End Get
			End Property
			Private REFSubset_23_Loop2330I_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330I.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2330I_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330I.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I.REF
				Get
					If REFSubset_23_Loop2330I_Obj Is Nothing Then
						REFSubset_23_Loop2330I_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330I.REF, Dom.Segments.REF)(Children(6), 2, 22, 6486)
					End If

					Return REFSubset_23_Loop2330I_Obj
				End Get
			End Property

		End Class
		Partial Friend Class Loop2400_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2400,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.LX_Obj),
													CType(Nothing, Dom.Segments.SV1_Obj),
													CType(Nothing, Dom.Segments.SV2_Obj),
													CType(Nothing, Dom.Segments.SV3_Obj),
													New SegmentContainer(Of Dom.Segments.TOO)(32, 2, 3820),
													CType(Nothing, Dom.Segments.SV4_Obj),
													CType(Nothing, Dom.Segments.SV5_Obj),
													CType(Nothing, Dom.Segments.SV6_Obj),
													CType(Nothing, Dom.Segments.SV7_Obj),
													New SegmentContainer(Of Dom.Segments.HI)(25, 2, 4150),
													New SegmentContainer(Of Dom.Segments.PWK)(10, 2, 4200),
													CType(Nothing, Dom.Segments.CR1_Obj),
													New SegmentContainer(Of Dom.Segments.CR2)(5, 2, 4300),
													CType(Nothing, Dom.Segments.CR3_Obj),
													New SegmentContainer(Of Dom.Segments.CR4)(3, 2, 4400),
													CType(Nothing, Dom.Segments.CR5_Obj),
													New SegmentContainer(Of Dom.Segments.CRC)(3, 2, 4500),
													New SegmentContainer(Of Dom.Segments.DTP)(15, 2, 4550),
													New SegmentContainer(Of Dom.Segments.QTY)(5, 2, 4600),
													New SegmentContainer(Of Dom.Segments.MEA)(20, 2, 4620),
													CType(Nothing, Dom.Segments.CN1_Obj),
													New SegmentContainer(Of Dom.Segments.REF)(30, 2, 4700),
													New SegmentContainer(Of Dom.Segments.AMT)(15, 2, 4750),
													New SegmentContainer(Of Dom.Segments.K3)(10, 2, 4800),
													New SegmentContainer(Of Dom.Segments.NTE)(10, 2, 4850),
													CType(Nothing, Dom.Segments.PS1_Obj),
													New SegmentContainer(Of Dom.Segments.IMM)(0, 2, 4900),
													CType(Nothing, Dom.Segments.HSD_Obj),
													CType(Nothing, Dom.Segments.HCP_Obj),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2410)(0, 2, 4930),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2420)(10, 2, 5000),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2430)(0, 2, 5400),
													New LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2440)(0, 2, 5510)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "LX", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "SV1", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "SV2", ReadAction.PopulateSegment, 3, False),
									New ReaderState(2, "SV2", ReadAction.PopulateSegment, 3, False),
									New ReaderState(1, "SV3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(2, "SV3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(3, "SV3", ReadAction.PopulateSegment, 4, False),
									New ReaderState(1, "TOO", ReadAction.PopulateSegment, 5, False),
									New ReaderState(2, "TOO", ReadAction.PopulateSegment, 5, False),
									New ReaderState(3, "TOO", ReadAction.PopulateSegment, 5, False),
									New ReaderState(4, "TOO", ReadAction.PopulateSegment, 5, False),
									New ReaderState(5, "TOO", ReadAction.PopulateSegment, 5, False),
									New ReaderState(1, "SV4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(2, "SV4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(3, "SV4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(4, "SV4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(5, "SV4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(1, "SV5", ReadAction.PopulateSegment, 8, False),
									New ReaderState(2, "SV5", ReadAction.PopulateSegment, 8, False),
									New ReaderState(3, "SV5", ReadAction.PopulateSegment, 8, False),
									New ReaderState(4, "SV5", ReadAction.PopulateSegment, 8, False),
									New ReaderState(5, "SV5", ReadAction.PopulateSegment, 8, False),
									New ReaderState(7, "SV5", ReadAction.PopulateSegment, 8, False),
									New ReaderState(1, "SV6", ReadAction.PopulateSegment, 9, False),
									New ReaderState(2, "SV6", ReadAction.PopulateSegment, 9, False),
									New ReaderState(3, "SV6", ReadAction.PopulateSegment, 9, False),
									New ReaderState(4, "SV6", ReadAction.PopulateSegment, 9, False),
									New ReaderState(5, "SV6", ReadAction.PopulateSegment, 9, False),
									New ReaderState(7, "SV6", ReadAction.PopulateSegment, 9, False),
									New ReaderState(8, "SV6", ReadAction.PopulateSegment, 9, False),
									New ReaderState(1, "SV7", ReadAction.PopulateSegment, 10, False),
									New ReaderState(2, "SV7", ReadAction.PopulateSegment, 10, False),
									New ReaderState(3, "SV7", ReadAction.PopulateSegment, 10, False),
									New ReaderState(4, "SV7", ReadAction.PopulateSegment, 10, False),
									New ReaderState(5, "SV7", ReadAction.PopulateSegment, 10, False),
									New ReaderState(7, "SV7", ReadAction.PopulateSegment, 10, False),
									New ReaderState(8, "SV7", ReadAction.PopulateSegment, 10, False),
									New ReaderState(9, "SV7", ReadAction.PopulateSegment, 10, False),
									New ReaderState(1, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(2, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(3, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(4, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(5, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(7, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(8, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(9, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(10, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(11, "HI", ReadAction.PopulateSegment, 11, False),
									New ReaderState(1, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(2, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(3, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(4, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(5, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(7, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(8, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(9, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(10, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(11, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(13, "PWK", ReadAction.PopulateSegment, 13, False),
									New ReaderState(1, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(2, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(3, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(4, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(5, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(7, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(8, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(9, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(10, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(11, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(13, "CR1", ReadAction.PopulateSegment, 15, False),
									New ReaderState(1, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(2, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(3, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(4, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(5, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(7, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(8, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(9, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(10, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(11, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(13, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(15, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(16, "CR2", ReadAction.PopulateSegment, 16, False),
									New ReaderState(1, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(2, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(3, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(4, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(5, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(7, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(8, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(9, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(10, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(11, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(13, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(15, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(16, "CR3", ReadAction.PopulateSegment, 18, False),
									New ReaderState(1, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(2, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(3, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(4, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(5, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(7, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(8, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(9, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(10, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(11, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(13, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(15, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(16, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(18, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(19, "CR4", ReadAction.PopulateSegment, 19, False),
									New ReaderState(1, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(2, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(3, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(4, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(5, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(7, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(8, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(9, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(10, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(11, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(13, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(15, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(16, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(18, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(19, "CR5", ReadAction.PopulateSegment, 21, False),
									New ReaderState(1, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(2, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(3, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(4, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(5, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(7, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(8, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(9, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(10, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(11, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(13, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(15, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(16, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(18, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(19, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(21, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(22, "CRC", ReadAction.PopulateSegment, 22, False),
									New ReaderState(1, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(2, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(3, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(4, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(5, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(7, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(8, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(9, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(10, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(11, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(13, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(15, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(16, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(18, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(19, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(21, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(22, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(24, "DTP", ReadAction.PopulateSegment, 24, False),
									New ReaderState(1, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(2, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(3, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(4, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(5, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(7, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(8, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(9, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(10, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(11, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(13, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(15, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(16, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(18, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(19, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(21, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(22, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(24, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(26, "QTY", ReadAction.PopulateSegment, 26, False),
									New ReaderState(1, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(2, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(3, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(4, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(5, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(7, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(8, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(9, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(10, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(11, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(13, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(15, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(16, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(18, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(19, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(21, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(22, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(24, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(26, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(28, "MEA", ReadAction.PopulateSegment, 28, False),
									New ReaderState(1, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(2, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(3, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(4, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(5, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(7, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(8, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(9, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(10, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(11, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(13, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(15, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(16, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(18, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(19, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(21, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(22, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(24, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(26, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(28, "CN1", ReadAction.PopulateSegment, 30, False),
									New ReaderState(1, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(2, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(3, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(4, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(5, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(7, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(8, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(9, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(10, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(11, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(13, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(15, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(16, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(18, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(19, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(21, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(22, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(24, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(26, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(28, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(30, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(31, "REF", ReadAction.PopulateSegment, 31, False),
									New ReaderState(1, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(2, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(3, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(4, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(5, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(7, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(8, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(9, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(10, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(11, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(13, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(15, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(16, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(18, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(19, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(21, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(22, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(24, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(26, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(28, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(30, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(31, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(33, "AMT", ReadAction.PopulateSegment, 33, False),
									New ReaderState(1, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(2, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(3, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(4, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(5, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(7, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(8, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(9, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(10, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(11, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(13, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(15, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(16, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(18, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(19, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(21, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(22, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(24, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(26, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(28, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(30, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(31, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(33, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(35, "K3", ReadAction.PopulateSegment, 35, False),
									New ReaderState(1, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(2, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(3, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(4, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(5, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(7, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(8, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(9, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(10, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(11, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(13, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(15, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(16, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(18, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(19, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(21, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(22, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(24, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(26, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(28, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(30, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(31, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(33, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(35, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(37, "NTE", ReadAction.PopulateSegment, 37, False),
									New ReaderState(1, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(2, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(3, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(4, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(5, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(7, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(8, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(9, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(10, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(11, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(13, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(15, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(16, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(18, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(19, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(21, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(22, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(24, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(26, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(28, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(30, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(31, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(33, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(35, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(37, "PS1", ReadAction.PopulateSegment, 39, False),
									New ReaderState(1, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(2, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(3, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(4, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(5, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(7, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(8, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(9, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(10, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(11, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(13, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(15, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(16, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(18, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(19, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(21, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(22, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(24, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(26, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(28, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(30, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(31, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(33, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(35, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(37, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(39, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(40, "IMM", ReadAction.PopulateSegment, 40, False),
									New ReaderState(1, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(2, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(3, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(4, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(5, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(7, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(8, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(9, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(10, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(11, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(13, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(15, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(16, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(18, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(19, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(21, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(22, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(24, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(26, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(28, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(30, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(31, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(33, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(35, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(37, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(39, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(40, "HSD", ReadAction.PopulateSegment, 42, False),
									New ReaderState(1, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(2, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(3, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(4, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(5, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(7, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(8, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(9, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(10, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(11, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(13, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(15, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(16, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(18, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(19, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(21, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(22, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(24, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(26, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(28, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(30, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(31, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(33, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(35, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(37, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(39, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(40, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(42, "HCP", ReadAction.PopulateSegment, 43, False),
									New ReaderState(1, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(2, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(3, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(4, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(5, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(7, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(8, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(9, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(10, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(11, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(13, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(15, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(16, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(18, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(19, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(21, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(22, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(24, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(26, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(28, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(30, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(31, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(33, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(35, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(37, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(39, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(40, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(42, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(43, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(44, "LIN", ReadAction.PopulateLoop, 44, False),
									New ReaderState(1, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(2, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(3, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(4, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(5, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(7, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(8, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(9, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(10, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(11, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(13, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(15, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(16, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(18, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(19, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(21, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(22, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(24, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(26, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(28, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(30, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(31, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(33, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(35, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(37, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(39, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(40, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(42, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(43, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(44, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(46, "NM1", ReadAction.PopulateLoop, 46, False),
									New ReaderState(1, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(2, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(3, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(4, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(5, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(7, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(8, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(9, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(10, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(11, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(13, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(15, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(16, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(18, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(19, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(21, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(22, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(24, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(26, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(28, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(30, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(31, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(33, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(35, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(37, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(39, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(40, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(42, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(43, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(44, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(46, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(48, "SVD", ReadAction.PopulateLoop, 48, False),
									New ReaderState(1, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(2, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(3, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(4, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(5, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(7, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(8, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(9, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(10, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(11, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(13, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(15, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(16, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(18, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(19, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(21, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(22, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(24, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(26, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(28, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(30, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(31, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(33, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(35, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(37, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(39, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(40, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(42, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(43, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(44, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(46, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(48, "LQ", ReadAction.PopulateLoop, 50, False),
									New ReaderState(50, "LQ", ReadAction.PopulateLoop, 50, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "LX", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.LX_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					LX_Obj = Seg
				ElseIf String.Compare(segmentName, "SV1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SV1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SV1_Obj = Seg
				ElseIf String.Compare(segmentName, "SV2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SV2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SV2_Obj = Seg
				ElseIf String.Compare(segmentName, "SV3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SV3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SV3_Obj = Seg
				ElseIf String.Compare(segmentName, "TOO", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.TOO_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					TOO_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "SV4", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SV4_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SV4_Obj = Seg
				ElseIf String.Compare(segmentName, "SV5", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SV5_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SV5_Obj = Seg
				ElseIf String.Compare(segmentName, "SV6", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SV6_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SV6_Obj = Seg
				ElseIf String.Compare(segmentName, "SV7", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SV7_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SV7_Obj = Seg
				ElseIf String.Compare(segmentName, "HI", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.HI_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					HI_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "PWK", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PWK_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PWK_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.PWK_Obj)
					If MyBase.CompareKey(String.Format("{0}:{1}", If(S2.PWK01 IsNot Nothing, S2.PWK01, String.Empty), If(S2.PWK02 IsNot Nothing, S2.PWK02, String.Empty)), ";03:AA;03:BM;03:EL;03:EM;03:FT;03:FX;04:AA;04:BM;04:EL;04:EM;04:FT;04:FX;05:AA;05:BM;05:EL;05:EM;05:FT;05:FX;06:AA;06:BM;06:EL;06:EM;06:FT;06:FX;07:AA;07:BM;07:EL;07:EM;07:FT;07:FX;08:AA;08:BM;08:EL;08:EM;08:FT;08:FX;09:AA;09:BM;09:EL;09:EM;09:FT;09:FX;10:AA;10:BM;10:EL;10:EM;10:FT;10:FX;11:AA;11:BM;11:EL;11:EM;11:FT;11:FX;13:AA;13:BM;13:EL;13:EM;13:FT;13:FX;15:AA;15:BM;15:EL;15:EM;15:FT;15:FX;21:AA;21:BM;21:EL;21:EM;21:FT;21:FX;A3:AA;A3:BM;A3:EL;A3:EM;A3:FT;A3:FX;A4:AA;A4:BM;A4:EL;A4:EM;A4:FT;A4:FX;AM:AA;AM:BM;AM:EL;AM:EM;AM:FT;AM:FX;AS:AA;AS:BM;AS:EL;AS:EM;AS:FT;AS:FX;B2:AA;B2:BM;B2:EL;B2:EM;B2:FT;B2:FX;B3:AA;B3:BM;B3:EL;B3:EM;B3:FT;B3:FX;B4:AA;B4:BM;B4:EL;B4:EM;B4:FT;B4:FX;BR:AA;BR:BM;BR:EL;BR:EM;BR:FT;BR:FX;BS:AA;BS:BM;BS:EL;BS:EM;BS:FT;BS:FX;BT:AA;BT:BM;BT:EL;BT:EM;BT:FT;BT:FX;CB:AA;CB:BM;CB:EL;CB:EM;CB:FT;CB:FX;CK:AA;CK:BM;CK:EL;CK:EM;CK:FT;CK:FX;CT:AA;CT:BM;CT:EL;CT:EM;CT:FT;CT:FX;D2:AA;D2:BM;D2:EL;D2:EM;D2:FT;D2:FX;DA:AA;DA:BM;DA:EL;DA:EM;DA:FT;DA:FX;DB:AA;DB:BM;DB:EL;DB:EM;DB:FT;DB:FX;DG:AA;DG:BM;DG:EL;DG:EM;DG:FT;DG:FX;DJ:AA;DJ:BM;DJ:EL;DJ:EM;DJ:FT;DJ:FX;DS:AA;DS:BM;DS:EL;DS:EM;DS:FT;DS:FX;EB:AA;EB:BM;EB:EL;EB:EM;EB:FT;EB:FX;HC:AA;HC:BM;HC:EL;HC:EM;HC:FT;HC:FX;HR:AA;HR:BM;HR:EL;HR:EM;HR:FT;HR:FX;I5:AA;I5:BM;I5:EL;I5:EM;I5:FT;I5:FX;IR:AA;IR:BM;IR:EL;IR:EM;IR:FT;IR:FX;LA:AA;LA:BM;LA:EL;LA:EM;LA:FT;LA:FX;M1:AA;M1:BM;M1:EL;M1:EM;M1:FT;M1:FX;MT:AA;MT:BM;MT:EL;MT:EM;MT:FT;MT:FX;NN:AA;NN:BM;NN:EL;NN:EM;NN:FT;NN:FX;OB:AA;OB:BM;OB:EL;OB:EM;OB:FT;OB:FX;OC:AA;OC:BM;OC:EL;OC:EM;OC:FT;OC:FX;OD:AA;OD:BM;OD:EL;OD:EM;OD:FT;OD:FX;OE:AA;OE:BM;OE:EL;OE:EM;OE:FT;OE:FX;OX:AA;OX:BM;OX:EL;OX:EM;OX:FT;OX:FX;OZ:AA;OZ:BM;OZ:EL;OZ:EM;OZ:FT;OZ:FX;P4:AA;P4:BM;P4:EL;P4:EM;P4:FT;P4:FX;P5:AA;P5:BM;P5:EL;P5:EM;P5:FT;P5:FX;PE:AA;PE:BM;PE:EL;PE:EM;PE:FT;PE:FX;PN:AA;PN:BM;PN:EL;PN:EM;PN:FT;PN:FX;PO:AA;PO:BM;PO:EL;PO:EM;PO:FT;PO:FX;PQ:AA;PQ:BM;PQ:EL;PQ:EM;PQ:FT;PQ:FX;PY:AA;PY:BM;PY:EL;PY:EM;PY:FT;PY:FX;PZ:AA;PZ:BM;PZ:EL;PZ:EM;PZ:FT;PZ:FX;RB:AA;RB:BM;RB:EL;RB:EM;RB:FT;RB:FX;RR:AA;RR:BM;RR:EL;RR:EM;RR:FT;RR:FX;RT:AA;RT:BM;RT:EL;RT:EM;RT:FT;RT:FX;RX:AA;RX:BM;RX:EL;RX:EM;RX:FT;RX:FX;SG:AA;SG:BM;SG:EL;SG:EM;SG:FT;SG:FX;V5:AA;V5:BM;V5:EL;V5:EM;V5:FT;V5:FX;XP:AA;XP:BM;XP:EL;XP:EM;XP:FT;XP:FX;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 76
					ElseIf MyBase.CompareKey(String.Format("{0}:{1}", If(S2.PWK01 IsNot Nothing, S2.PWK01, String.Empty), If(S2.PWK02 IsNot Nothing, S2.PWK02, String.Empty)), ";CT:AB;CT:AD;CT:AF;CT:AG;CT:NS;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 2668
					ElseIf MyBase.CompareKey(String.Format("{0}:{1}", If(S2.PWK01 IsNot Nothing, S2.PWK01, String.Empty), If(S2.PWK02 IsNot Nothing, S2.PWK02, String.Empty)), ";03:AA;03:BM;03:EL;03:EM;03:FT;03:FX;04:AA;04:BM;04:EL;04:EM;04:FT;04:FX;05:AA;05:BM;05:EL;05:EM;05:FT;05:FX;06:AA;06:BM;06:EL;06:EM;06:FT;06:FX;07:AA;07:BM;07:EL;07:EM;07:FT;07:FX;08:AA;08:BM;08:EL;08:EM;08:FT;08:FX;09:AA;09:BM;09:EL;09:EM;09:FT;09:FX;10:AA;10:BM;10:EL;10:EM;10:FT;10:FX;11:AA;11:BM;11:EL;11:EM;11:FT;11:FX;13:AA;13:BM;13:EL;13:EM;13:FT;13:FX;15:AA;15:BM;15:EL;15:EM;15:FT;15:FX;21:AA;21:BM;21:EL;21:EM;21:FT;21:FX;A3:AA;A3:BM;A3:EL;A3:EM;A3:FT;A3:FX;A4:AA;A4:BM;A4:EL;A4:EM;A4:FT;A4:FX;AM:AA;AM:BM;AM:EL;AM:EM;AM:FT;AM:FX;AS:AA;AS:BM;AS:EL;AS:EM;AS:FT;AS:FX;B2:AA;B2:BM;B2:EL;B2:EM;B2:FT;B2:FX;B3:AA;B3:BM;B3:EL;B3:EM;B3:FT;B3:FX;B4:AA;B4:BM;B4:EL;B4:EM;B4:FT;B4:FX;BR:AA;BR:BM;BR:EL;BR:EM;BR:FT;BR:FX;BS:AA;BS:BM;BS:EL;BS:EM;BS:FT;BS:FX;BT:AA;BT:BM;BT:EL;BT:EM;BT:FT;BT:FX;CB:AA;CB:BM;CB:EL;CB:EM;CB:FT;CB:FX;CK:AA;CK:BM;CK:EL;CK:EM;CK:FT;CK:FX;CT:AA;CT:BM;CT:EL;CT:EM;CT:FT;CT:FX;D2:AA;D2:BM;D2:EL;D2:EM;D2:FT;D2:FX;DA:AA;DA:BM;DA:EL;DA:EM;DA:FT;DA:FX;DB:AA;DB:BM;DB:EL;DB:EM;DB:FT;DB:FX;DG:AA;DG:BM;DG:EL;DG:EM;DG:FT;DG:FX;DJ:AA;DJ:BM;DJ:EL;DJ:EM;DJ:FT;DJ:FX;DS:AA;DS:BM;DS:EL;DS:EM;DS:FT;DS:FX;EB:AA;EB:BM;EB:EL;EB:EM;EB:FT;EB:FX;HC:AA;HC:BM;HC:EL;HC:EM;HC:FT;HC:FX;HR:AA;HR:BM;HR:EL;HR:EM;HR:FT;HR:FX;I5:AA;I5:BM;I5:EL;I5:EM;I5:FT;I5:FX;IR:AA;IR:BM;IR:EL;IR:EM;IR:FT;IR:FX;LA:AA;LA:BM;LA:EL;LA:EM;LA:FT;LA:FX;M1:AA;M1:BM;M1:EL;M1:EM;M1:FT;M1:FX;MT:AA;MT:BM;MT:EL;MT:EM;MT:FT;MT:FX;NN:AA;NN:BM;NN:EL;NN:EM;NN:FT;NN:FX;OB:AA;OB:BM;OB:EL;OB:EM;OB:FT;OB:FX;OC:AA;OC:BM;OC:EL;OC:EM;OC:FT;OC:FX;OD:AA;OD:BM;OD:EL;OD:EM;OD:FT;OD:FX;OE:AA;OE:BM;OE:EL;OE:EM;OE:FT;OE:FX;OX:AA;OX:BM;OX:EL;OX:EM;OX:FT;OX:FX;OZ:AA;OZ:BM;OZ:EL;OZ:EM;OZ:FT;OZ:FX;P4:AA;P4:BM;P4:EL;P4:EM;P4:FT;P4:FX;P5:AA;P5:BM;P5:EL;P5:EM;P5:FT;P5:FX;PE:AA;PE:BM;PE:EL;PE:EM;PE:FT;PE:FX;PN:AA;PN:BM;PN:EL;PN:EM;PN:FT;PN:FX;PO:AA;PO:BM;PO:EL;PO:EM;PO:FT;PO:FX;PQ:AA;PQ:BM;PQ:EL;PQ:EM;PQ:FT;PQ:FX;PY:AA;PY:BM;PY:EL;PY:EM;PY:FT;PY:FX;PZ:AA;PZ:BM;PZ:EL;PZ:EM;PZ:FT;PZ:FX;RB:AA;RB:BM;RB:EL;RB:EM;RB:FT;RB:FX;RR:AA;RR:BM;RR:EL;RR:EM;RR:FT;RR:FX;RT:AA;RT:BM;RT:EL;RT:EM;RT:FT;RT:FX;RX:AA;RX:BM;RX:EL;RX:EM;RX:FT;RX:FX;SG:AA;SG:BM;SG:EL;SG:EM;SG:FT;SG:FX;V5:AA;V5:BM;V5:EL;V5:EM;V5:FT;V5:FX;XP:AA;XP:BM;XP:EL;XP:EM;XP:FT;XP:FX;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 76
					End If
				ElseIf String.Compare(segmentName, "CR1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR1_Obj = Seg
				ElseIf String.Compare(segmentName, "CR2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR2_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "CR3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR3_Obj = Seg
				ElseIf String.Compare(segmentName, "CR4", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR4_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR4_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "CR5", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CR5_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CR5_Obj = Seg
				ElseIf String.Compare(segmentName, "CRC", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CRC_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CRC_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.CRC_Obj)
					If MyBase.CompareKey(S2.CRC01, ";07;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 184
					ElseIf MyBase.CompareKey(S2.CRC01, ";70;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 2776
					ElseIf MyBase.CompareKey(S2.CRC01, ";09;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 4072
					End If
				ElseIf String.Compare(segmentName, "DTP", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DTP_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DTP_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.DTP_Obj)
					If MyBase.CompareKey(S2.DTP01, ";472;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 6664
					ElseIf MyBase.CompareKey(S2.DTP01, ";471;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 239944
					ElseIf MyBase.CompareKey(S2.DTP01, ";607;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 7960
					ElseIf MyBase.CompareKey(S2.DTP01, ";463;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 10552
					ElseIf MyBase.CompareKey(S2.DTP01, ";461;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 11848
					ElseIf MyBase.CompareKey(S2.DTP01, ";304;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 14440
					ElseIf MyBase.CompareKey(S2.DTP01, ";738;739;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 15736
					ElseIf MyBase.CompareKey(S2.DTP01, ";011;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 18328
					ElseIf MyBase.CompareKey(S2.DTP01, ";455;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 20920
					ElseIf MyBase.CompareKey(S2.DTP01, ";454;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 24808
					ElseIf MyBase.CompareKey(S2.DTP01, ";472;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 6664
					ElseIf MyBase.CompareKey(S2.DTP01, ";139;441;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 7960
					ElseIf MyBase.CompareKey(S2.DTP01, ";452;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 9256
					ElseIf MyBase.CompareKey(S2.DTP01, ";446;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 10552
					ElseIf MyBase.CompareKey(S2.DTP01, ";196;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 150520
					ElseIf MyBase.CompareKey(S2.DTP01, ";198;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 290488
					ElseIf MyBase.CompareKey(S2.DTP01, ";472;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 6664
					End If
				ElseIf String.Compare(segmentName, "QTY", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.QTY_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					QTY_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.QTY_Obj)
					If MyBase.CompareKey(S2.QTY01, ";PT;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 220
					ElseIf MyBase.CompareKey(S2.QTY01, ";FL;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 1516
					End If
				ElseIf String.Compare(segmentName, "MEA", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.MEA_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					MEA_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "CN1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CN1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CN1_Obj = Seg
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.REF_Obj)
					If MyBase.CompareKey(S2.REF01, ";9B;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 256
					ElseIf MyBase.CompareKey(S2.REF01, ";9D;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 1552
					ElseIf MyBase.CompareKey(S2.REF01, ";G1;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 4144
					ElseIf MyBase.CompareKey(S2.REF01, ";6R;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 13216
					ElseIf MyBase.CompareKey(S2.REF01, ";EW;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 14512
					ElseIf MyBase.CompareKey(S2.REF01, ";X4;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 15808
					ElseIf MyBase.CompareKey(S2.REF01, ";F4;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 17104
					ElseIf MyBase.CompareKey(S2.REF01, ";BT;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 19696
					ElseIf MyBase.CompareKey(S2.REF01, ";9F;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 20992
					ElseIf MyBase.CompareKey(S2.REF01, ";G3;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 256
					ElseIf MyBase.CompareKey(S2.REF01, ";G1;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 1552
					ElseIf MyBase.CompareKey(S2.REF01, ";6R;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 2848
					ElseIf MyBase.CompareKey(S2.REF01, ";9A;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 236128
					ElseIf MyBase.CompareKey(S2.REF01, ";9C;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 4144
					ElseIf MyBase.CompareKey(S2.REF01, ";9F;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 237424
					ElseIf MyBase.CompareKey(S2.REF01, ";6R;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 256
					ElseIf MyBase.CompareKey(S2.REF01, ";9B;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 233536
					ElseIf MyBase.CompareKey(S2.REF01, ";9D;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 1552
					End If
				ElseIf String.Compare(segmentName, "AMT", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.AMT_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					AMT_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.AMT_Obj)
					If MyBase.CompareKey(S2.AMT01, ";T;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 1588
					ElseIf MyBase.CompareKey(S2.AMT01, ";F4;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 4180
					ElseIf MyBase.CompareKey(S2.AMT01, ";T;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 2884
					ElseIf MyBase.CompareKey(S2.AMT01, ";GT;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 292
					ElseIf MyBase.CompareKey(S2.AMT01, ";N8;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 1588
					End If
				ElseIf String.Compare(segmentName, "K3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.K3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					K3_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "NTE", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.NTE_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					NTE_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.NTE_Obj)
					If MyBase.CompareKey(S2.NTE01, ";ADD;DCP;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 8068
					ElseIf MyBase.CompareKey(S2.NTE01, ";TPO;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 241348
					ElseIf MyBase.CompareKey(S2.NTE01, ";TPO;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 6772
					End If
				ElseIf String.Compare(segmentName, "PS1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PS1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PS1_Obj = Seg
				ElseIf String.Compare(segmentName, "IMM", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.IMM_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					IMM_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "HSD", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.HSD_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					HSD_Obj = Seg
				ElseIf String.Compare(segmentName, "HCP", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.HCP_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					HCP_Obj = Seg
				End If
			End Sub

			Private Async Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				If String.Compare(args.DataSegment.SegmentID, "LIN", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2410_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2410_Obj.Add(NewLoop)
					If String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2410"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2400__2410"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				ElseIf String.Compare(args.DataSegment.SegmentID, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2420_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2420_Obj.Add(NewLoop)
					If MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2420A"
						NewLoop.SetArea = 25
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";QB;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2420B"
						NewLoop.SetArea = 26
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";77;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2420C"
						NewLoop.SetArea = 27
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2420D"
						NewLoop.SetArea = 28
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DK;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2420E"
						NewLoop.SetArea = 29
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2420F"
						NewLoop.SetArea = 30
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";PW;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2420G"
						NewLoop.SetArea = 31
						NewLoop.SetSequence = 1409
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";45;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2420H"
						NewLoop.SetArea = 31
						NewLoop.SetSequence = 10481
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2400__2420A"
						NewLoop.SetArea = 25
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DD;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2400__2420B"
						NewLoop.SetArea = 28
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2400__2420C"
						NewLoop.SetArea = 28
						NewLoop.SetSequence = 185
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";77;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2400__2420D"
						NewLoop.SetArea = 28
						NewLoop.SetSequence = 257
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";72;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2400__2420A"
						NewLoop.SetArea = 26
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";ZZ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2400__2420B"
						NewLoop.SetArea = 27
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";82;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2400__2420C"
						NewLoop.SetArea = 28
						NewLoop.SetSequence = 5
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf MyBase.CompareKey(LoopKey, ";DN;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2400__2420D"
						NewLoop.SetArea = 28
						NewLoop.SetSequence = 113
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				ElseIf String.Compare(args.DataSegment.SegmentID, "SVD", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2430_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2430_Obj.Add(NewLoop)
					If String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2430"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q2__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q2__2000B__2300__2400__2430"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					ElseIf String.Compare(args.Implementation, "_837Q3__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q3__2000B__2300__2400__2430"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				ElseIf String.Compare(args.DataSegment.SegmentID, "LQ", StringComparison.OrdinalIgnoreCase) = 0 Then
					Dim NewLoop As LoopBase = New Dom.Transactions.Transaction837.Loop2440_Obj
					Dim LoopKey As String = args.DataSegment.ToStringValue(0)
					Loop2440_Obj.Add(NewLoop)
					If String.Compare(args.Implementation, "_837Q1__2000B__2300__2400", StringComparison.OrdinalIgnoreCase) = 0 Then
						args.Implementation = "_837Q1__2000B__2300__2400__2440"
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					Else
						Await NewLoop.ReadAsync(args).ConfigureAwait(False)
					End If
				End If
				args.Implementation = Temp
			End Function
			Friend Property LX_Obj As Dom.Segments.LX_Obj
				Get
					Return CType(Children(0), Dom.Segments.LX_Obj)
				End Get
				Set(value As Dom.Segments.LX_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property LX_Std As Dom.Segments.LX Implements Dom.Transactions.Transaction837.Loops.Loop2400.LX
				Get
					Return CType(Children(0), Dom.Segments.LX_Obj)
				End Get
				Set(value As Dom.Segments.LX)
					Children(0) = value
				End Set
			End Property

			Private Property LX_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.LX Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.LX
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.LX)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.LX)
					Children(0) = value
				End Set
			End Property
			Private Property LX_IFace_1_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.LX Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.LX
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.LX)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.LX)
					Children(0) = value
				End Set
			End Property
			Private Property LX_IFace_2_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.LX Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.LX
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.LX)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.LX)
					Children(0) = value
				End Set
			End Property
			Friend Property SV1_Obj As Dom.Segments.SV1_Obj
				Get
					Return CType(Children(1), Dom.Segments.SV1_Obj)
				End Get
				Set(value As Dom.Segments.SV1_Obj)
					Children(1) = value
				End Set
			End Property

			Private Property SV1_Std As Dom.Segments.SV1 Implements Dom.Transactions.Transaction837.Loops.Loop2400.SV1
				Get
					Return CType(Children(1), Dom.Segments.SV1_Obj)
				End Get
				Set(value As Dom.Segments.SV1)
					Children(1) = value
				End Set
			End Property

			Private Property SV1_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.SV1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.SV1
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.SV1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.SV1)
					Children(1) = value
				End Set
			End Property
			Friend Property SV2_Obj As Dom.Segments.SV2_Obj
				Get
					Return CType(Children(2), Dom.Segments.SV2_Obj)
				End Get
				Set(value As Dom.Segments.SV2_Obj)
					Children(2) = value
				End Set
			End Property

			Private Property SV2_Std As Dom.Segments.SV2 Implements Dom.Transactions.Transaction837.Loops.Loop2400.SV2
				Get
					Return CType(Children(2), Dom.Segments.SV2_Obj)
				End Get
				Set(value As Dom.Segments.SV2)
					Children(2) = value
				End Set
			End Property

			Private Property SV2_IFace_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.SV2 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.SV2
				Get
					Return CType(Children(2), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.SV2)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.SV2)
					Children(2) = value
				End Set
			End Property
			Friend Property SV3_Obj As Dom.Segments.SV3_Obj
				Get
					Return CType(Children(3), Dom.Segments.SV3_Obj)
				End Get
				Set(value As Dom.Segments.SV3_Obj)
					Children(3) = value
				End Set
			End Property

			Private Property SV3_Std As Dom.Segments.SV3 Implements Dom.Transactions.Transaction837.Loops.Loop2400.SV3
				Get
					Return CType(Children(3), Dom.Segments.SV3_Obj)
				End Get
				Set(value As Dom.Segments.SV3)
					Children(3) = value
				End Set
			End Property

			Private Property SV3_IFace_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.SV3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.SV3
				Get
					Return CType(Children(3), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.SV3)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.SV3)
					Children(3) = value
				End Set
			End Property
			Friend ReadOnly Property TOO_Obj As SegmentContainer(Of Dom.Segments.TOO) Implements Dom.Transactions.Transaction837.Loops.Loop2400.TOO
				Get
					Return CType(Children(4), SegmentContainer(Of Dom.Segments.TOO))
				End Get
			End Property

			Private TOOSubset_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.TOO, Dom.Segments.TOO)
			Private ReadOnly Property TOO_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.TOO, Dom.Segments.TOO) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.TOO
				Get
					If TOOSubset_Loop2400_Obj_2 Is Nothing Then
						TOOSubset_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.TOO, Dom.Segments.TOO)(Children(4), 32, 25, 2883)
					End If

					Return TOOSubset_Loop2400_Obj_2
				End Get
			End Property
			Friend Property SV4_Obj As Dom.Segments.SV4_Obj
				Get
					Return CType(Children(5), Dom.Segments.SV4_Obj)
				End Get
				Set(value As Dom.Segments.SV4_Obj)
					Children(5) = value
				End Set
			End Property

			Private Property SV4_Std As Dom.Segments.SV4 Implements Dom.Transactions.Transaction837.Loops.Loop2400.SV4
				Get
					Return CType(Children(5), Dom.Segments.SV4_Obj)
				End Get
				Set(value As Dom.Segments.SV4)
					Children(5) = value
				End Set
			End Property

			Friend Property SV5_Obj As Dom.Segments.SV5_Obj
				Get
					Return CType(Children(6), Dom.Segments.SV5_Obj)
				End Get
				Set(value As Dom.Segments.SV5_Obj)
					Children(6) = value
				End Set
			End Property

			Private Property SV5_Std As Dom.Segments.SV5 Implements Dom.Transactions.Transaction837.Loops.Loop2400.SV5
				Get
					Return CType(Children(6), Dom.Segments.SV5_Obj)
				End Get
				Set(value As Dom.Segments.SV5)
					Children(6) = value
				End Set
			End Property

			Private Property SV5_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.SV5 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.SV5
				Get
					Return CType(Children(6), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.SV5)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.SV5)
					Children(6) = value
				End Set
			End Property
			Friend Property SV6_Obj As Dom.Segments.SV6_Obj
				Get
					Return CType(Children(7), Dom.Segments.SV6_Obj)
				End Get
				Set(value As Dom.Segments.SV6_Obj)
					Children(7) = value
				End Set
			End Property

			Private Property SV6_Std As Dom.Segments.SV6 Implements Dom.Transactions.Transaction837.Loops.Loop2400.SV6
				Get
					Return CType(Children(7), Dom.Segments.SV6_Obj)
				End Get
				Set(value As Dom.Segments.SV6)
					Children(7) = value
				End Set
			End Property

			Friend Property SV7_Obj As Dom.Segments.SV7_Obj
				Get
					Return CType(Children(8), Dom.Segments.SV7_Obj)
				End Get
				Set(value As Dom.Segments.SV7_Obj)
					Children(8) = value
				End Set
			End Property

			Private Property SV7_Std As Dom.Segments.SV7 Implements Dom.Transactions.Transaction837.Loops.Loop2400.SV7
				Get
					Return CType(Children(8), Dom.Segments.SV7_Obj)
				End Get
				Set(value As Dom.Segments.SV7)
					Children(8) = value
				End Set
			End Property

			Friend ReadOnly Property HI_Obj As SegmentContainer(Of Dom.Segments.HI) Implements Dom.Transactions.Transaction837.Loops.Loop2400.HI
				Get
					Return CType(Children(9), SegmentContainer(Of Dom.Segments.HI))
				End Get
			End Property

			Friend ReadOnly Property PWK_Obj As SegmentContainer(Of Dom.Segments.PWK) Implements Dom.Transactions.Transaction837.Loops.Loop2400.PWK
				Get
					Return CType(Children(10), SegmentContainer(Of Dom.Segments.PWK))
				End Get
			End Property

			Private PWKSubset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK, Dom.Segments.PWK)
			Private ReadOnly Property PWK_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK, Dom.Segments.PWK) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.PWK
				Get
					If PWKSubset_Loop2400_Obj_1 Is Nothing Then
						PWKSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK, Dom.Segments.PWK)(Children(10), 10, 25, 76)
					End If

					Return PWKSubset_Loop2400_Obj_1
				End Get
			End Property
			Private PWK_1Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK_1, Dom.Segments.PWK)
			Private Property PWK_IFace_1_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.PWK_1
				Get
					If PWK_1Subset_Loop2400_Obj_1 Is Nothing Then
						PWK_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK_1, Dom.Segments.PWK)(Children(10), 1, 25, 2668)
					End If

					If PWK_1Subset_Loop2400_Obj_1.Count > 0 Then
						Return PWK_1Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK_1)
					If PWK_1Subset_Loop2400_Obj_1 Is Nothing Then
						PWK_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK_1, Dom.Segments.PWK)(Children(10), 1, 25, 2668)
					End If

					If PWK_1Subset_Loop2400_Obj_1.Count = 0 Then
						PWK_1Subset_Loop2400_Obj_1.Add(value)
					Else
						PWK_1Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private PWKSubset_1_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.PWK, Dom.Segments.PWK)
			Private ReadOnly Property PWK_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.PWK, Dom.Segments.PWK) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.PWK
				Get
					If PWKSubset_1_Loop2400_Obj_3 Is Nothing Then
						PWKSubset_1_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.PWK, Dom.Segments.PWK)(Children(10), 10, 25, 76)
					End If

					Return PWKSubset_1_Loop2400_Obj_3
				End Get
			End Property
			Friend Property CR1_Obj As Dom.Segments.CR1_Obj
				Get
					Return CType(Children(11), Dom.Segments.CR1_Obj)
				End Get
				Set(value As Dom.Segments.CR1_Obj)
					Children(11) = value
				End Set
			End Property

			Private Property CR1_Std As Dom.Segments.CR1 Implements Dom.Transactions.Transaction837.Loops.Loop2400.CR1
				Get
					Return CType(Children(11), Dom.Segments.CR1_Obj)
				End Get
				Set(value As Dom.Segments.CR1)
					Children(11) = value
				End Set
			End Property

			Private Property CR1_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CR1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.CR1
				Get
					Return CType(Children(11), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CR1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CR1)
					Children(11) = value
				End Set
			End Property
			Friend ReadOnly Property CR2_Obj As SegmentContainer(Of Dom.Segments.CR2) Implements Dom.Transactions.Transaction837.Loops.Loop2400.CR2
				Get
					Return CType(Children(12), SegmentContainer(Of Dom.Segments.CR2))
				End Get
			End Property

			Friend Property CR3_Obj As Dom.Segments.CR3_Obj
				Get
					Return CType(Children(13), Dom.Segments.CR3_Obj)
				End Get
				Set(value As Dom.Segments.CR3_Obj)
					Children(13) = value
				End Set
			End Property

			Private Property CR3_Std As Dom.Segments.CR3 Implements Dom.Transactions.Transaction837.Loops.Loop2400.CR3
				Get
					Return CType(Children(13), Dom.Segments.CR3_Obj)
				End Get
				Set(value As Dom.Segments.CR3)
					Children(13) = value
				End Set
			End Property

			Private Property CR3_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CR3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.CR3
				Get
					Return CType(Children(13), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CR3)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CR3)
					Children(13) = value
				End Set
			End Property
			Friend ReadOnly Property CR4_Obj As SegmentContainer(Of Dom.Segments.CR4) Implements Dom.Transactions.Transaction837.Loops.Loop2400.CR4
				Get
					Return CType(Children(14), SegmentContainer(Of Dom.Segments.CR4))
				End Get
			End Property

			Friend Property CR5_Obj As Dom.Segments.CR5_Obj
				Get
					Return CType(Children(15), Dom.Segments.CR5_Obj)
				End Get
				Set(value As Dom.Segments.CR5_Obj)
					Children(15) = value
				End Set
			End Property

			Private Property CR5_Std As Dom.Segments.CR5 Implements Dom.Transactions.Transaction837.Loops.Loop2400.CR5
				Get
					Return CType(Children(15), Dom.Segments.CR5_Obj)
				End Get
				Set(value As Dom.Segments.CR5)
					Children(15) = value
				End Set
			End Property

			Friend ReadOnly Property CRC_Obj As SegmentContainer(Of Dom.Segments.CRC) Implements Dom.Transactions.Transaction837.Loops.Loop2400.CRC
				Get
					Return CType(Children(16), SegmentContainer(Of Dom.Segments.CRC))
				End Get
			End Property

			Private CRCSubset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC, Dom.Segments.CRC)
			Private ReadOnly Property CRC_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC, Dom.Segments.CRC) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.CRC
				Get
					If CRCSubset_Loop2400_Obj_1 Is Nothing Then
						CRCSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC, Dom.Segments.CRC)(Children(16), 3, 25, 184)
					End If

					Return CRCSubset_Loop2400_Obj_1
				End Get
			End Property
			Private CRC_1Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_1, Dom.Segments.CRC)
			Private Property CRC_IFace_1_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.CRC_1
				Get
					If CRC_1Subset_Loop2400_Obj_1 Is Nothing Then
						CRC_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_1, Dom.Segments.CRC)(Children(16), 1, 25, 2776)
					End If

					If CRC_1Subset_Loop2400_Obj_1.Count > 0 Then
						Return CRC_1Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_1)
					If CRC_1Subset_Loop2400_Obj_1 Is Nothing Then
						CRC_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_1, Dom.Segments.CRC)(Children(16), 1, 25, 2776)
					End If

					If CRC_1Subset_Loop2400_Obj_1.Count = 0 Then
						CRC_1Subset_Loop2400_Obj_1.Add(value)
					Else
						CRC_1Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private CRC_2Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_2, Dom.Segments.CRC)
			Private Property CRC_IFace_2_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_2 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.CRC_2
				Get
					If CRC_2Subset_Loop2400_Obj_1 Is Nothing Then
						CRC_2Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_2, Dom.Segments.CRC)(Children(16), 1, 25, 4072)
					End If

					If CRC_2Subset_Loop2400_Obj_1.Count > 0 Then
						Return CRC_2Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_2)
					If CRC_2Subset_Loop2400_Obj_1 Is Nothing Then
						CRC_2Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_2, Dom.Segments.CRC)(Children(16), 1, 25, 4072)
					End If

					If CRC_2Subset_Loop2400_Obj_1.Count = 0 Then
						CRC_2Subset_Loop2400_Obj_1.Add(value)
					Else
						CRC_2Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property DTP_Obj As SegmentContainer(Of Dom.Segments.DTP) Implements Dom.Transactions.Transaction837.Loops.Loop2400.DTP
				Get
					Return CType(Children(17), SegmentContainer(Of Dom.Segments.DTP))
				End Get
			End Property

			Private DTPSubset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP
				Get
					If DTPSubset_Loop2400_Obj_1 Is Nothing Then
						DTPSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP, Dom.Segments.DTP)(Children(17), 1, 25, 6664)
					End If

					If DTPSubset_Loop2400_Obj_1.Count > 0 Then
						Return DTPSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP)
					If DTPSubset_Loop2400_Obj_1 Is Nothing Then
						DTPSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP, Dom.Segments.DTP)(Children(17), 1, 25, 6664)
					End If

					If DTPSubset_Loop2400_Obj_1.Count = 0 Then
						DTPSubset_Loop2400_Obj_1.Add(value)
					Else
						DTPSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_1Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_1, Dom.Segments.DTP)
			Private Property DTP_IFace_1_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_1
				Get
					If DTP_1Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_1, Dom.Segments.DTP)(Children(17), 1, 25, 239944)
					End If

					If DTP_1Subset_Loop2400_Obj_1.Count > 0 Then
						Return DTP_1Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_1)
					If DTP_1Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_1, Dom.Segments.DTP)(Children(17), 1, 25, 239944)
					End If

					If DTP_1Subset_Loop2400_Obj_1.Count = 0 Then
						DTP_1Subset_Loop2400_Obj_1.Add(value)
					Else
						DTP_1Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_2Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_2, Dom.Segments.DTP)
			Private Property DTP_IFace_2_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_2 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_2
				Get
					If DTP_2Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_2Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_2, Dom.Segments.DTP)(Children(17), 1, 25, 7960)
					End If

					If DTP_2Subset_Loop2400_Obj_1.Count > 0 Then
						Return DTP_2Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_2)
					If DTP_2Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_2Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_2, Dom.Segments.DTP)(Children(17), 1, 25, 7960)
					End If

					If DTP_2Subset_Loop2400_Obj_1.Count = 0 Then
						DTP_2Subset_Loop2400_Obj_1.Add(value)
					Else
						DTP_2Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_3Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_3, Dom.Segments.DTP)
			Private Property DTP_IFace_3_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_3
				Get
					If DTP_3Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_3Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_3, Dom.Segments.DTP)(Children(17), 1, 25, 10552)
					End If

					If DTP_3Subset_Loop2400_Obj_1.Count > 0 Then
						Return DTP_3Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_3)
					If DTP_3Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_3Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_3, Dom.Segments.DTP)(Children(17), 1, 25, 10552)
					End If

					If DTP_3Subset_Loop2400_Obj_1.Count = 0 Then
						DTP_3Subset_Loop2400_Obj_1.Add(value)
					Else
						DTP_3Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_4Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_4, Dom.Segments.DTP)
			Private Property DTP_IFace_4_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_4
				Get
					If DTP_4Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_4Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_4, Dom.Segments.DTP)(Children(17), 1, 25, 11848)
					End If

					If DTP_4Subset_Loop2400_Obj_1.Count > 0 Then
						Return DTP_4Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_4)
					If DTP_4Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_4Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_4, Dom.Segments.DTP)(Children(17), 1, 25, 11848)
					End If

					If DTP_4Subset_Loop2400_Obj_1.Count = 0 Then
						DTP_4Subset_Loop2400_Obj_1.Add(value)
					Else
						DTP_4Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_5Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_5, Dom.Segments.DTP)
			Private Property DTP_IFace_5_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_5 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_5
				Get
					If DTP_5Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_5Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_5, Dom.Segments.DTP)(Children(17), 1, 25, 14440)
					End If

					If DTP_5Subset_Loop2400_Obj_1.Count > 0 Then
						Return DTP_5Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_5)
					If DTP_5Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_5Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_5, Dom.Segments.DTP)(Children(17), 1, 25, 14440)
					End If

					If DTP_5Subset_Loop2400_Obj_1.Count = 0 Then
						DTP_5Subset_Loop2400_Obj_1.Add(value)
					Else
						DTP_5Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_6Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_6, Dom.Segments.DTP)
			Private ReadOnly Property DTP_6_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_6, Dom.Segments.DTP) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_6
				Get
					If DTP_6Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_6Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_6, Dom.Segments.DTP)(Children(17), 2, 25, 15736)
					End If

					Return DTP_6Subset_Loop2400_Obj_1
				End Get
			End Property
			Private DTP_7Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_7, Dom.Segments.DTP)
			Private Property DTP_IFace_7_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_7 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_7
				Get
					If DTP_7Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_7Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_7, Dom.Segments.DTP)(Children(17), 1, 25, 18328)
					End If

					If DTP_7Subset_Loop2400_Obj_1.Count > 0 Then
						Return DTP_7Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_7)
					If DTP_7Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_7Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_7, Dom.Segments.DTP)(Children(17), 1, 25, 18328)
					End If

					If DTP_7Subset_Loop2400_Obj_1.Count = 0 Then
						DTP_7Subset_Loop2400_Obj_1.Add(value)
					Else
						DTP_7Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_8Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_8, Dom.Segments.DTP)
			Private Property DTP_IFace_8_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_8 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_8
				Get
					If DTP_8Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_8Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_8, Dom.Segments.DTP)(Children(17), 1, 25, 20920)
					End If

					If DTP_8Subset_Loop2400_Obj_1.Count > 0 Then
						Return DTP_8Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_8)
					If DTP_8Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_8Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_8, Dom.Segments.DTP)(Children(17), 1, 25, 20920)
					End If

					If DTP_8Subset_Loop2400_Obj_1.Count = 0 Then
						DTP_8Subset_Loop2400_Obj_1.Add(value)
					Else
						DTP_8Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTP_9Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_9, Dom.Segments.DTP)
			Private Property DTP_IFace_9_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_9 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.DTP_9
				Get
					If DTP_9Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_9Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_9, Dom.Segments.DTP)(Children(17), 1, 25, 24808)
					End If

					If DTP_9Subset_Loop2400_Obj_1.Count > 0 Then
						Return DTP_9Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_9)
					If DTP_9Subset_Loop2400_Obj_1 Is Nothing Then
						DTP_9Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_9, Dom.Segments.DTP)(Children(17), 1, 25, 24808)
					End If

					If DTP_9Subset_Loop2400_Obj_1.Count = 0 Then
						DTP_9Subset_Loop2400_Obj_1.Add(value)
					Else
						DTP_9Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTPSubset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_10_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.DTP
				Get
					If DTPSubset_1_Loop2400_Obj_2 Is Nothing Then
						DTPSubset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP, Dom.Segments.DTP)(Children(17), 1, 25, 6664)
					End If

					If DTPSubset_1_Loop2400_Obj_2.Count > 0 Then
						Return DTPSubset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP)
					If DTPSubset_1_Loop2400_Obj_2 Is Nothing Then
						DTPSubset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP, Dom.Segments.DTP)(Children(17), 1, 25, 6664)
					End If

					If DTPSubset_1_Loop2400_Obj_2.Count = 0 Then
						DTPSubset_1_Loop2400_Obj_2.Add(value)
					Else
						DTPSubset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTP_1Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_1, Dom.Segments.DTP)
			Private Property DTP_IFace_11_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.DTP_1
				Get
					If DTP_1Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_1Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_1, Dom.Segments.DTP)(Children(17), 1, 25, 7960)
					End If

					If DTP_1Subset_1_Loop2400_Obj_2.Count > 0 Then
						Return DTP_1Subset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_1)
					If DTP_1Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_1Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_1, Dom.Segments.DTP)(Children(17), 1, 25, 7960)
					End If

					If DTP_1Subset_1_Loop2400_Obj_2.Count = 0 Then
						DTP_1Subset_1_Loop2400_Obj_2.Add(value)
					Else
						DTP_1Subset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTP_2Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_2, Dom.Segments.DTP)
			Private Property DTP_IFace_12_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_2 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.DTP_2
				Get
					If DTP_2Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_2Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_2, Dom.Segments.DTP)(Children(17), 1, 25, 9256)
					End If

					If DTP_2Subset_1_Loop2400_Obj_2.Count > 0 Then
						Return DTP_2Subset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_2)
					If DTP_2Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_2Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_2, Dom.Segments.DTP)(Children(17), 1, 25, 9256)
					End If

					If DTP_2Subset_1_Loop2400_Obj_2.Count = 0 Then
						DTP_2Subset_1_Loop2400_Obj_2.Add(value)
					Else
						DTP_2Subset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTP_3Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_3, Dom.Segments.DTP)
			Private Property DTP_IFace_13_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.DTP_3
				Get
					If DTP_3Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_3Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_3, Dom.Segments.DTP)(Children(17), 1, 25, 10552)
					End If

					If DTP_3Subset_1_Loop2400_Obj_2.Count > 0 Then
						Return DTP_3Subset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_3)
					If DTP_3Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_3Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_3, Dom.Segments.DTP)(Children(17), 1, 25, 10552)
					End If

					If DTP_3Subset_1_Loop2400_Obj_2.Count = 0 Then
						DTP_3Subset_1_Loop2400_Obj_2.Add(value)
					Else
						DTP_3Subset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTP_4Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_4, Dom.Segments.DTP)
			Private Property DTP_IFace_14_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.DTP_4
				Get
					If DTP_4Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_4Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_4, Dom.Segments.DTP)(Children(17), 1, 25, 150520)
					End If

					If DTP_4Subset_1_Loop2400_Obj_2.Count > 0 Then
						Return DTP_4Subset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_4)
					If DTP_4Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_4Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_4, Dom.Segments.DTP)(Children(17), 1, 25, 150520)
					End If

					If DTP_4Subset_1_Loop2400_Obj_2.Count = 0 Then
						DTP_4Subset_1_Loop2400_Obj_2.Add(value)
					Else
						DTP_4Subset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTP_5Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_5, Dom.Segments.DTP)
			Private Property DTP_IFace_15_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_5 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.DTP_5
				Get
					If DTP_5Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_5Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_5, Dom.Segments.DTP)(Children(17), 1, 25, 290488)
					End If

					If DTP_5Subset_1_Loop2400_Obj_2.Count > 0 Then
						Return DTP_5Subset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_5)
					If DTP_5Subset_1_Loop2400_Obj_2 Is Nothing Then
						DTP_5Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_5, Dom.Segments.DTP)(Children(17), 1, 25, 290488)
					End If

					If DTP_5Subset_1_Loop2400_Obj_2.Count = 0 Then
						DTP_5Subset_1_Loop2400_Obj_2.Add(value)
					Else
						DTP_5Subset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTPSubset_2_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_16_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.DTP
				Get
					If DTPSubset_2_Loop2400_Obj_3 Is Nothing Then
						DTPSubset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.DTP, Dom.Segments.DTP)(Children(17), 1, 25, 6664)
					End If

					If DTPSubset_2_Loop2400_Obj_3.Count > 0 Then
						Return DTPSubset_2_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.DTP)
					If DTPSubset_2_Loop2400_Obj_3 Is Nothing Then
						DTPSubset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.DTP, Dom.Segments.DTP)(Children(17), 1, 25, 6664)
					End If

					If DTPSubset_2_Loop2400_Obj_3.Count = 0 Then
						DTPSubset_2_Loop2400_Obj_3.Add(value)
					Else
						DTPSubset_2_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property QTY_Obj As SegmentContainer(Of Dom.Segments.QTY) Implements Dom.Transactions.Transaction837.Loops.Loop2400.QTY
				Get
					Return CType(Children(18), SegmentContainer(Of Dom.Segments.QTY))
				End Get
			End Property

			Private QTYSubset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY, Dom.Segments.QTY)
			Private Property QTY_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.QTY
				Get
					If QTYSubset_Loop2400_Obj_1 Is Nothing Then
						QTYSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY, Dom.Segments.QTY)(Children(18), 1, 25, 220)
					End If

					If QTYSubset_Loop2400_Obj_1.Count > 0 Then
						Return QTYSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY)
					If QTYSubset_Loop2400_Obj_1 Is Nothing Then
						QTYSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY, Dom.Segments.QTY)(Children(18), 1, 25, 220)
					End If

					If QTYSubset_Loop2400_Obj_1.Count = 0 Then
						QTYSubset_Loop2400_Obj_1.Add(value)
					Else
						QTYSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private QTY_1Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY_1, Dom.Segments.QTY)
			Private Property QTY_IFace_1_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.QTY_1
				Get
					If QTY_1Subset_Loop2400_Obj_1 Is Nothing Then
						QTY_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY_1, Dom.Segments.QTY)(Children(18), 1, 25, 1516)
					End If

					If QTY_1Subset_Loop2400_Obj_1.Count > 0 Then
						Return QTY_1Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY_1)
					If QTY_1Subset_Loop2400_Obj_1 Is Nothing Then
						QTY_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY_1, Dom.Segments.QTY)(Children(18), 1, 25, 1516)
					End If

					If QTY_1Subset_Loop2400_Obj_1.Count = 0 Then
						QTY_1Subset_Loop2400_Obj_1.Add(value)
					Else
						QTY_1Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property MEA_Obj As SegmentContainer(Of Dom.Segments.MEA) Implements Dom.Transactions.Transaction837.Loops.Loop2400.MEA
				Get
					Return CType(Children(19), SegmentContainer(Of Dom.Segments.MEA))
				End Get
			End Property

			Private MEASubset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.MEA, Dom.Segments.MEA)
			Private ReadOnly Property MEA_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.MEA, Dom.Segments.MEA) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.MEA
				Get
					If MEASubset_Loop2400_Obj_1 Is Nothing Then
						MEASubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.MEA, Dom.Segments.MEA)(Children(19), 5, 25, 2812)
					End If

					Return MEASubset_Loop2400_Obj_1
				End Get
			End Property
			Friend Property CN1_Obj As Dom.Segments.CN1_Obj
				Get
					Return CType(Children(20), Dom.Segments.CN1_Obj)
				End Get
				Set(value As Dom.Segments.CN1_Obj)
					Children(20) = value
				End Set
			End Property

			Private Property CN1_Std As Dom.Segments.CN1 Implements Dom.Transactions.Transaction837.Loops.Loop2400.CN1
				Get
					Return CType(Children(20), Dom.Segments.CN1_Obj)
				End Get
				Set(value As Dom.Segments.CN1)
					Children(20) = value
				End Set
			End Property

			Private Property CN1_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CN1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.CN1
				Get
					Return CType(Children(20), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CN1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CN1)
					Children(20) = value
				End Set
			End Property
			Private Property CN1_IFace_1_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.CN1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.CN1
				Get
					Return CType(Children(20), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.CN1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.CN1)
					Children(20) = value
				End Set
			End Property
			Friend ReadOnly Property REF_Obj As SegmentContainer(Of Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Loops.Loop2400.REF
				Get
					Return CType(Children(21), SegmentContainer(Of Dom.Segments.REF))
				End Get
			End Property

			Private REFSubset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF, Dom.Segments.REF)
			Private Property REF_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF
				Get
					If REFSubset_Loop2400_Obj_1 Is Nothing Then
						REFSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF, Dom.Segments.REF)(Children(21), 1, 25, 256)
					End If

					If REFSubset_Loop2400_Obj_1.Count > 0 Then
						Return REFSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF)
					If REFSubset_Loop2400_Obj_1 Is Nothing Then
						REFSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF, Dom.Segments.REF)(Children(21), 1, 25, 256)
					End If

					If REFSubset_Loop2400_Obj_1.Count = 0 Then
						REFSubset_Loop2400_Obj_1.Add(value)
					Else
						REFSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_1_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF_1
				Get
					If REF_1Subset_Loop2400_Obj_1 Is Nothing Then
						REF_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_1, Dom.Segments.REF)(Children(21), 1, 25, 1552)
					End If

					If REF_1Subset_Loop2400_Obj_1.Count > 0 Then
						Return REF_1Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_1)
					If REF_1Subset_Loop2400_Obj_1 Is Nothing Then
						REF_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_1, Dom.Segments.REF)(Children(21), 1, 25, 1552)
					End If

					If REF_1Subset_Loop2400_Obj_1.Count = 0 Then
						REF_1Subset_Loop2400_Obj_1.Add(value)
					Else
						REF_1Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_2Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_2, Dom.Segments.REF)
			Private ReadOnly Property REF_2_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_2, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF_2
				Get
					If REF_2Subset_Loop2400_Obj_1 Is Nothing Then
						REF_2Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_2, Dom.Segments.REF)(Children(21), 5, 25, 4144)
					End If

					Return REF_2Subset_Loop2400_Obj_1
				End Get
			End Property
			Private REF_3Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_3, Dom.Segments.REF)
			Private Property REF_IFace_3_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF_3
				Get
					If REF_3Subset_Loop2400_Obj_1 Is Nothing Then
						REF_3Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_3, Dom.Segments.REF)(Children(21), 1, 25, 13216)
					End If

					If REF_3Subset_Loop2400_Obj_1.Count > 0 Then
						Return REF_3Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_3)
					If REF_3Subset_Loop2400_Obj_1 Is Nothing Then
						REF_3Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_3, Dom.Segments.REF)(Children(21), 1, 25, 13216)
					End If

					If REF_3Subset_Loop2400_Obj_1.Count = 0 Then
						REF_3Subset_Loop2400_Obj_1.Add(value)
					Else
						REF_3Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_4Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_4, Dom.Segments.REF)
			Private Property REF_IFace_4_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF_4
				Get
					If REF_4Subset_Loop2400_Obj_1 Is Nothing Then
						REF_4Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_4, Dom.Segments.REF)(Children(21), 1, 25, 14512)
					End If

					If REF_4Subset_Loop2400_Obj_1.Count > 0 Then
						Return REF_4Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_4)
					If REF_4Subset_Loop2400_Obj_1 Is Nothing Then
						REF_4Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_4, Dom.Segments.REF)(Children(21), 1, 25, 14512)
					End If

					If REF_4Subset_Loop2400_Obj_1.Count = 0 Then
						REF_4Subset_Loop2400_Obj_1.Add(value)
					Else
						REF_4Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_5Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_5, Dom.Segments.REF)
			Private Property REF_IFace_5_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_5 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF_5
				Get
					If REF_5Subset_Loop2400_Obj_1 Is Nothing Then
						REF_5Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_5, Dom.Segments.REF)(Children(21), 1, 25, 15808)
					End If

					If REF_5Subset_Loop2400_Obj_1.Count > 0 Then
						Return REF_5Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_5)
					If REF_5Subset_Loop2400_Obj_1 Is Nothing Then
						REF_5Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_5, Dom.Segments.REF)(Children(21), 1, 25, 15808)
					End If

					If REF_5Subset_Loop2400_Obj_1.Count = 0 Then
						REF_5Subset_Loop2400_Obj_1.Add(value)
					Else
						REF_5Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_6Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_6, Dom.Segments.REF)
			Private Property REF_IFace_6_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_6 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF_6
				Get
					If REF_6Subset_Loop2400_Obj_1 Is Nothing Then
						REF_6Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_6, Dom.Segments.REF)(Children(21), 1, 25, 17104)
					End If

					If REF_6Subset_Loop2400_Obj_1.Count > 0 Then
						Return REF_6Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_6)
					If REF_6Subset_Loop2400_Obj_1 Is Nothing Then
						REF_6Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_6, Dom.Segments.REF)(Children(21), 1, 25, 17104)
					End If

					If REF_6Subset_Loop2400_Obj_1.Count = 0 Then
						REF_6Subset_Loop2400_Obj_1.Add(value)
					Else
						REF_6Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_7Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_7, Dom.Segments.REF)
			Private Property REF_IFace_7_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_7 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF_7
				Get
					If REF_7Subset_Loop2400_Obj_1 Is Nothing Then
						REF_7Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_7, Dom.Segments.REF)(Children(21), 1, 25, 19696)
					End If

					If REF_7Subset_Loop2400_Obj_1.Count > 0 Then
						Return REF_7Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_7)
					If REF_7Subset_Loop2400_Obj_1 Is Nothing Then
						REF_7Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_7, Dom.Segments.REF)(Children(21), 1, 25, 19696)
					End If

					If REF_7Subset_Loop2400_Obj_1.Count = 0 Then
						REF_7Subset_Loop2400_Obj_1.Add(value)
					Else
						REF_7Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private REF_8Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_8, Dom.Segments.REF)
			Private ReadOnly Property REF_8_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_8, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.REF_8
				Get
					If REF_8Subset_Loop2400_Obj_1 Is Nothing Then
						REF_8Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_8, Dom.Segments.REF)(Children(21), 5, 25, 20992)
					End If

					Return REF_8Subset_Loop2400_Obj_1
				End Get
			End Property
			Private REFSubset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.REF
				Get
					If REFSubset_1_Loop2400_Obj_2 Is Nothing Then
						REFSubset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF, Dom.Segments.REF)(Children(21), 5, 25, 256)
					End If

					Return REFSubset_1_Loop2400_Obj_2
				End Get
			End Property
			Private REF_1Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_1, Dom.Segments.REF)
			Private ReadOnly Property REF_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_1, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.REF_1
				Get
					If REF_1Subset_1_Loop2400_Obj_2 Is Nothing Then
						REF_1Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_1, Dom.Segments.REF)(Children(21), 5, 25, 1552)
					End If

					Return REF_1Subset_1_Loop2400_Obj_2
				End Get
			End Property
			Private REF_2Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_2, Dom.Segments.REF)
			Private Property REF_IFace_11_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_2 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.REF_2
				Get
					If REF_2Subset_1_Loop2400_Obj_2 Is Nothing Then
						REF_2Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_2, Dom.Segments.REF)(Children(21), 1, 25, 2848)
					End If

					If REF_2Subset_1_Loop2400_Obj_2.Count > 0 Then
						Return REF_2Subset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_2)
					If REF_2Subset_1_Loop2400_Obj_2 Is Nothing Then
						REF_2Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_2, Dom.Segments.REF)(Children(21), 1, 25, 2848)
					End If

					If REF_2Subset_1_Loop2400_Obj_2.Count = 0 Then
						REF_2Subset_1_Loop2400_Obj_2.Add(value)
					Else
						REF_2Subset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_3Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_3, Dom.Segments.REF)
			Private Property REF_IFace_12_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.REF_3
				Get
					If REF_3Subset_1_Loop2400_Obj_2 Is Nothing Then
						REF_3Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_3, Dom.Segments.REF)(Children(21), 1, 25, 236128)
					End If

					If REF_3Subset_1_Loop2400_Obj_2.Count > 0 Then
						Return REF_3Subset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_3)
					If REF_3Subset_1_Loop2400_Obj_2 Is Nothing Then
						REF_3Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_3, Dom.Segments.REF)(Children(21), 1, 25, 236128)
					End If

					If REF_3Subset_1_Loop2400_Obj_2.Count = 0 Then
						REF_3Subset_1_Loop2400_Obj_2.Add(value)
					Else
						REF_3Subset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_4Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_4, Dom.Segments.REF)
			Private Property REF_IFace_13_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.REF_4
				Get
					If REF_4Subset_1_Loop2400_Obj_2 Is Nothing Then
						REF_4Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_4, Dom.Segments.REF)(Children(21), 1, 25, 4144)
					End If

					If REF_4Subset_1_Loop2400_Obj_2.Count > 0 Then
						Return REF_4Subset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_4)
					If REF_4Subset_1_Loop2400_Obj_2 Is Nothing Then
						REF_4Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_4, Dom.Segments.REF)(Children(21), 1, 25, 4144)
					End If

					If REF_4Subset_1_Loop2400_Obj_2.Count = 0 Then
						REF_4Subset_1_Loop2400_Obj_2.Add(value)
					Else
						REF_4Subset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private REF_5Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_5, Dom.Segments.REF)
			Private ReadOnly Property REF_5_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_5, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.REF_5
				Get
					If REF_5Subset_1_Loop2400_Obj_2 Is Nothing Then
						REF_5Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_5, Dom.Segments.REF)(Children(21), 5, 25, 237424)
					End If

					Return REF_5Subset_1_Loop2400_Obj_2
				End Get
			End Property
			Private REFSubset_2_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF, Dom.Segments.REF)
			Private Property REF_IFace_15_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.REF
				Get
					If REFSubset_2_Loop2400_Obj_3 Is Nothing Then
						REFSubset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF, Dom.Segments.REF)(Children(21), 1, 25, 256)
					End If

					If REFSubset_2_Loop2400_Obj_3.Count > 0 Then
						Return REFSubset_2_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF)
					If REFSubset_2_Loop2400_Obj_3 Is Nothing Then
						REFSubset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF, Dom.Segments.REF)(Children(21), 1, 25, 256)
					End If

					If REFSubset_2_Loop2400_Obj_3.Count = 0 Then
						REFSubset_2_Loop2400_Obj_3.Add(value)
					Else
						REFSubset_2_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_1Subset_2_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_1, Dom.Segments.REF)
			Private Property REF_IFace_16_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.REF_1
				Get
					If REF_1Subset_2_Loop2400_Obj_3 Is Nothing Then
						REF_1Subset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_1, Dom.Segments.REF)(Children(21), 1, 25, 233536)
					End If

					If REF_1Subset_2_Loop2400_Obj_3.Count > 0 Then
						Return REF_1Subset_2_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_1)
					If REF_1Subset_2_Loop2400_Obj_3 Is Nothing Then
						REF_1Subset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_1, Dom.Segments.REF)(Children(21), 1, 25, 233536)
					End If

					If REF_1Subset_2_Loop2400_Obj_3.Count = 0 Then
						REF_1Subset_2_Loop2400_Obj_3.Add(value)
					Else
						REF_1Subset_2_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Private REF_2Subset_2_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_2, Dom.Segments.REF)
			Private Property REF_IFace_17_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_2 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.REF_2
				Get
					If REF_2Subset_2_Loop2400_Obj_3 Is Nothing Then
						REF_2Subset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_2, Dom.Segments.REF)(Children(21), 1, 25, 1552)
					End If

					If REF_2Subset_2_Loop2400_Obj_3.Count > 0 Then
						Return REF_2Subset_2_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_2)
					If REF_2Subset_2_Loop2400_Obj_3 Is Nothing Then
						REF_2Subset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_2, Dom.Segments.REF)(Children(21), 1, 25, 1552)
					End If

					If REF_2Subset_2_Loop2400_Obj_3.Count = 0 Then
						REF_2Subset_2_Loop2400_Obj_3.Add(value)
					Else
						REF_2Subset_2_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property AMT_Obj As SegmentContainer(Of Dom.Segments.AMT) Implements Dom.Transactions.Transaction837.Loops.Loop2400.AMT
				Get
					Return CType(Children(22), SegmentContainer(Of Dom.Segments.AMT))
				End Get
			End Property

			Private AMTSubset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.AMT
				Get
					If AMTSubset_Loop2400_Obj_1 Is Nothing Then
						AMTSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT, Dom.Segments.AMT)(Children(22), 1, 25, 1588)
					End If

					If AMTSubset_Loop2400_Obj_1.Count > 0 Then
						Return AMTSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT)
					If AMTSubset_Loop2400_Obj_1 Is Nothing Then
						AMTSubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT, Dom.Segments.AMT)(Children(22), 1, 25, 1588)
					End If

					If AMTSubset_Loop2400_Obj_1.Count = 0 Then
						AMTSubset_Loop2400_Obj_1.Add(value)
					Else
						AMTSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private AMT_1Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT_1, Dom.Segments.AMT)
			Private Property AMT_IFace_1_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.AMT_1
				Get
					If AMT_1Subset_Loop2400_Obj_1 Is Nothing Then
						AMT_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT_1, Dom.Segments.AMT)(Children(22), 1, 25, 4180)
					End If

					If AMT_1Subset_Loop2400_Obj_1.Count > 0 Then
						Return AMT_1Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT_1)
					If AMT_1Subset_Loop2400_Obj_1 Is Nothing Then
						AMT_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT_1, Dom.Segments.AMT)(Children(22), 1, 25, 4180)
					End If

					If AMT_1Subset_Loop2400_Obj_1.Count = 0 Then
						AMT_1Subset_Loop2400_Obj_1.Add(value)
					Else
						AMT_1Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private AMTSubset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_2_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.AMT
				Get
					If AMTSubset_1_Loop2400_Obj_2 Is Nothing Then
						AMTSubset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.AMT, Dom.Segments.AMT)(Children(22), 1, 25, 2884)
					End If

					If AMTSubset_1_Loop2400_Obj_2.Count > 0 Then
						Return AMTSubset_1_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.AMT)
					If AMTSubset_1_Loop2400_Obj_2 Is Nothing Then
						AMTSubset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.AMT, Dom.Segments.AMT)(Children(22), 1, 25, 2884)
					End If

					If AMTSubset_1_Loop2400_Obj_2.Count = 0 Then
						AMTSubset_1_Loop2400_Obj_2.Add(value)
					Else
						AMTSubset_1_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private AMTSubset_2_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_3_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.AMT
				Get
					If AMTSubset_2_Loop2400_Obj_3 Is Nothing Then
						AMTSubset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT, Dom.Segments.AMT)(Children(22), 1, 25, 292)
					End If

					If AMTSubset_2_Loop2400_Obj_3.Count > 0 Then
						Return AMTSubset_2_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT)
					If AMTSubset_2_Loop2400_Obj_3 Is Nothing Then
						AMTSubset_2_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT, Dom.Segments.AMT)(Children(22), 1, 25, 292)
					End If

					If AMTSubset_2_Loop2400_Obj_3.Count = 0 Then
						AMTSubset_2_Loop2400_Obj_3.Add(value)
					Else
						AMTSubset_2_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Private AMT_1Subset_1_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT_1, Dom.Segments.AMT)
			Private Property AMT_IFace_4_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT_1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.AMT_1
				Get
					If AMT_1Subset_1_Loop2400_Obj_3 Is Nothing Then
						AMT_1Subset_1_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT_1, Dom.Segments.AMT)(Children(22), 1, 25, 1588)
					End If

					If AMT_1Subset_1_Loop2400_Obj_3.Count > 0 Then
						Return AMT_1Subset_1_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT_1)
					If AMT_1Subset_1_Loop2400_Obj_3 Is Nothing Then
						AMT_1Subset_1_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT_1, Dom.Segments.AMT)(Children(22), 1, 25, 1588)
					End If

					If AMT_1Subset_1_Loop2400_Obj_3.Count = 0 Then
						AMT_1Subset_1_Loop2400_Obj_3.Add(value)
					Else
						AMT_1Subset_1_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property K3_Obj As SegmentContainer(Of Dom.Segments.K3) Implements Dom.Transactions.Transaction837.Loops.Loop2400.K3
				Get
					Return CType(Children(23), SegmentContainer(Of Dom.Segments.K3))
				End Get
			End Property

			Private K3Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.K3, Dom.Segments.K3)
			Private ReadOnly Property K3_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.K3, Dom.Segments.K3) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.K3
				Get
					If K3Subset_Loop2400_Obj_1 Is Nothing Then
						K3Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.K3, Dom.Segments.K3)(Children(23), 10, 25, 6772)
					End If

					Return K3Subset_Loop2400_Obj_1
				End Get
			End Property
			Private K3Subset_1_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.K3, Dom.Segments.K3)
			Private ReadOnly Property K3_Loop2400_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.K3, Dom.Segments.K3) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.K3
				Get
					If K3Subset_1_Loop2400_Obj_2 Is Nothing Then
						K3Subset_1_Loop2400_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.K3, Dom.Segments.K3)(Children(23), 10, 25, 4180)
					End If

					Return K3Subset_1_Loop2400_Obj_2
				End Get
			End Property
			Friend ReadOnly Property NTE_Obj As SegmentContainer(Of Dom.Segments.NTE) Implements Dom.Transactions.Transaction837.Loops.Loop2400.NTE
				Get
					Return CType(Children(24), SegmentContainer(Of Dom.Segments.NTE))
				End Get
			End Property

			Private NTESubset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE, Dom.Segments.NTE)
			Private Property NTE_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.NTE
				Get
					If NTESubset_Loop2400_Obj_1 Is Nothing Then
						NTESubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE, Dom.Segments.NTE)(Children(24), 1, 25, 8068)
					End If

					If NTESubset_Loop2400_Obj_1.Count > 0 Then
						Return NTESubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE)
					If NTESubset_Loop2400_Obj_1 Is Nothing Then
						NTESubset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE, Dom.Segments.NTE)(Children(24), 1, 25, 8068)
					End If

					If NTESubset_Loop2400_Obj_1.Count = 0 Then
						NTESubset_Loop2400_Obj_1.Add(value)
					Else
						NTESubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private NTE_1Subset_Loop2400_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE_1, Dom.Segments.NTE)
			Private Property NTE_IFace_1_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE_1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.NTE_1
				Get
					If NTE_1Subset_Loop2400_Obj_1 Is Nothing Then
						NTE_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE_1, Dom.Segments.NTE)(Children(24), 1, 25, 241348)
					End If

					If NTE_1Subset_Loop2400_Obj_1.Count > 0 Then
						Return NTE_1Subset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE_1)
					If NTE_1Subset_Loop2400_Obj_1 Is Nothing Then
						NTE_1Subset_Loop2400_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE_1, Dom.Segments.NTE)(Children(24), 1, 25, 241348)
					End If

					If NTE_1Subset_Loop2400_Obj_1.Count = 0 Then
						NTE_1Subset_Loop2400_Obj_1.Add(value)
					Else
						NTE_1Subset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private NTESubset_1_Loop2400_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.NTE, Dom.Segments.NTE)
			Private Property NTE_IFace_2_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.NTE Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.NTE
				Get
					If NTESubset_1_Loop2400_Obj_3 Is Nothing Then
						NTESubset_1_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.NTE, Dom.Segments.NTE)(Children(24), 1, 25, 6772)
					End If

					If NTESubset_1_Loop2400_Obj_3.Count > 0 Then
						Return NTESubset_1_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.NTE)
					If NTESubset_1_Loop2400_Obj_3 Is Nothing Then
						NTESubset_1_Loop2400_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.NTE, Dom.Segments.NTE)(Children(24), 1, 25, 6772)
					End If

					If NTESubset_1_Loop2400_Obj_3.Count = 0 Then
						NTESubset_1_Loop2400_Obj_3.Add(value)
					Else
						NTESubset_1_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend Property PS1_Obj As Dom.Segments.PS1_Obj
				Get
					Return CType(Children(25), Dom.Segments.PS1_Obj)
				End Get
				Set(value As Dom.Segments.PS1_Obj)
					Children(25) = value
				End Set
			End Property

			Private Property PS1_Std As Dom.Segments.PS1 Implements Dom.Transactions.Transaction837.Loops.Loop2400.PS1
				Get
					Return CType(Children(25), Dom.Segments.PS1_Obj)
				End Get
				Set(value As Dom.Segments.PS1)
					Children(25) = value
				End Set
			End Property

			Private Property PS1_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PS1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.PS1
				Get
					Return CType(Children(25), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PS1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PS1)
					Children(25) = value
				End Set
			End Property
			Friend ReadOnly Property IMM_Obj As SegmentContainer(Of Dom.Segments.IMM) Implements Dom.Transactions.Transaction837.Loops.Loop2400.IMM
				Get
					Return CType(Children(26), SegmentContainer(Of Dom.Segments.IMM))
				End Get
			End Property

			Friend Property HSD_Obj As Dom.Segments.HSD_Obj
				Get
					Return CType(Children(27), Dom.Segments.HSD_Obj)
				End Get
				Set(value As Dom.Segments.HSD_Obj)
					Children(27) = value
				End Set
			End Property

			Private Property HSD_Std As Dom.Segments.HSD Implements Dom.Transactions.Transaction837.Loops.Loop2400.HSD
				Get
					Return CType(Children(27), Dom.Segments.HSD_Obj)
				End Get
				Set(value As Dom.Segments.HSD)
					Children(27) = value
				End Set
			End Property

			Friend Property HCP_Obj As Dom.Segments.HCP_Obj
				Get
					Return CType(Children(28), Dom.Segments.HCP_Obj)
				End Get
				Set(value As Dom.Segments.HCP_Obj)
					Children(28) = value
				End Set
			End Property

			Private Property HCP_Std As Dom.Segments.HCP Implements Dom.Transactions.Transaction837.Loops.Loop2400.HCP
				Get
					Return CType(Children(28), Dom.Segments.HCP_Obj)
				End Get
				Set(value As Dom.Segments.HCP)
					Children(28) = value
				End Set
			End Property

			Private Property HCP_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.HCP Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.HCP
				Get
					Return CType(Children(28), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.HCP)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.HCP)
					Children(28) = value
				End Set
			End Property
			Private Property HCP_IFace_1_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.HCP Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.HCP
				Get
					Return CType(Children(28), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.HCP)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.HCP)
					Children(28) = value
				End Set
			End Property
			Private Property HCP_IFace_2_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.HCP Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.HCP
				Get
					Return CType(Children(28), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.HCP)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.HCP)
					Children(28) = value
				End Set
			End Property
			Friend ReadOnly Property Loop2410_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2410) Implements Dom.Transactions.Transaction837.Loops.Loop2400.Loop2410
				Get
					Return CType(Children(29), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2410))
				End Get
			End Property

			Friend ReadOnly Property Loop2420_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2420) Implements Dom.Transactions.Transaction837.Loops.Loop2400.Loop2420
				Get
					Return CType(Children(30), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2420))
				End Get
			End Property

			Private Loop2420ASubset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420A_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2420A
				Get
					If Loop2420ASubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420ASubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 25, 5)
					End If

					If Loop2420ASubset_Loop2400_Obj_1.Count > 0 Then
						Return Loop2420ASubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A)
					If Loop2420ASubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420ASubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 25, 5)
					End If

					If Loop2420ASubset_Loop2400_Obj_1.Count = 0 Then
						Loop2420ASubset_Loop2400_Obj_1.Add(value)
					Else
						Loop2420ASubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2420BSubset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420B_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2420B
				Get
					If Loop2420BSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420BSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 26, 5)
					End If

					If Loop2420BSubset_Loop2400_Obj_1.Count > 0 Then
						Return Loop2420BSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B)
					If Loop2420BSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420BSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 26, 5)
					End If

					If Loop2420BSubset_Loop2400_Obj_1.Count = 0 Then
						Loop2420BSubset_Loop2400_Obj_1.Add(value)
					Else
						Loop2420BSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2420CSubset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420C_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2420C
				Get
					If Loop2420CSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420CSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 27, 5)
					End If

					If Loop2420CSubset_Loop2400_Obj_1.Count > 0 Then
						Return Loop2420CSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C)
					If Loop2420CSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420CSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 27, 5)
					End If

					If Loop2420CSubset_Loop2400_Obj_1.Count = 0 Then
						Loop2420CSubset_Loop2400_Obj_1.Add(value)
					Else
						Loop2420CSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2420DSubset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420D_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2420D
				Get
					If Loop2420DSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420DSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 5)
					End If

					If Loop2420DSubset_Loop2400_Obj_1.Count > 0 Then
						Return Loop2420DSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D)
					If Loop2420DSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420DSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 5)
					End If

					If Loop2420DSubset_Loop2400_Obj_1.Count = 0 Then
						Loop2420DSubset_Loop2400_Obj_1.Add(value)
					Else
						Loop2420DSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2420ESubset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420E_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2420E
				Get
					If Loop2420ESubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420ESubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 29, 5)
					End If

					If Loop2420ESubset_Loop2400_Obj_1.Count > 0 Then
						Return Loop2420ESubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E)
					If Loop2420ESubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420ESubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 29, 5)
					End If

					If Loop2420ESubset_Loop2400_Obj_1.Count = 0 Then
						Loop2420ESubset_Loop2400_Obj_1.Add(value)
					Else
						Loop2420ESubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2420FSubset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420F, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private ReadOnly Property Loop2420F_Obj_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420F, Dom.Transactions.Transaction837.Loops.Loop2420) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2420F
				Get
					If Loop2420FSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420FSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420F, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 2, 30, 5)
					End If

					Return Loop2420FSubset_Loop2400_Obj_1
				End Get
			End Property
			Private Loop2420GSubset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420G_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2420G
				Get
					If Loop2420GSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420GSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 31, 1409)
					End If

					If Loop2420GSubset_Loop2400_Obj_1.Count > 0 Then
						Return Loop2420GSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G)
					If Loop2420GSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420GSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 31, 1409)
					End If

					If Loop2420GSubset_Loop2400_Obj_1.Count = 0 Then
						Loop2420GSubset_Loop2400_Obj_1.Add(value)
					Else
						Loop2420GSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2420HSubset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420H_IFace_Loop2400_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2420H
				Get
					If Loop2420HSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420HSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 31, 10481)
					End If

					If Loop2420HSubset_Loop2400_Obj_1.Count > 0 Then
						Return Loop2420HSubset_Loop2400_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H)
					If Loop2420HSubset_Loop2400_Obj_1 Is Nothing Then
						Loop2420HSubset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 31, 10481)
					End If

					If Loop2420HSubset_Loop2400_Obj_1.Count = 0 Then
						Loop2420HSubset_Loop2400_Obj_1.Add(value)
					Else
						Loop2420HSubset_Loop2400_Obj_1(0) = value
					End If
				End Set
			End Property
			Private Loop2420ASubset_Loop2400_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420A_IFace_1_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.Loop2420A
				Get
					If Loop2420ASubset_Loop2400_Obj_2 Is Nothing Then
						Loop2420ASubset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 25, 5)
					End If

					If Loop2420ASubset_Loop2400_Obj_2.Count > 0 Then
						Return Loop2420ASubset_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A)
					If Loop2420ASubset_Loop2400_Obj_2 Is Nothing Then
						Loop2420ASubset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 25, 5)
					End If

					If Loop2420ASubset_Loop2400_Obj_2.Count = 0 Then
						Loop2420ASubset_Loop2400_Obj_2.Add(value)
					Else
						Loop2420ASubset_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2420BSubset_Loop2400_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420B_IFace_1_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.Loop2420B
				Get
					If Loop2420BSubset_Loop2400_Obj_2 Is Nothing Then
						Loop2420BSubset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 5)
					End If

					If Loop2420BSubset_Loop2400_Obj_2.Count > 0 Then
						Return Loop2420BSubset_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B)
					If Loop2420BSubset_Loop2400_Obj_2 Is Nothing Then
						Loop2420BSubset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 5)
					End If

					If Loop2420BSubset_Loop2400_Obj_2.Count = 0 Then
						Loop2420BSubset_Loop2400_Obj_2.Add(value)
					Else
						Loop2420BSubset_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2420CSubset_Loop2400_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420C_IFace_1_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.Loop2420C
				Get
					If Loop2420CSubset_Loop2400_Obj_2 Is Nothing Then
						Loop2420CSubset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 185)
					End If

					If Loop2420CSubset_Loop2400_Obj_2.Count > 0 Then
						Return Loop2420CSubset_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C)
					If Loop2420CSubset_Loop2400_Obj_2 Is Nothing Then
						Loop2420CSubset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 185)
					End If

					If Loop2420CSubset_Loop2400_Obj_2.Count = 0 Then
						Loop2420CSubset_Loop2400_Obj_2.Add(value)
					Else
						Loop2420CSubset_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2420DSubset_Loop2400_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420D_IFace_1_Loop2400_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.Loop2420D
				Get
					If Loop2420DSubset_Loop2400_Obj_2 Is Nothing Then
						Loop2420DSubset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 257)
					End If

					If Loop2420DSubset_Loop2400_Obj_2.Count > 0 Then
						Return Loop2420DSubset_Loop2400_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D)
					If Loop2420DSubset_Loop2400_Obj_2 Is Nothing Then
						Loop2420DSubset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 257)
					End If

					If Loop2420DSubset_Loop2400_Obj_2.Count = 0 Then
						Loop2420DSubset_Loop2400_Obj_2.Add(value)
					Else
						Loop2420DSubset_Loop2400_Obj_2(0) = value
					End If
				End Set
			End Property
			Private Loop2420ASubset_Loop2400_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420A_IFace_2_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.Loop2420A
				Get
					If Loop2420ASubset_Loop2400_Obj_3 Is Nothing Then
						Loop2420ASubset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 26, 5)
					End If

					If Loop2420ASubset_Loop2400_Obj_3.Count > 0 Then
						Return Loop2420ASubset_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A)
					If Loop2420ASubset_Loop2400_Obj_3 Is Nothing Then
						Loop2420ASubset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 26, 5)
					End If

					If Loop2420ASubset_Loop2400_Obj_3.Count = 0 Then
						Loop2420ASubset_Loop2400_Obj_3.Add(value)
					Else
						Loop2420ASubset_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2420BSubset_Loop2400_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420B_IFace_2_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.Loop2420B
				Get
					If Loop2420BSubset_Loop2400_Obj_3 Is Nothing Then
						Loop2420BSubset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 27, 5)
					End If

					If Loop2420BSubset_Loop2400_Obj_3.Count > 0 Then
						Return Loop2420BSubset_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B)
					If Loop2420BSubset_Loop2400_Obj_3 Is Nothing Then
						Loop2420BSubset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 27, 5)
					End If

					If Loop2420BSubset_Loop2400_Obj_3.Count = 0 Then
						Loop2420BSubset_Loop2400_Obj_3.Add(value)
					Else
						Loop2420BSubset_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2420CSubset_Loop2400_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420C_IFace_2_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.Loop2420C
				Get
					If Loop2420CSubset_Loop2400_Obj_3 Is Nothing Then
						Loop2420CSubset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 5)
					End If

					If Loop2420CSubset_Loop2400_Obj_3.Count > 0 Then
						Return Loop2420CSubset_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C)
					If Loop2420CSubset_Loop2400_Obj_3 Is Nothing Then
						Loop2420CSubset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 5)
					End If

					If Loop2420CSubset_Loop2400_Obj_3.Count = 0 Then
						Loop2420CSubset_Loop2400_Obj_3.Add(value)
					Else
						Loop2420CSubset_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Private Loop2420DSubset_Loop2400_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)
			Private Property Loop2420D_IFace_2_Loop2400_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.Loop2420D
				Get
					If Loop2420DSubset_Loop2400_Obj_3 Is Nothing Then
						Loop2420DSubset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 113)
					End If

					If Loop2420DSubset_Loop2400_Obj_3.Count > 0 Then
						Return Loop2420DSubset_Loop2400_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D)
					If Loop2420DSubset_Loop2400_Obj_3 Is Nothing Then
						Loop2420DSubset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D, Dom.Transactions.Transaction837.Loops.Loop2420)(Children(30), 1, 28, 113)
					End If

					If Loop2420DSubset_Loop2400_Obj_3.Count = 0 Then
						Loop2420DSubset_Loop2400_Obj_3.Add(value)
					Else
						Loop2420DSubset_Loop2400_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property Loop2430_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2430) Implements Dom.Transactions.Transaction837.Loops.Loop2400.Loop2430
				Get
					Return CType(Children(31), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2430))
				End Get
			End Property

			Private Loop2430Subset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)
			Private ReadOnly Property Loop2430_Obj_1_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2430
				Get
					If Loop2430Subset_Loop2400_Obj_1 Is Nothing Then
						Loop2430Subset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)(Children(31), 15, 32, 149)
					End If

					Return Loop2430Subset_Loop2400_Obj_1
				End Get
			End Property
			Private Loop2430Subset_Loop2400_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)
			Private ReadOnly Property Loop2430_Obj_2_Loop2400_Obj_2 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400.Loop2430
				Get
					If Loop2430Subset_Loop2400_Obj_2 Is Nothing Then
						Loop2430Subset_Loop2400_Obj_2 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)(Children(31), 15, 32, 149)
					End If

					Return Loop2430Subset_Loop2400_Obj_2
				End Get
			End Property
			Private Loop2430Subset_Loop2400_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)
			Private ReadOnly Property Loop2430_Obj_3_Loop2400_Obj_3 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400.Loop2430
				Get
					If Loop2430Subset_Loop2400_Obj_3 Is Nothing Then
						Loop2430Subset_Loop2400_Obj_3 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)(Children(31), 15, 32, 149)
					End If

					Return Loop2430Subset_Loop2400_Obj_3
				End Get
			End Property
			Friend ReadOnly Property Loop2440_Obj As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2440) Implements Dom.Transactions.Transaction837.Loops.Loop2400.Loop2440
				Get
					Return CType(Children(32), LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2440))
				End Get
			End Property

			Private Loop2440Subset_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2440, Dom.Transactions.Transaction837.Loops.Loop2440)
			Private ReadOnly Property Loop2440_Obj_1_Loop2400_Obj_1 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2440, Dom.Transactions.Transaction837.Loops.Loop2440) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400.Loop2440
				Get
					If Loop2440Subset_Loop2400_Obj_1 Is Nothing Then
						Loop2440Subset_Loop2400_Obj_1 = New LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2440, Dom.Transactions.Transaction837.Loops.Loop2440)(Children(32), 0, 34, 1481)
					End If

					Return Loop2440Subset_Loop2400_Obj_1
				End Get
			End Property

		End Class
		Partial Friend Class Loop2410_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2410
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.LIN_Obj),
													CType(Nothing, Dom.Segments.CTP_Obj),
													CType(Nothing, Dom.Segments.REF_Obj)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "LIN", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "CTP", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "REF", ReadAction.PopulateSegment, 3, False),
									New ReaderState(2, "REF", ReadAction.PopulateSegment, 3, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "LIN", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.LIN_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					LIN_Obj = Seg
				ElseIf String.Compare(segmentName, "CTP", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CTP_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CTP_Obj = Seg
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.REF_Obj)
					If MyBase.CompareKey(S2.REF01, ";VY;XZ;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2410", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 8104
					ElseIf MyBase.CompareKey(S2.REF01, ";VY;XZ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2410", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 8104
					End If
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property LIN_Obj As Dom.Segments.LIN_Obj
				Get
					Return CType(Children(0), Dom.Segments.LIN_Obj)
				End Get
				Set(value As Dom.Segments.LIN_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property LIN_Std As Dom.Segments.LIN Implements Dom.Transactions.Transaction837.Loops.Loop2410.LIN
				Get
					Return CType(Children(0), Dom.Segments.LIN_Obj)
				End Get
				Set(value As Dom.Segments.LIN)
					Children(0) = value
				End Set
			End Property

			Friend Property CTP_Obj As Dom.Segments.CTP_Obj
				Get
					Return CType(Children(1), Dom.Segments.CTP_Obj)
				End Get
				Set(value As Dom.Segments.CTP_Obj)
					Children(1) = value
				End Set
			End Property

			Private Property CTP_Std As Dom.Segments.CTP Implements Dom.Transactions.Transaction837.Loops.Loop2410.CTP
				Get
					Return CType(Children(1), Dom.Segments.CTP_Obj)
				End Get
				Set(value As Dom.Segments.CTP)
					Children(1) = value
				End Set
			End Property

			Friend Property REF_Obj As Dom.Segments.REF_Obj
				Get
					Return CType(Children(2), Dom.Segments.REF_Obj)
				End Get
				Set(value As Dom.Segments.REF_Obj)
					Children(2) = value
				End Set
			End Property

			Private Property REF_Std As Dom.Segments.REF Implements Dom.Transactions.Transaction837.Loops.Loop2410.REF
				Get
					Return CType(Children(2), Dom.Segments.REF_Obj)
				End Get
				Set(value As Dom.Segments.REF)
					Children(2) = value
				End Set
			End Property


		End Class
		Partial Friend Class Loop2420_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2420,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420F,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.NM1_Obj),
													CType(Nothing, Dom.Segments.PRV_Obj),
													New SegmentContainer(Of Dom.Segments.N2)(2, 2, 5100),
													New SegmentContainer(Of Dom.Segments.N3)(2, 2, 5140),
													CType(Nothing, Dom.Segments.N4_Obj),
													New SegmentContainer(Of Dom.Segments.REF)(20, 2, 5250),
													New SegmentContainer(Of Dom.Segments.PER)(2, 2, 5300)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "NM1", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "PRV", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "N2", ReadAction.PopulateSegment, 3, False),
									New ReaderState(2, "N2", ReadAction.PopulateSegment, 3, False),
									New ReaderState(3, "N2", ReadAction.PopulateSegment, 3, False),
									New ReaderState(1, "N3", ReadAction.PopulateSegment, 5, False),
									New ReaderState(2, "N3", ReadAction.PopulateSegment, 5, False),
									New ReaderState(3, "N3", ReadAction.PopulateSegment, 5, False),
									New ReaderState(5, "N3", ReadAction.PopulateSegment, 5, False),
									New ReaderState(1, "N4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(2, "N4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(3, "N4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(5, "N4", ReadAction.PopulateSegment, 7, False),
									New ReaderState(1, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(2, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(3, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(5, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(7, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(8, "REF", ReadAction.PopulateSegment, 8, False),
									New ReaderState(1, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(2, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(3, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(5, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(7, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(8, "PER", ReadAction.PopulateSegment, 10, False),
									New ReaderState(10, "PER", ReadAction.PopulateSegment, 10, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "NM1", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.NM1_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					NM1_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.NM1_Obj)
					If MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";QB;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 26
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";77;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 27
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";DK;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 29
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";DN;P3;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 30
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";PW;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420G", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 31
						Seg.SetSequence = 1409
					ElseIf MyBase.CompareKey(S2.NM101, ";45;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420H", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 31
						Seg.SetSequence = 10481
					ElseIf MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";DD;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";DQ;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 185
					ElseIf MyBase.CompareKey(S2.NM101, ";77;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 257
					ElseIf MyBase.CompareKey(S2.NM101, ";72;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2420A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 26
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";ZZ;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2420B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 27
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";82;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2420C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 5
					ElseIf MyBase.CompareKey(S2.NM101, ";DN;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2420D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 113
					End If
				ElseIf String.Compare(segmentName, "PRV", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PRV_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PRV_Obj = Seg
					Dim S2 = CType(Seg, Dom.Segments.PRV_Obj)
					If MyBase.CompareKey(S2.PRV01, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 6485
					ElseIf MyBase.CompareKey(S2.PRV01, ";PE;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 6485
					ElseIf MyBase.CompareKey(S2.PRV01, ";AS;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 6485
					End If
				ElseIf String.Compare(segmentName, "N2", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N2_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N2_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N3", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N3_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N3_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "N4", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.N4_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					N4_Obj = Seg
				ElseIf String.Compare(segmentName, "REF", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.REF_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					REF_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.REF_Obj)
					If MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 26
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 27
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420E", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 29
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2420F", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 30
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 25
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 221
					ElseIf MyBase.CompareKey(S2.REF01, ";1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2420D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 236129
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2420A", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 26
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2420B", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 27
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;LU;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2420C", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 6557
					ElseIf MyBase.CompareKey(S2.REF01, ";0B;1G;G2;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2420D", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 28
						Seg.SetSequence = 6593
					End If
				ElseIf String.Compare(segmentName, "PER", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.PER_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					PER_Obj.Add(Seg)
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property NM1_Obj As Dom.Segments.NM1_Obj
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_Std As Dom.Segments.NM1 Implements Dom.Transactions.Transaction837.Loops.Loop2420.NM1
				Get
					Return CType(Children(0), Dom.Segments.NM1_Obj)
				End Get
				Set(value As Dom.Segments.NM1)
					Children(0) = value
				End Set
			End Property

			Private Property NM1_IFace_Loop2420A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_1_Loop2420B_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_2_Loop2420C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_3_Loop2420D_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420D.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_4_Loop2420E_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_5_Loop2420F_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420F.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420F.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420F.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420F.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_6_Loop2420G_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_7_Loop2420H_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_8_Loop2420A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_9_Loop2420B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_10_Loop2420C_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_11_Loop2420D_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_12_Loop2420A_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420A.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420A.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420A.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_13_Loop2420B_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420B.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420B.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420B.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_14_Loop2420C_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420C.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420C.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420C.NM1)
					Children(0) = value
				End Set
			End Property
			Private Property NM1_IFace_15_Loop2420D_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420D.NM1 Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D.NM1
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420D.NM1)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420D.NM1)
					Children(0) = value
				End Set
			End Property
			Friend Property PRV_Obj As Dom.Segments.PRV_Obj
				Get
					Return CType(Children(1), Dom.Segments.PRV_Obj)
				End Get
				Set(value As Dom.Segments.PRV_Obj)
					Children(1) = value
				End Set
			End Property

			Private Property PRV_Std As Dom.Segments.PRV Implements Dom.Transactions.Transaction837.Loops.Loop2420.PRV
				Get
					Return CType(Children(1), Dom.Segments.PRV_Obj)
				End Get
				Set(value As Dom.Segments.PRV)
					Children(1) = value
				End Set
			End Property

			Private Property PRV_IFace_Loop2420A_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.PRV)
					Children(1) = value
				End Set
			End Property
			Private Property PRV_IFace_1_Loop2420A_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.PRV)
					Children(1) = value
				End Set
			End Property
			Private Property PRV_IFace_2_Loop2420B_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.PRV Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B.PRV
				Get
					Return CType(Children(1), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.PRV)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.PRV)
					Children(1) = value
				End Set
			End Property
			Friend ReadOnly Property N2_Obj As SegmentContainer(Of Dom.Segments.N2) Implements Dom.Transactions.Transaction837.Loops.Loop2420.N2
				Get
					Return CType(Children(2), SegmentContainer(Of Dom.Segments.N2))
				End Get
			End Property

			Friend ReadOnly Property N3_Obj As SegmentContainer(Of Dom.Segments.N3) Implements Dom.Transactions.Transaction837.Loops.Loop2420.N3
				Get
					Return CType(Children(3), SegmentContainer(Of Dom.Segments.N3))
				End Get
			End Property

			Private N3Subset_Loop2420C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N3, Dom.Segments.N3)
			Private Property N3_IFace_Loop2420C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C.N3
				Get
					If N3Subset_Loop2420C_Obj Is Nothing Then
						N3Subset_Loop2420C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N3, Dom.Segments.N3)(Children(3), 1, 27, 5225)
					End If

					If N3Subset_Loop2420C_Obj.Count > 0 Then
						Return N3Subset_Loop2420C_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N3)
					If N3Subset_Loop2420C_Obj Is Nothing Then
						N3Subset_Loop2420C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N3, Dom.Segments.N3)(Children(3), 1, 27, 5225)
					End If

					If N3Subset_Loop2420C_Obj.Count = 0 Then
						N3Subset_Loop2420C_Obj.Add(value)
					Else
						N3Subset_Loop2420C_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_1_Loop2420E_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N3, Dom.Segments.N3)
			Private Property N3_IFace_1_Loop2420E_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E.N3
				Get
					If N3Subset_1_Loop2420E_Obj Is Nothing Then
						N3Subset_1_Loop2420E_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N3, Dom.Segments.N3)(Children(3), 1, 29, 5225)
					End If

					If N3Subset_1_Loop2420E_Obj.Count > 0 Then
						Return N3Subset_1_Loop2420E_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N3)
					If N3Subset_1_Loop2420E_Obj Is Nothing Then
						N3Subset_1_Loop2420E_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N3, Dom.Segments.N3)(Children(3), 1, 29, 5225)
					End If

					If N3Subset_1_Loop2420E_Obj.Count = 0 Then
						N3Subset_1_Loop2420E_Obj.Add(value)
					Else
						N3Subset_1_Loop2420E_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_2_Loop2420G_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N3, Dom.Segments.N3)
			Private Property N3_IFace_2_Loop2420G_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G.N3
				Get
					If N3Subset_2_Loop2420G_Obj Is Nothing Then
						N3Subset_2_Loop2420G_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N3, Dom.Segments.N3)(Children(3), 1, 31, 5297)
					End If

					If N3Subset_2_Loop2420G_Obj.Count > 0 Then
						Return N3Subset_2_Loop2420G_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N3)
					If N3Subset_2_Loop2420G_Obj Is Nothing Then
						N3Subset_2_Loop2420G_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N3, Dom.Segments.N3)(Children(3), 1, 31, 5297)
					End If

					If N3Subset_2_Loop2420G_Obj.Count = 0 Then
						N3Subset_2_Loop2420G_Obj.Add(value)
					Else
						N3Subset_2_Loop2420G_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_3_Loop2420H_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N3, Dom.Segments.N3)
			Private Property N3_IFace_3_Loop2420H_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H.N3
				Get
					If N3Subset_3_Loop2420H_Obj Is Nothing Then
						N3Subset_3_Loop2420H_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N3, Dom.Segments.N3)(Children(3), 1, 31, 1445)
					End If

					If N3Subset_3_Loop2420H_Obj.Count > 0 Then
						Return N3Subset_3_Loop2420H_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N3)
					If N3Subset_3_Loop2420H_Obj Is Nothing Then
						N3Subset_3_Loop2420H_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N3, Dom.Segments.N3)(Children(3), 1, 31, 1445)
					End If

					If N3Subset_3_Loop2420H_Obj.Count = 0 Then
						N3Subset_3_Loop2420H_Obj.Add(value)
					Else
						N3Subset_3_Loop2420H_Obj(0) = value
					End If
				End Set
			End Property
			Private N3Subset_4_Loop2420D_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N3, Dom.Segments.N3)
			Private Property N3_IFace_4_Loop2420D_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N3 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D.N3
				Get
					If N3Subset_4_Loop2420D_Obj_1 Is Nothing Then
						N3Subset_4_Loop2420D_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N3, Dom.Segments.N3)(Children(3), 1, 28, 234833)
					End If

					If N3Subset_4_Loop2420D_Obj_1.Count > 0 Then
						Return N3Subset_4_Loop2420D_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N3)
					If N3Subset_4_Loop2420D_Obj_1 Is Nothing Then
						N3Subset_4_Loop2420D_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N3, Dom.Segments.N3)(Children(3), 1, 28, 234833)
					End If

					If N3Subset_4_Loop2420D_Obj_1.Count = 0 Then
						N3Subset_4_Loop2420D_Obj_1.Add(value)
					Else
						N3Subset_4_Loop2420D_Obj_1(0) = value
					End If
				End Set
			End Property
			Friend Property N4_Obj As Dom.Segments.N4_Obj
				Get
					Return CType(Children(4), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4_Obj)
					Children(4) = value
				End Set
			End Property

			Private Property N4_Std As Dom.Segments.N4 Implements Dom.Transactions.Transaction837.Loops.Loop2420.N4
				Get
					Return CType(Children(4), Dom.Segments.N4_Obj)
				End Get
				Set(value As Dom.Segments.N4)
					Children(4) = value
				End Set
			End Property

			Private Property N4_IFace_Loop2420C_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N4)
					Children(4) = value
				End Set
			End Property
			Private Property N4_IFace_1_Loop2420E_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N4)
					Children(4) = value
				End Set
			End Property
			Private Property N4_IFace_2_Loop2420G_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N4)
					Children(4) = value
				End Set
			End Property
			Private Property N4_IFace_3_Loop2420H_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N4)
					Children(4) = value
				End Set
			End Property
			Private Property N4_IFace_4_Loop2420D_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N4 Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D.N4
				Get
					Return CType(Children(4), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N4)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N4)
					Children(4) = value
				End Set
			End Property
			Friend ReadOnly Property REF_Obj As SegmentContainer(Of Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Loops.Loop2420.REF
				Get
					Return CType(Children(5), SegmentContainer(Of Dom.Segments.REF))
				End Get
			End Property

			Private REFSubset_Loop2420A_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420A_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A.REF
				Get
					If REFSubset_Loop2420A_Obj Is Nothing Then
						REFSubset_Loop2420A_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.REF, Dom.Segments.REF)(Children(5), 20, 25, 6557)
					End If

					Return REFSubset_Loop2420A_Obj
				End Get
			End Property
			Private REFSubset_1_Loop2420B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420B_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B.REF
				Get
					If REFSubset_1_Loop2420B_Obj Is Nothing Then
						REFSubset_1_Loop2420B_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420B.REF, Dom.Segments.REF)(Children(5), 20, 26, 6557)
					End If

					Return REFSubset_1_Loop2420B_Obj
				End Get
			End Property
			Private REFSubset_2_Loop2420C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420C_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C.REF
				Get
					If REFSubset_2_Loop2420C_Obj Is Nothing Then
						REFSubset_2_Loop2420C_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.REF, Dom.Segments.REF)(Children(5), 3, 27, 6557)
					End If

					Return REFSubset_2_Loop2420C_Obj
				End Get
			End Property
			Private REFSubset_3_Loop2420D_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420D_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D.REF
				Get
					If REFSubset_3_Loop2420D_Obj Is Nothing Then
						REFSubset_3_Loop2420D_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420D.REF, Dom.Segments.REF)(Children(5), 20, 28, 6557)
					End If

					Return REFSubset_3_Loop2420D_Obj
				End Get
			End Property
			Private REFSubset_4_Loop2420E_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420E_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E.REF
				Get
					If REFSubset_4_Loop2420E_Obj Is Nothing Then
						REFSubset_4_Loop2420E_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.REF, Dom.Segments.REF)(Children(5), 20, 29, 6557)
					End If

					Return REFSubset_4_Loop2420E_Obj
				End Get
			End Property
			Private REFSubset_5_Loop2420F_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420F.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420F_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420F.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420F.REF
				Get
					If REFSubset_5_Loop2420F_Obj Is Nothing Then
						REFSubset_5_Loop2420F_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420F.REF, Dom.Segments.REF)(Children(5), 20, 30, 6557)
					End If

					Return REFSubset_5_Loop2420F_Obj
				End Get
			End Property
			Private REFSubset_6_Loop2420A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420A_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A.REF
				Get
					If REFSubset_6_Loop2420A_Obj_1 Is Nothing Then
						REFSubset_6_Loop2420A_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.REF, Dom.Segments.REF)(Children(5), 20, 25, 6557)
					End If

					Return REFSubset_6_Loop2420A_Obj_1
				End Get
			End Property
			Private REFSubset_7_Loop2420B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420B_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B.REF
				Get
					If REFSubset_7_Loop2420B_Obj_1 Is Nothing Then
						REFSubset_7_Loop2420B_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.REF, Dom.Segments.REF)(Children(5), 20, 28, 6557)
					End If

					Return REFSubset_7_Loop2420B_Obj_1
				End Get
			End Property
			Private REFSubset_8_Loop2420C_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420C_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C.REF
				Get
					If REFSubset_8_Loop2420C_Obj_1 Is Nothing Then
						REFSubset_8_Loop2420C_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420C.REF, Dom.Segments.REF)(Children(5), 20, 28, 221)
					End If

					Return REFSubset_8_Loop2420C_Obj_1
				End Get
			End Property
			Private REFSubset_9_Loop2420D_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420D_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D.REF
				Get
					If REFSubset_9_Loop2420D_Obj_1 Is Nothing Then
						REFSubset_9_Loop2420D_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.REF, Dom.Segments.REF)(Children(5), 20, 28, 236129)
					End If

					Return REFSubset_9_Loop2420D_Obj_1
				End Get
			End Property
			Private REFSubset_10_Loop2420A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420A.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420A_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420A.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A.REF
				Get
					If REFSubset_10_Loop2420A_Obj_2 Is Nothing Then
						REFSubset_10_Loop2420A_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420A.REF, Dom.Segments.REF)(Children(5), 20, 26, 6557)
					End If

					Return REFSubset_10_Loop2420A_Obj_2
				End Get
			End Property
			Private REFSubset_11_Loop2420B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420B.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420B_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420B.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B.REF
				Get
					If REFSubset_11_Loop2420B_Obj_2 Is Nothing Then
						REFSubset_11_Loop2420B_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420B.REF, Dom.Segments.REF)(Children(5), 20, 27, 6557)
					End If

					Return REFSubset_11_Loop2420B_Obj_2
				End Get
			End Property
			Private REFSubset_12_Loop2420C_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420C.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420C_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420C.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C.REF
				Get
					If REFSubset_12_Loop2420C_Obj_2 Is Nothing Then
						REFSubset_12_Loop2420C_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420C.REF, Dom.Segments.REF)(Children(5), 20, 28, 6557)
					End If

					Return REFSubset_12_Loop2420C_Obj_2
				End Get
			End Property
			Private REFSubset_13_Loop2420D_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420D.REF, Dom.Segments.REF)
			Private ReadOnly Property REF_Loop2420D_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420D.REF, Dom.Segments.REF) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D.REF
				Get
					If REFSubset_13_Loop2420D_Obj_2 Is Nothing Then
						REFSubset_13_Loop2420D_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420D.REF, Dom.Segments.REF)(Children(5), 20, 28, 6593)
					End If

					Return REFSubset_13_Loop2420D_Obj_2
				End Get
			End Property
			Friend ReadOnly Property PER_Obj As SegmentContainer(Of Dom.Segments.PER) Implements Dom.Transactions.Transaction837.Loops.Loop2420.PER
				Get
					Return CType(Children(6), SegmentContainer(Of Dom.Segments.PER))
				End Get
			End Property

			Private PERSubset_Loop2420E_Obj As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.PER, Dom.Segments.PER)
			Private Property PER_IFace_Loop2420E_Obj As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.PER Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E.PER
				Get
					If PERSubset_Loop2420E_Obj Is Nothing Then
						PERSubset_Loop2420E_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.PER, Dom.Segments.PER)(Children(6), 1, 29, 113)
					End If

					If PERSubset_Loop2420E_Obj.Count > 0 Then
						Return PERSubset_Loop2420E_Obj(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.PER)
					If PERSubset_Loop2420E_Obj Is Nothing Then
						PERSubset_Loop2420E_Obj = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.PER, Dom.Segments.PER)(Children(6), 1, 29, 113)
					End If

					If PERSubset_Loop2420E_Obj.Count = 0 Then
						PERSubset_Loop2420E_Obj.Add(value)
					Else
						PERSubset_Loop2420E_Obj(0) = value
					End If
				End Set
			End Property

		End Class
		Partial Friend Class Loop2430_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2430,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430,
										Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430,
										Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.SVD_Obj),
													New SegmentContainer(Of Dom.Segments.CAS)(99, 2, 5450),
													New SegmentContainer(Of Dom.Segments.DTP)(9, 2, 5500),
													New SegmentContainer(Of Dom.Segments.AMT)(20, 2, 5505)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "SVD", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "CAS", ReadAction.PopulateSegment, 2, False),
									New ReaderState(2, "CAS", ReadAction.PopulateSegment, 2, False),
									New ReaderState(1, "DTP", ReadAction.PopulateSegment, 4, False),
									New ReaderState(2, "DTP", ReadAction.PopulateSegment, 4, False),
									New ReaderState(4, "DTP", ReadAction.PopulateSegment, 4, False),
									New ReaderState(1, "AMT", ReadAction.PopulateSegment, 6, False),
									New ReaderState(2, "AMT", ReadAction.PopulateSegment, 6, False),
									New ReaderState(4, "AMT", ReadAction.PopulateSegment, 6, False),
									New ReaderState(6, "AMT", ReadAction.PopulateSegment, 6, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "SVD", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.SVD_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					SVD_Obj = Seg
				ElseIf String.Compare(segmentName, "CAS", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.CAS_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					CAS_Obj.Add(Seg)
				ElseIf String.Compare(segmentName, "DTP", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.DTP_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					DTP_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.DTP_Obj)
					If MyBase.CompareKey(S2.DTP01, ";573;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2430", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 32
						Seg.SetSequence = 185
					ElseIf MyBase.CompareKey(S2.DTP01, ";573;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2430", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 32
						Seg.SetSequence = 185
					ElseIf MyBase.CompareKey(S2.DTP01, ";573;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2430", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 32
						Seg.SetSequence = 185
					End If
				ElseIf String.Compare(segmentName, "AMT", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.AMT_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					AMT_Obj.Add(Seg)
					Dim S2 = CType(Seg, Dom.Segments.AMT_Obj)
					If MyBase.CompareKey(S2.AMT01, ";EAF;") AndAlso String.Compare(args.Implementation, "_837Q1__2000B__2300__2400__2430", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 32
						Seg.SetSequence = 233465
					ElseIf MyBase.CompareKey(S2.AMT01, ";EAF;") AndAlso String.Compare(args.Implementation, "_837Q2__2000B__2300__2400__2430", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 32
						Seg.SetSequence = 233465
					ElseIf MyBase.CompareKey(S2.AMT01, ";EAF;") AndAlso String.Compare(args.Implementation, "_837Q3__2000B__2300__2400__2430", StringComparison.OrdinalIgnoreCase) = 0 Then
						Seg.SetArea = 32
						Seg.SetSequence = 233465
					End If
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property SVD_Obj As Dom.Segments.SVD_Obj
				Get
					Return CType(Children(0), Dom.Segments.SVD_Obj)
				End Get
				Set(value As Dom.Segments.SVD_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property SVD_Std As Dom.Segments.SVD Implements Dom.Transactions.Transaction837.Loops.Loop2430.SVD
				Get
					Return CType(Children(0), Dom.Segments.SVD_Obj)
				End Get
				Set(value As Dom.Segments.SVD)
					Children(0) = value
				End Set
			End Property

			Private Property SVD_IFace_Loop2430_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.SVD Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430.SVD
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.SVD)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.SVD)
					Children(0) = value
				End Set
			End Property
			Private Property SVD_IFace_1_Loop2430_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.SVD Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430.SVD
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.SVD)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.SVD)
					Children(0) = value
				End Set
			End Property
			Private Property SVD_IFace_2_Loop2430_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.SVD Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430.SVD
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.SVD)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.SVD)
					Children(0) = value
				End Set
			End Property
			Friend ReadOnly Property CAS_Obj As SegmentContainer(Of Dom.Segments.CAS) Implements Dom.Transactions.Transaction837.Loops.Loop2430.CAS
				Get
					Return CType(Children(1), SegmentContainer(Of Dom.Segments.CAS))
				End Get
			End Property

			Private CASSubset_Loop2430_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.CAS, Dom.Segments.CAS)
			Private ReadOnly Property CAS_Loop2430_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.CAS, Dom.Segments.CAS) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430.CAS
				Get
					If CASSubset_Loop2430_Obj_1 Is Nothing Then
						CASSubset_Loop2430_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.CAS, Dom.Segments.CAS)(Children(1), 5, 32, 6629)
					End If

					Return CASSubset_Loop2430_Obj_1
				End Get
			End Property
			Private CASSubset_1_Loop2430_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.CAS, Dom.Segments.CAS)
			Private ReadOnly Property CAS_Loop2430_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.CAS, Dom.Segments.CAS) Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430.CAS
				Get
					If CASSubset_1_Loop2430_Obj_2 Is Nothing Then
						CASSubset_1_Loop2430_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.CAS, Dom.Segments.CAS)(Children(1), 5, 32, 6629)
					End If

					Return CASSubset_1_Loop2430_Obj_2
				End Get
			End Property
			Private CASSubset_2_Loop2430_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.CAS, Dom.Segments.CAS)
			Private ReadOnly Property CAS_Loop2430_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.CAS, Dom.Segments.CAS) Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430.CAS
				Get
					If CASSubset_2_Loop2430_Obj_3 Is Nothing Then
						CASSubset_2_Loop2430_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.CAS, Dom.Segments.CAS)(Children(1), 5, 32, 6629)
					End If

					Return CASSubset_2_Loop2430_Obj_3
				End Get
			End Property
			Friend ReadOnly Property DTP_Obj As SegmentContainer(Of Dom.Segments.DTP) Implements Dom.Transactions.Transaction837.Loops.Loop2430.DTP
				Get
					Return CType(Children(2), SegmentContainer(Of Dom.Segments.DTP))
				End Get
			End Property

			Private DTPSubset_Loop2430_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_Loop2430_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430.DTP
				Get
					If DTPSubset_Loop2430_Obj_1 Is Nothing Then
						DTPSubset_Loop2430_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.DTP, Dom.Segments.DTP)(Children(2), 1, 32, 185)
					End If

					If DTPSubset_Loop2430_Obj_1.Count > 0 Then
						Return DTPSubset_Loop2430_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.DTP)
					If DTPSubset_Loop2430_Obj_1 Is Nothing Then
						DTPSubset_Loop2430_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.DTP, Dom.Segments.DTP)(Children(2), 1, 32, 185)
					End If

					If DTPSubset_Loop2430_Obj_1.Count = 0 Then
						DTPSubset_Loop2430_Obj_1.Add(value)
					Else
						DTPSubset_Loop2430_Obj_1(0) = value
					End If
				End Set
			End Property
			Private DTPSubset_1_Loop2430_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_1_Loop2430_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430.DTP
				Get
					If DTPSubset_1_Loop2430_Obj_2 Is Nothing Then
						DTPSubset_1_Loop2430_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.DTP, Dom.Segments.DTP)(Children(2), 1, 32, 185)
					End If

					If DTPSubset_1_Loop2430_Obj_2.Count > 0 Then
						Return DTPSubset_1_Loop2430_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.DTP)
					If DTPSubset_1_Loop2430_Obj_2 Is Nothing Then
						DTPSubset_1_Loop2430_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.DTP, Dom.Segments.DTP)(Children(2), 1, 32, 185)
					End If

					If DTPSubset_1_Loop2430_Obj_2.Count = 0 Then
						DTPSubset_1_Loop2430_Obj_2.Add(value)
					Else
						DTPSubset_1_Loop2430_Obj_2(0) = value
					End If
				End Set
			End Property
			Private DTPSubset_2_Loop2430_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.DTP, Dom.Segments.DTP)
			Private Property DTP_IFace_2_Loop2430_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.DTP Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430.DTP
				Get
					If DTPSubset_2_Loop2430_Obj_3 Is Nothing Then
						DTPSubset_2_Loop2430_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.DTP, Dom.Segments.DTP)(Children(2), 1, 32, 185)
					End If

					If DTPSubset_2_Loop2430_Obj_3.Count > 0 Then
						Return DTPSubset_2_Loop2430_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.DTP)
					If DTPSubset_2_Loop2430_Obj_3 Is Nothing Then
						DTPSubset_2_Loop2430_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.DTP, Dom.Segments.DTP)(Children(2), 1, 32, 185)
					End If

					If DTPSubset_2_Loop2430_Obj_3.Count = 0 Then
						DTPSubset_2_Loop2430_Obj_3.Add(value)
					Else
						DTPSubset_2_Loop2430_Obj_3(0) = value
					End If
				End Set
			End Property
			Friend ReadOnly Property AMT_Obj As SegmentContainer(Of Dom.Segments.AMT) Implements Dom.Transactions.Transaction837.Loops.Loop2430.AMT
				Get
					Return CType(Children(3), SegmentContainer(Of Dom.Segments.AMT))
				End Get
			End Property

			Private AMTSubset_Loop2430_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_Loop2430_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430.AMT
				Get
					If AMTSubset_Loop2430_Obj_1 Is Nothing Then
						AMTSubset_Loop2430_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.AMT, Dom.Segments.AMT)(Children(3), 1, 32, 233465)
					End If

					If AMTSubset_Loop2430_Obj_1.Count > 0 Then
						Return AMTSubset_Loop2430_Obj_1(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.AMT)
					If AMTSubset_Loop2430_Obj_1 Is Nothing Then
						AMTSubset_Loop2430_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.AMT, Dom.Segments.AMT)(Children(3), 1, 32, 233465)
					End If

					If AMTSubset_Loop2430_Obj_1.Count = 0 Then
						AMTSubset_Loop2430_Obj_1.Add(value)
					Else
						AMTSubset_Loop2430_Obj_1(0) = value
					End If
				End Set
			End Property
			Private AMTSubset_1_Loop2430_Obj_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_1_Loop2430_Obj_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430.AMT
				Get
					If AMTSubset_1_Loop2430_Obj_2 Is Nothing Then
						AMTSubset_1_Loop2430_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.AMT, Dom.Segments.AMT)(Children(3), 1, 32, 233465)
					End If

					If AMTSubset_1_Loop2430_Obj_2.Count > 0 Then
						Return AMTSubset_1_Loop2430_Obj_2(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.AMT)
					If AMTSubset_1_Loop2430_Obj_2 Is Nothing Then
						AMTSubset_1_Loop2430_Obj_2 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.AMT, Dom.Segments.AMT)(Children(3), 1, 32, 233465)
					End If

					If AMTSubset_1_Loop2430_Obj_2.Count = 0 Then
						AMTSubset_1_Loop2430_Obj_2.Add(value)
					Else
						AMTSubset_1_Loop2430_Obj_2(0) = value
					End If
				End Set
			End Property
			Private AMTSubset_2_Loop2430_Obj_3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.AMT, Dom.Segments.AMT)
			Private Property AMT_IFace_2_Loop2430_Obj_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.AMT Implements Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430.AMT
				Get
					If AMTSubset_2_Loop2430_Obj_3 Is Nothing Then
						AMTSubset_2_Loop2430_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.AMT, Dom.Segments.AMT)(Children(3), 1, 32, 233465)
					End If

					If AMTSubset_2_Loop2430_Obj_3.Count > 0 Then
						Return AMTSubset_2_Loop2430_Obj_3(0)
					Else
						Return Nothing
					End If
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.AMT)
					If AMTSubset_2_Loop2430_Obj_3 Is Nothing Then
						AMTSubset_2_Loop2430_Obj_3 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.AMT, Dom.Segments.AMT)(Children(3), 1, 32, 233465)
					End If

					If AMTSubset_2_Loop2430_Obj_3.Count = 0 Then
						AMTSubset_2_Loop2430_Obj_3.Add(value)
					Else
						AMTSubset_2_Loop2430_Obj_3(0) = value
					End If
				End Set
			End Property

		End Class
		Partial Friend Class Loop2440_Obj
			Inherits LoopBase
			Implements Dom.Transactions.Transaction837.Loops.Loop2440,
										Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2440
			Friend Sub New()
				MyBase.New

				Children.AddRange({CType(Nothing, Dom.Segments.LQ_Obj),
													New SegmentContainer(Of Dom.Segments.FRM)(99, 2, 5520)})

				Initialize()
			End Sub

			Partial Private Sub Initialize()

			End Sub

			Private Shared StateMan As New ReaderStateMachine({New ReaderState(0, "LQ", ReadAction.PopulateSegment, 1, False),
									New ReaderState(1, "FRM", ReadAction.PopulateSegment, 2, False),
									New ReaderState(2, "FRM", ReadAction.PopulateSegment, 2, False)})

			Friend Overrides Function ReadAsync(args As ReaderArgs) As Task
				Return StateMan.RunAsync(AddressOf PopulateSegment, AddressOf PopulateChildLoop, 0, args)
			End Function

			Private Sub PopulateSegment(ByVal args As ReaderArgs)
				Dim SegmentName As String = args.DataSegment.SegmentID
				Dim Implementation As String = args.Implementation
				Dim Seg As Segment
				If String.Compare(segmentName, "LQ", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.LQ_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					LQ_Obj = Seg
				ElseIf String.Compare(segmentName, "FRM", StringComparison.OrdinalIgnoreCase) = 0 Then
					Seg = Dom.Segments.FRM_Obj.FromGenericSegment(args.DataSegment, args.Reader.Reader)
					FRM_Obj.Add(Seg)
				End If
			End Sub

			Private Function PopulateChildLoop(ByVal args As ReaderArgs) As Task
				Dim LoopID As String = args.ParentLoopID
				Dim Implementation As String = args.Implementation
				Dim Temp = args.Implementation

				args.Implementation = Temp

				Return Task.CompletedTask
			End Function
			Friend Property LQ_Obj As Dom.Segments.LQ_Obj
				Get
					Return CType(Children(0), Dom.Segments.LQ_Obj)
				End Get
				Set(value As Dom.Segments.LQ_Obj)
					Children(0) = value
				End Set
			End Property

			Private Property LQ_Std As Dom.Segments.LQ Implements Dom.Transactions.Transaction837.Loops.Loop2440.LQ
				Get
					Return CType(Children(0), Dom.Segments.LQ_Obj)
				End Get
				Set(value As Dom.Segments.LQ)
					Children(0) = value
				End Set
			End Property

			Private Property LQ_IFace_Loop2440_Obj_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2440.LQ Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2440.LQ
				Get
					Return CType(Children(0), Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2440.LQ)
				End Get
				Set(value As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2440.LQ)
					Children(0) = value
				End Set
			End Property
			Friend ReadOnly Property FRM_Obj As SegmentContainer(Of Dom.Segments.FRM) Implements Dom.Transactions.Transaction837.Loops.Loop2440.FRM
				Get
					Return CType(Children(1), SegmentContainer(Of Dom.Segments.FRM))
				End Get
			End Property

			Private FRMSubset_Loop2440_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2440.FRM, Dom.Segments.FRM)
			Private ReadOnly Property FRM_Loop2440_Obj_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2440.FRM, Dom.Segments.FRM) Implements Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2440.FRM
				Get
					If FRMSubset_Loop2440_Obj_1 Is Nothing Then
						FRMSubset_Loop2440_Obj_1 = New SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2440.FRM, Dom.Segments.FRM)(Children(1), 99, 34, 2777)
					End If

					Return FRMSubset_Loop2440_Obj_1
				End Get
			End Property

		End Class
		'''<summary>Health Care Claim</summary>
		'''<remarks></remarks>
		Public Interface Standard
			'''<summary>Transaction Set Header</summary>
			Property ST As Dom.Segments.ST
			'''<summary>Beginning of Hierarchical Transaction</summary>
			Property BHT As Dom.Segments.BHT
			'''<summary>Reference Information</summary>
			ReadOnly Property REF As SegmentContainer(Of Dom.Segments.REF)
			'''<summary>Individual or Organizational Name</summary>
			ReadOnly Property Loop1000 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop1000)
			'''<summary>Hierarchical Level</summary>
			ReadOnly Property Loop2000 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2000)
			'''<summary>Transaction Set Trailer</summary>
			Property SE As Dom.Segments.SE
		End Interface
		Namespace Loops

			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop1000
				Inherits ILoop
				'''<summary>Individual or Organizational Name</summary>
				Property NM1 As Dom.Segments.NM1
				'''<summary>Additional Name Information</summary>
				ReadOnly Property N2 As SegmentContainer(Of Dom.Segments.N2)
				'''<summary>Party Location</summary>
				ReadOnly Property N3 As SegmentContainer(Of Dom.Segments.N3)
				'''<summary>Geographic Location</summary>
				Property N4 As Dom.Segments.N4
				'''<summary>Reference Information</summary>
				ReadOnly Property REF As SegmentContainer(Of Dom.Segments.REF)
				'''<summary>Administrative Communications Contact</summary>
				ReadOnly Property PER As SegmentContainer(Of Dom.Segments.PER)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2000
				Inherits ILoop
				'''<summary>Hierarchical Level</summary>
				Property HL As Dom.Segments.HL
				'''<summary>Provider Information</summary>
				Property PRV As Dom.Segments.PRV
				'''<summary>Subscriber Information</summary>
				Property SBR As Dom.Segments.SBR
				'''<summary>Patient Information</summary>
				Property PAT As Dom.Segments.PAT
				'''<summary>Date or Time or Period</summary>
				ReadOnly Property DTP As SegmentContainer(Of Dom.Segments.DTP)
				'''<summary>Currency</summary>
				Property CUR As Dom.Segments.CUR
				'''<summary>Individual or Organizational Name</summary>
				ReadOnly Property Loop2010 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2010)
				'''<summary>Health Claim</summary>
				ReadOnly Property Loop2300 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2300)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2010
				Inherits ILoop
				'''<summary>Individual or Organizational Name</summary>
				Property NM1 As Dom.Segments.NM1
				'''<summary>Additional Name Information</summary>
				ReadOnly Property N2 As SegmentContainer(Of Dom.Segments.N2)
				'''<summary>Party Location</summary>
				ReadOnly Property N3 As SegmentContainer(Of Dom.Segments.N3)
				'''<summary>Geographic Location</summary>
				Property N4 As Dom.Segments.N4
				'''<summary>Demographic Information</summary>
				Property DMG As Dom.Segments.DMG
				'''<summary>Reference Information</summary>
				ReadOnly Property REF As SegmentContainer(Of Dom.Segments.REF)
				'''<summary>Administrative Communications Contact</summary>
				ReadOnly Property PER As SegmentContainer(Of Dom.Segments.PER)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2300
				Inherits ILoop
				'''<summary>Health Claim</summary>
				Property CLM As Dom.Segments.CLM
				'''<summary>Date or Time or Period</summary>
				ReadOnly Property DTP As SegmentContainer(Of Dom.Segments.DTP)
				'''<summary>Claim Codes</summary>
				Property CL1 As Dom.Segments.CL1
				'''<summary>Orthodontic Information</summary>
				Property DN1 As Dom.Segments.DN1
				'''<summary>Tooth Summary</summary>
				ReadOnly Property DN2 As SegmentContainer(Of Dom.Segments.DN2)
				'''<summary>Paperwork</summary>
				ReadOnly Property PWK As SegmentContainer(Of Dom.Segments.PWK)
				'''<summary>Contract Information</summary>
				Property CN1 As Dom.Segments.CN1
				'''<summary>Disability Information</summary>
				Property DSB As Dom.Segments.DSB
				'''<summary>Peer Review Organization or Utilization Review</summary>
				Property UR As Dom.Segments.UR
				'''<summary>Monetary Amount Information</summary>
				ReadOnly Property AMT As SegmentContainer(Of Dom.Segments.AMT)
				'''<summary>Reference Information</summary>
				ReadOnly Property REF As SegmentContainer(Of Dom.Segments.REF)
				'''<summary>File Information</summary>
				ReadOnly Property K3 As SegmentContainer(Of Dom.Segments.K3)
				'''<summary>Note/Special Instruction</summary>
				ReadOnly Property NTE As SegmentContainer(Of Dom.Segments.NTE)
				'''<summary>Ambulance Certification</summary>
				Property CR1 As Dom.Segments.CR1
				'''<summary>Chiropractic Certification</summary>
				Property CR2 As Dom.Segments.CR2
				'''<summary>Durable Medical Equipment Certification</summary>
				Property CR3 As Dom.Segments.CR3
				'''<summary>Enteral or Parenteral Therapy Certification</summary>
				ReadOnly Property CR4 As SegmentContainer(Of Dom.Segments.CR4)
				'''<summary>Oxygen Therapy Certification</summary>
				Property CR5 As Dom.Segments.CR5
				'''<summary>Home Health Care Certification</summary>
				Property CR6 As Dom.Segments.CR6
				'''<summary>Pacemaker Certification</summary>
				ReadOnly Property CR8 As SegmentContainer(Of Dom.Segments.CR8)
				'''<summary>Conditions Indicator</summary>
				ReadOnly Property CRC As SegmentContainer(Of Dom.Segments.CRC)
				'''<summary>Health Care Information Codes</summary>
				ReadOnly Property HI As SegmentContainer(Of Dom.Segments.HI)
				'''<summary>Quantity Information</summary>
				ReadOnly Property QTY As SegmentContainer(Of Dom.Segments.QTY)
				'''<summary>Health Care Pricing</summary>
				Property HCP As Dom.Segments.HCP
				'''<summary>Home Health Treatment Plan Certification</summary>
				ReadOnly Property Loop2305 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2305)
				'''<summary>Individual or Organizational Name</summary>
				ReadOnly Property Loop2310 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2310)
				'''<summary>Subscriber Information</summary>
				ReadOnly Property Loop2320 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2320)
				'''<summary>Transaction Set Line Number</summary>
				ReadOnly Property Loop2400 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2400)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2305
				Inherits ILoop
				'''<summary>Home Health Treatment Plan Certification</summary>
				Property CR7 As Dom.Segments.CR7
				'''<summary>Health Care Services Delivery</summary>
				ReadOnly Property HSD As SegmentContainer(Of Dom.Segments.HSD)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2310
				Inherits ILoop
				'''<summary>Individual or Organizational Name</summary>
				Property NM1 As Dom.Segments.NM1
				'''<summary>Provider Information</summary>
				Property PRV As Dom.Segments.PRV
				'''<summary>Additional Name Information</summary>
				ReadOnly Property N2 As SegmentContainer(Of Dom.Segments.N2)
				'''<summary>Party Location</summary>
				ReadOnly Property N3 As SegmentContainer(Of Dom.Segments.N3)
				'''<summary>Geographic Location</summary>
				Property N4 As Dom.Segments.N4
				'''<summary>Reference Information</summary>
				ReadOnly Property REF As SegmentContainer(Of Dom.Segments.REF)
				'''<summary>Administrative Communications Contact</summary>
				ReadOnly Property PER As SegmentContainer(Of Dom.Segments.PER)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2320
				Inherits ILoop
				'''<summary>Subscriber Information</summary>
				Property SBR As Dom.Segments.SBR
				'''<summary>Claims Adjustment</summary>
				ReadOnly Property CAS As SegmentContainer(Of Dom.Segments.CAS)
				'''<summary>Monetary Amount Information</summary>
				ReadOnly Property AMT As SegmentContainer(Of Dom.Segments.AMT)
				'''<summary>Demographic Information</summary>
				Property DMG As Dom.Segments.DMG
				'''<summary>Other Health Insurance Information</summary>
				Property OI As Dom.Segments.OI
				'''<summary>Medicare Inpatient Adjudication</summary>
				Property MIA As Dom.Segments.MIA
				'''<summary>Medicare Outpatient Adjudication</summary>
				Property MOA As Dom.Segments.MOA
				'''<summary>Individual or Organizational Name</summary>
				ReadOnly Property Loop2330 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2330)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2330
				Inherits ILoop
				'''<summary>Individual or Organizational Name</summary>
				Property NM1 As Dom.Segments.NM1
				'''<summary>Additional Name Information</summary>
				ReadOnly Property N2 As SegmentContainer(Of Dom.Segments.N2)
				'''<summary>Party Location</summary>
				ReadOnly Property N3 As SegmentContainer(Of Dom.Segments.N3)
				'''<summary>Geographic Location</summary>
				Property N4 As Dom.Segments.N4
				'''<summary>Administrative Communications Contact</summary>
				ReadOnly Property PER As SegmentContainer(Of Dom.Segments.PER)
				'''<summary>Date or Time or Period</summary>
				ReadOnly Property DTP As SegmentContainer(Of Dom.Segments.DTP)
				'''<summary>Reference Information</summary>
				ReadOnly Property REF As SegmentContainer(Of Dom.Segments.REF)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2400
				Inherits ILoop
				'''<summary>Transaction Set Line Number</summary>
				Property LX As Dom.Segments.LX
				'''<summary>Professional Service</summary>
				Property SV1 As Dom.Segments.SV1
				'''<summary>Institutional Service</summary>
				Property SV2 As Dom.Segments.SV2
				'''<summary>Dental Service</summary>
				Property SV3 As Dom.Segments.SV3
				'''<summary>Tooth Identification</summary>
				ReadOnly Property TOO As SegmentContainer(Of Dom.Segments.TOO)
				'''<summary>Drug Service</summary>
				Property SV4 As Dom.Segments.SV4
				'''<summary>Durable Medical Equipment Service</summary>
				Property SV5 As Dom.Segments.SV5
				'''<summary>Anesthesia Service</summary>
				Property SV6 As Dom.Segments.SV6
				'''<summary>Drug Adjudication</summary>
				Property SV7 As Dom.Segments.SV7
				'''<summary>Health Care Information Codes</summary>
				ReadOnly Property HI As SegmentContainer(Of Dom.Segments.HI)
				'''<summary>Paperwork</summary>
				ReadOnly Property PWK As SegmentContainer(Of Dom.Segments.PWK)
				'''<summary>Ambulance Certification</summary>
				Property CR1 As Dom.Segments.CR1
				'''<summary>Chiropractic Certification</summary>
				ReadOnly Property CR2 As SegmentContainer(Of Dom.Segments.CR2)
				'''<summary>Durable Medical Equipment Certification</summary>
				Property CR3 As Dom.Segments.CR3
				'''<summary>Enteral or Parenteral Therapy Certification</summary>
				ReadOnly Property CR4 As SegmentContainer(Of Dom.Segments.CR4)
				'''<summary>Oxygen Therapy Certification</summary>
				Property CR5 As Dom.Segments.CR5
				'''<summary>Conditions Indicator</summary>
				ReadOnly Property CRC As SegmentContainer(Of Dom.Segments.CRC)
				'''<summary>Date or Time or Period</summary>
				ReadOnly Property DTP As SegmentContainer(Of Dom.Segments.DTP)
				'''<summary>Quantity Information</summary>
				ReadOnly Property QTY As SegmentContainer(Of Dom.Segments.QTY)
				'''<summary>Measurements</summary>
				ReadOnly Property MEA As SegmentContainer(Of Dom.Segments.MEA)
				'''<summary>Contract Information</summary>
				Property CN1 As Dom.Segments.CN1
				'''<summary>Reference Information</summary>
				ReadOnly Property REF As SegmentContainer(Of Dom.Segments.REF)
				'''<summary>Monetary Amount Information</summary>
				ReadOnly Property AMT As SegmentContainer(Of Dom.Segments.AMT)
				'''<summary>File Information</summary>
				ReadOnly Property K3 As SegmentContainer(Of Dom.Segments.K3)
				'''<summary>Note/Special Instruction</summary>
				ReadOnly Property NTE As SegmentContainer(Of Dom.Segments.NTE)
				'''<summary>Purchase Service</summary>
				Property PS1 As Dom.Segments.PS1
				'''<summary>Immunization Status</summary>
				ReadOnly Property IMM As SegmentContainer(Of Dom.Segments.IMM)
				'''<summary>Health Care Services Delivery</summary>
				Property HSD As Dom.Segments.HSD
				'''<summary>Health Care Pricing</summary>
				Property HCP As Dom.Segments.HCP
				'''<summary>Item Identification</summary>
				ReadOnly Property Loop2410 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2410)
				'''<summary>Individual or Organizational Name</summary>
				ReadOnly Property Loop2420 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2420)
				'''<summary>Service Line Adjudication</summary>
				ReadOnly Property Loop2430 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2430)
				'''<summary>Industry Code Identification</summary>
				ReadOnly Property Loop2440 As LoopContainer(Of Dom.Transactions.Transaction837.Loops.Loop2440)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2410
				Inherits ILoop
				'''<summary>Item Identification</summary>
				Property LIN As Dom.Segments.LIN
				'''<summary>Pricing Information</summary>
				Property CTP As Dom.Segments.CTP
				'''<summary>Reference Information</summary>
				Property REF As Dom.Segments.REF
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2420
				Inherits ILoop
				'''<summary>Individual or Organizational Name</summary>
				Property NM1 As Dom.Segments.NM1
				'''<summary>Provider Information</summary>
				Property PRV As Dom.Segments.PRV
				'''<summary>Additional Name Information</summary>
				ReadOnly Property N2 As SegmentContainer(Of Dom.Segments.N2)
				'''<summary>Party Location</summary>
				ReadOnly Property N3 As SegmentContainer(Of Dom.Segments.N3)
				'''<summary>Geographic Location</summary>
				Property N4 As Dom.Segments.N4
				'''<summary>Reference Information</summary>
				ReadOnly Property REF As SegmentContainer(Of Dom.Segments.REF)
				'''<summary>Administrative Communications Contact</summary>
				ReadOnly Property PER As SegmentContainer(Of Dom.Segments.PER)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2430
				Inherits ILoop
				'''<summary>Service Line Adjudication</summary>
				Property SVD As Dom.Segments.SVD
				'''<summary>Claims Adjustment</summary>
				ReadOnly Property CAS As SegmentContainer(Of Dom.Segments.CAS)
				'''<summary>Date or Time or Period</summary>
				ReadOnly Property DTP As SegmentContainer(Of Dom.Segments.DTP)
				'''<summary>Monetary Amount Information</summary>
				ReadOnly Property AMT As SegmentContainer(Of Dom.Segments.AMT)
			End Interface
			'''<summary></summary>
			'''<remarks></remarks>
			Public Interface Loop2440
				Inherits ILoop
				'''<summary>Industry Code Identification</summary>
				Property LQ As Dom.Segments.LQ
				'''<summary>Supporting Documentation</summary>
				ReadOnly Property FRM As SegmentContainer(Of Dom.Segments.FRM)
			End Interface

		End Namespace 'Loops


		Namespace Transaction837_Q1
			Namespace Segments

				Namespace Loop1000A

					'''<summary>Submitter Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Submitter Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>Submitter First Name</summary>
						Property NM104 As String
						'''<summary>Submitter Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Submitter Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Submitter EDI Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Submitter Contact Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER07 As String
						'''<summary>Communication Number</summary>
						Property PER08 As String
					End Interface
				End Namespace 'Loop1000A

				Namespace Loop1000B

					'''<summary>Receiver Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Receiver Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Receiver Primary Identifier</summary>
						Property NM109 As String
					End Interface
				End Namespace 'Loop1000B

				Namespace Loop2000A

					'''<summary>Billing Provider Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>Hierarchical Child Code</summary>
						Property HL04 As String
					End Interface
					'''<summary>Billing Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Foreign Currency Information</summary>
					Public Interface CUR
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property CUR01 As String
						'''<summary>The submitter must use the Currency Code, not the Country Code, for this element. For example the Currency Code CAD = Canadian dollars would be valid, while CA = Canada would be invalid.</summary>
						Property CUR02 As String
					End Interface
				End Namespace 'Loop2000A

				Namespace Loop2010AA

					'''<summary>Billing Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Billing Provider Last or Organizational Name</summary>
						Property NM103 As String
						'''<summary>Billing Provider First Name</summary>
						Property NM104 As String
						'''<summary>Billing Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Billing Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Billing Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Billing Provider Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Billing Provider Address Line</summary>
						Property N301 As String
						'''<summary>Billing Provider Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Billing Provider City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Billing Provider City Name</summary>
						Property N401 As String
						'''<summary>Billing Provider State or Province Code</summary>
						Property N402 As String
						'''<summary>Billing Provider Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Billing Provider Tax Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Billing Provider Tax Identification Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Billing Provider UPIN/License Information</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Billing Provider License and/or UPIN Information</summary>
						Property REF02 As String
					End Interface
					'''<summary>Billing Provider Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Billing Provider Contact Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER07 As String
						'''<summary>Communication Number</summary>
						Property PER08 As String
					End Interface
				End Namespace 'Loop2010AA

				Namespace Loop2010AB

					'''<summary>Pay-to Address Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Pay-to Address - ADDRESS</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Pay-To Address Line</summary>
						Property N301 As String
						'''<summary>Pay-To Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Pay-To Address City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Pay-to Address City Name</summary>
						Property N401 As String
						'''<summary>Pay-to Address State Code</summary>
						Property N402 As String
						'''<summary>Pay-to Address Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
				End Namespace 'Loop2010AB

				Namespace Loop2010AC

					'''<summary>Pay-To Plan Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Pay-To Plan Organizational Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>Pay-To Plan Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Pay-to Plan Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Pay-To Plan Address Line</summary>
						Property N301 As String
						'''<summary>Pay-To Plan Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Pay-To Plan City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Pay-To Plan City Name</summary>
						Property N401 As String
						'''<summary>Pay-To Plan State or Province Code</summary>
						Property N402 As String
						'''<summary>Pay-To Plan Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Pay-to Plan Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Pay-to Plan Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Pay-To Plan Tax Identification Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Pay-To Plan Tax Identification Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010AC

				Namespace Loop2000B

					'''<summary>Subscriber Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Parent ID Number</summary>
						Property HL02 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>The claim (Loop ID-2300) can be used when HL04 has no subordinate levels (HL04 = 0) or when HL04 has subordinate levels indicated (HL04 = 1).</summary>
						Property HL04 As String
					End Interface
					'''<summary>Subscriber Information</summary>
					Public Interface SBR
						Inherits ISegment

						'''<summary>Payer Responsibility Sequence Number Code</summary>
						Property SBR01 As String
						'''<summary>Individual Relationship Code</summary>
						Property SBR02 As String
						'''<summary>Subscriber Group or Policy Number</summary>
						Property SBR03 As String
						'''<summary>Subscriber Group Name</summary>
						Property SBR04 As String
						'''<summary>Insurance Type Code</summary>
						Property SBR05 As String
						'''<summary>Claim Filing Indicator Code</summary>
						Property SBR09 As String
					End Interface
					'''<summary>Patient Information</summary>
					Public Interface PAT
						Inherits ISegment

						'''<summary>Date Time Period Format Qualifier</summary>
						Property PAT05 As String
						'''<summary>Patient Death Date</summary>
						Property PAT06 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property PAT07 As String
						'''<summary>Patient Weight</summary>
						Property PAT08 As Decimal?
						'''<summary>Pregnancy Indicator</summary>
						Property PAT09 As String
					End Interface
				End Namespace 'Loop2000B

				Namespace Loop2010BA

					'''<summary>Subscriber Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Subscriber Last Name</summary>
						Property NM103 As String
						'''<summary>Subscriber First Name</summary>
						Property NM104 As String
						'''<summary>Subscriber Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Examples: I, II, III, IV, Jr, Sr<br />This data element is used only to indicate generation or patronymic.</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Subscriber Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Subscriber Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Subscriber Address Line</summary>
						Property N301 As String
						'''<summary>Subscriber Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Subscriber City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Subscriber City Name</summary>
						Property N401 As String
						'''<summary>Subscriber State Code</summary>
						Property N402 As String
						'''<summary>Subscriber Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Subscriber Demographic Information</summary>
					Public Interface DMG
						Inherits ISegment

						'''<summary>Date Time Period Format Qualifier</summary>
						Property DMG01 As String
						'''<summary>Subscriber Birth Date</summary>
						Property DMG02 As String
						'''<summary>Subscriber Gender Code</summary>
						Property DMG03 As String
					End Interface
					'''<summary>Subscriber Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Subscriber Supplemental Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Property and Casualty Claim Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property Casualty Claim Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Property and Casualty Subscriber Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
					End Interface
				End Namespace 'Loop2010BA

				Namespace Loop2010BB

					'''<summary>Payer Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Payer Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>Payer Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Payer Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Payer Address Line</summary>
						Property N301 As String
						'''<summary>Payer Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Payer City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Payer City Name</summary>
						Property N401 As String
						'''<summary>Payer State or Province Code</summary>
						Property N402 As String
						'''<summary>Payer Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Payer Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Payer Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Billing Provider Secondary Identification</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Billing Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010BB

				Namespace Loop2000C

					'''<summary>Patient Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Parent ID Number</summary>
						Property HL02 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>Hierarchical Child Code</summary>
						Property HL04 As String
					End Interface
					'''<summary>Patient Information</summary>
					Public Interface PAT
						Inherits ISegment

						'''<summary>Individual Relationship Code</summary>
						Property PAT01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property PAT05 As String
						'''<summary>Patient Death Date</summary>
						Property PAT06 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property PAT07 As String
						'''<summary>Patient Weight</summary>
						Property PAT08 As Decimal?
						'''<summary>Pregnancy Indicator</summary>
						Property PAT09 As String
					End Interface
				End Namespace 'Loop2000C

				Namespace Loop2010CA

					'''<summary>Patient Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Patient Last Name</summary>
						Property NM103 As String
						'''<summary>Patient First Name</summary>
						Property NM104 As String
						'''<summary>Patient Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Patient Name Suffix</summary>
						Property NM107 As String
					End Interface
					'''<summary>Patient Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Patient Address Line</summary>
						Property N301 As String
						'''<summary>Patient Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Patient City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Patient City Name</summary>
						Property N401 As String
						'''<summary>Patient State Code</summary>
						Property N402 As String
						'''<summary>Patient Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Patient Demographic Information</summary>
					Public Interface DMG
						Inherits ISegment

						'''<summary>Date Time Period Format Qualifier</summary>
						Property DMG01 As String
						'''<summary>Patient Birth Date</summary>
						Property DMG02 As String
						'''<summary>Patient Gender Code</summary>
						Property DMG03 As String
					End Interface
					'''<summary>Property and Casualty Claim Number</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property Casualty Claim Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Property and Casualty Patient Identifier</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property and Casualty Patient Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Property and Casualty Patient Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
					End Interface
				End Namespace 'Loop2010CA

				Namespace Loop2300

					'''<summary>Claim Information</summary>
					Public Interface CLM
						Inherits ISegment

						'''<summary>Patient Control Number</summary>
						Property CLM01 As String
						'''<summary>The Total Claim Charge Amount must be greater than or equal to zero.</summary>
						Property CLM02 As Decimal?
						'''<summary>CLM05 applies to all service lines unless it is over written at the line level.</summary>
						Property CLM05 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.CLM.CLM_05.C023
						'''<summary>Provider or Supplier Signature Indicator</summary>
						Property CLM06 As String
						'''<summary>Within this element the context of the word assignment is related to the relationship between the provider and the payer. This is NOT the field for reporting whether the patient has or has not assigned benefits to the provider. The benefit assignment indicator is in CLM08.</summary>
						Property CLM07 As String
						'''<summary>This element answers the question whether or not the insured has authorized the plan to remit payment directly to the provider.</summary>
						Property CLM08 As String
						'''<summary>The Release of Information response is limited to the information carried in this claim.</summary>
						Property CLM09 As String
						'''<summary>Patient Signature Source Code</summary>
						Property CLM10 As String
						'''<summary></summary>
						Property CLM11 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.CLM.CLM_11.C024
						'''<summary>Special Program Indicator</summary>
						Property CLM12 As String
						'''<summary>Delay Reason Code</summary>
						Property CLM20 As String
					End Interface
					'''<summary>Date - Onset of Current Illness or Symptom</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Onset of Current Illness or Injury Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Initial Treatment Date</summary>
					Public Interface DTP_1
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Initial Treatment Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Last Seen Date</summary>
					Public Interface DTP_2
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Last Seen Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Acute Manifestation</summary>
					Public Interface DTP_3
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Acute Manifestation Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Accident</summary>
					Public Interface DTP_4
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Accident Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Last Menstrual Period</summary>
					Public Interface DTP_5
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Last Menstrual Period Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Last X-ray Date</summary>
					Public Interface DTP_6
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Last X-Ray Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Hearing and Vision Prescription Date</summary>
					Public Interface DTP_7
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Prescription Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Disability Dates</summary>
					Public Interface DTP_8
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Disability From Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Last Worked</summary>
					Public Interface DTP_9
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Last Worked Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Authorized Return to Work</summary>
					Public Interface DTP_10
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Work Return Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Admission</summary>
					Public Interface DTP_11
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Related Hospitalization Admission Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Discharge</summary>
					Public Interface DTP_12
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Related Hospitalization Discharge Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Assumed and Relinquished Care Dates</summary>
					Public Interface DTP_13
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Assumed or Relinquished Care Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Property and Casualty Date of First Contact</summary>
					Public Interface DTP_14
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Date Time Period</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Repricer Received Date</summary>
					Public Interface DTP_15
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Repricer Received Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Claim Supplemental Information</summary>
					Public Interface PWK
						Inherits ISegment

						'''<summary>Attachment Report Type Code</summary>
						Property PWK01 As String
						'''<summary>Attachment Transmission Code</summary>
						Property PWK02 As String
						'''<summary>Identification Code Qualifier</summary>
						Property PWK05 As String
						'''<summary>Attachment Control Number</summary>
						Property PWK06 As String
					End Interface
					'''<summary>Contract Information</summary>
					Public Interface CN1
						Inherits ISegment

						'''<summary>Contract Type Code</summary>
						Property CN101 As String
						'''<summary>Contract Amount</summary>
						Property CN102 As Decimal?
						'''<summary>Contract Percentage</summary>
						Property CN103 As Decimal?
						'''<summary>Contract Code</summary>
						Property CN104 As String
						'''<summary>Terms Discount Percentage</summary>
						Property CN105 As Decimal?
						'''<summary>Contract Version Identifier</summary>
						Property CN106 As String
					End Interface
					'''<summary>Patient Amount Paid</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Patient Amount Paid</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Service Authorization Exception Code</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Allowable values for this element are:<br /><T>1<T>Immediate/Urgent Care<br /><T>2<T>Services Rendered in a Retroactive Period<br /><T>3<T>Emergency Care<br /><T>4<T>Client has Temporary Medicaid<br /><T>5<T>Request from County for Second Opinion to Determine<br /><T><T>if Recipient Can Work<br /><T>6<T>Request for Override Pending<br /><T>7<T>Special Handling</summary>
						Property REF02 As String
					End Interface
					'''<summary>Mandatory Medicare (Section 4081) Crossover Indicator</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The allowed values for this element are:<br /><T>Y<T>4081<br /><T>N<T>Regular crossover</summary>
						Property REF02 As String
					End Interface
					'''<summary>Mammography Certification Number</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Mammography Certification Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Referral Number</summary>
					Public Interface REF_3
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referral Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Prior Authorization</summary>
					Public Interface REF_4
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Prior Authorization Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Payer Claim Control Number</summary>
					Public Interface REF_5
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Payer Claim Control Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Clinical Laboratory Improvement Amendment (CLIA) Number</summary>
					Public Interface REF_6
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Clinical Laboratory Improvement Amendment Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Repriced Claim Number</summary>
					Public Interface REF_7
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Repriced Claim Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Adjusted Repriced Claim Number</summary>
					Public Interface REF_8
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Adjusted Repriced Claim Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Investigational Device Exemption Number</summary>
					Public Interface REF_9
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Investigational Device Exemption Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Claim Identifier For Transmission Intermediaries</summary>
					Public Interface REF_10
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The value carried in this element is limited to a maximum of 20 positions.</summary>
						Property REF02 As String
					End Interface
					'''<summary>Medical Record Number</summary>
					Public Interface REF_11
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Medical Record Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Demonstration Project Identifier</summary>
					Public Interface REF_12
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Demonstration Project Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Care Plan Oversight</summary>
					Public Interface REF_13
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Care Plan Oversight Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>File Information</summary>
					Public Interface K3
						Inherits ISegment

						'''<summary>Fixed Format Information</summary>
						Property K301 As String
					End Interface
					'''<summary>Claim Note</summary>
					Public Interface NTE
						Inherits ISegment

						'''<summary>Note Reference Code</summary>
						Property NTE01 As String
						'''<summary>Claim Note Text</summary>
						Property NTE02 As String
					End Interface
					'''<summary>Ambulance Transport Information</summary>
					Public Interface CR1
						Inherits ISegment

						'''<summary>Unit or Basis for Measurement Code</summary>
						Property CR101 As String
						'''<summary>Patient Weight</summary>
						Property CR102 As Decimal?
						'''<summary>Ambulance Transport Reason Code</summary>
						Property CR104 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property CR105 As String
						'''<summary>Transport Distance</summary>
						Property CR106 As Decimal?
						'''<summary>Round Trip Purpose Description</summary>
						Property CR109 As String
						'''<summary>Stretcher Purpose Description</summary>
						Property CR110 As String
					End Interface
					'''<summary>Spinal Manipulation Service Information</summary>
					Public Interface CR2
						Inherits ISegment

						'''<summary>Patient Condition Code</summary>
						Property CR208 As String
						'''<summary>Patient Condition Description</summary>
						Property CR210 As String
						'''<summary>Patient Condition Description</summary>
						Property CR211 As String
					End Interface
					'''<summary>Ambulance Certification</summary>
					Public Interface CRC
						Inherits ISegment

						'''<summary>Code Category</summary>
						Property CRC01 As String
						'''<summary>Certification Condition Indicator</summary>
						Property CRC02 As String
						'''<summary>The codes for CRC03 also can be used for CRC04 through CRC07.</summary>
						Property CRC03 As String
						'''<summary>Condition Code</summary>
						Property CRC04 As String
						'''<summary>Condition Code</summary>
						Property CRC05 As String
						'''<summary>Condition Code</summary>
						Property CRC06 As String
						'''<summary>Condition Code</summary>
						Property CRC07 As String
					End Interface
					'''<summary>Patient Condition Information: Vision</summary>
					Public Interface CRC_1
						Inherits ISegment

						'''<summary>Code Category</summary>
						Property CRC01 As String
						'''<summary>Certification Condition Indicator</summary>
						Property CRC02 As String
						'''<summary>Condition Code</summary>
						Property CRC03 As String
						'''<summary>Use the codes listed in CRC03.</summary>
						Property CRC04 As String
						'''<summary>Use the codes listed in CRC03.</summary>
						Property CRC05 As String
						'''<summary>Use the codes listed in CRC03.</summary>
						Property CRC06 As String
						'''<summary>Use the codes listed in CRC03.</summary>
						Property CRC07 As String
					End Interface
					'''<summary>Homebound Indicator</summary>
					Public Interface CRC_2
						Inherits ISegment

						'''<summary>Code Category</summary>
						Property CRC01 As String
						'''<summary>Certification Condition Indicator</summary>
						Property CRC02 As String
						'''<summary>Homebound Indicator</summary>
						Property CRC03 As String
					End Interface
					'''<summary>EPSDT Referral</summary>
					Public Interface CRC_3
						Inherits ISegment

						'''<summary>Code Qualifier</summary>
						Property CRC01 As String
						'''<summary>The response answers the question: Was an EPSDT referral given to the patient?</summary>
						Property CRC02 As String
						'''<summary>The codes for CRC03 also can be used for CRC04 through CRC05.</summary>
						Property CRC03 As String
						'''<summary>Use the codes listed in CRC03.</summary>
						Property CRC04 As String
						'''<summary>Use the codes listed in CRC03.</summary>
						Property CRC05 As String
					End Interface
					'''<summary>Health Care Diagnosis Code</summary>
					Public Interface HI
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI.HI_12.C022
					End Interface
					'''<summary>Anesthesia Related Procedure</summary>
					Public Interface HI_1
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_1.HI_1_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_1.HI_1_02.C022
					End Interface
					'''<summary>Condition Information</summary>
					Public Interface HI_2
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2300.HI_2.HI_2_12.C022
					End Interface
					'''<summary>Claim Pricing/Repricing Information</summary>
					Public Interface HCP
						Inherits ISegment

						'''<summary>Pricing Methodology</summary>
						Property HCP01 As String
						'''<summary>Repriced Allowed Amount</summary>
						Property HCP02 As Decimal?
						'''<summary>Repriced Saving Amount</summary>
						Property HCP03 As Decimal?
						'''<summary>Repricing Organization Identifier</summary>
						Property HCP04 As String
						'''<summary>Repricing Per Diem or Flat Rate Amount</summary>
						Property HCP05 As Decimal?
						'''<summary>Repriced Approved Ambulatory Patient Group Code</summary>
						Property HCP06 As String
						'''<summary>Repriced Approved Ambulatory Patient Group Amount</summary>
						Property HCP07 As Decimal?
						'''<summary>This information is specific to the destination payer reported in Loop ID-2010BB.</summary>
						Property HCP13 As String
						'''<summary>This information is specific to the destination payer reported in Loop ID-2010BB.</summary>
						Property HCP14 As String
						'''<summary>Exception Code</summary>
						Property HCP15 As String
					End Interface
				End Namespace 'Loop2300

				Namespace Loop2310A

					'''<summary>Referring Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Referring Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Referring Provider First Name</summary>
						Property NM104 As String
						'''<summary>Referring Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Referring Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Referring Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Referring Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referring Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310A

				Namespace Loop2310B

					'''<summary>Rendering Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Rendering Provider Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>Rendering Provider First Name</summary>
						Property NM104 As String
						'''<summary>Rendering Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Rendering Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Rendering Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Rendering Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310B

				Namespace Loop2310C

					'''<summary>Service Facility Location Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Laboratory or Facility Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Laboratory or Facility Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Service Facility Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Laboratory or Facility Address Line</summary>
						Property N301 As String
						'''<summary>Laboratory or Facility Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Laboratory or Facility City Name</summary>
						Property N401 As String
						'''<summary>Laboratory or Facility State or Province Code</summary>
						Property N402 As String
						'''<summary>Laboratory or Facility Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Service Facility Location Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Laboratory or Facility Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Service Facility Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
					End Interface
				End Namespace 'Loop2310C

				Namespace Loop2310D

					'''<summary>Supervising Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Supervising Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Supervising Provider First Name</summary>
						Property NM104 As String
						'''<summary>Supervising Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Supervising Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Supervising Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Supervising Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Supervising Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310D

				Namespace Loop2310E

					'''<summary>Ambulance Pick-up Location</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Ambulance Pick-up Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Ambulance Pick-up Address Line</summary>
						Property N301 As String
						'''<summary>Ambulance Pick-up Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Ambulance Pick-up Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Ambulance Pick-up City Name</summary>
						Property N401 As String
						'''<summary>Ambulance Pick-up State or Province Code</summary>
						Property N402 As String
						'''<summary>Ambulance Pick-up Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
				End Namespace 'Loop2310E

				Namespace Loop2310F

					'''<summary>Ambulance Drop-off Location</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Ambulance Drop-off Location</summary>
						Property NM103 As String
					End Interface
					'''<summary>Ambulance Drop-off Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Ambulance Drop-off Address Line</summary>
						Property N301 As String
						'''<summary>Ambulance Drop-off Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Ambulance Drop-off Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Ambulance Drop-off City Name</summary>
						Property N401 As String
						'''<summary>Ambulance Drop-off State or Province Code</summary>
						Property N402 As String
						'''<summary>Ambulance Drop-off Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
				End Namespace 'Loop2310F

				Namespace Loop2320

					'''<summary>Other Subscriber Information</summary>
					Public Interface SBR
						Inherits ISegment

						'''<summary>Payer Responsibility Sequence Number Code</summary>
						Property SBR01 As String
						'''<summary>Individual Relationship Code</summary>
						Property SBR02 As String
						'''<summary>Insured Group or Policy Number</summary>
						Property SBR03 As String
						'''<summary>Other Insured Group Name</summary>
						Property SBR04 As String
						'''<summary>Insurance Type Code</summary>
						Property SBR05 As String
						'''<summary>Claim Filing Indicator Code</summary>
						Property SBR09 As String
					End Interface
					'''<summary>Claim Level Adjustments</summary>
					Public Interface CAS
						Inherits ISegment

						'''<summary>Claim Adjustment Group Code</summary>
						Property CAS01 As String
						'''<summary>See CODE SOURCE 139: Claim Adjustment Reason Code</summary>
						Property CAS02 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS03 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS04 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS05 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS06 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS07 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS08 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS09 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS10 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS11 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS12 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS13 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS14 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS15 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS16 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS17 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS18 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS19 As Decimal?
					End Interface
					'''<summary>Coordination of Benefits (COB) Payer Paid Amount</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>It is acceptable to show <169>0<170> as the amount paid.</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Coordination of Benefits (COB) Total Non-Covered Amount</summary>
					Public Interface AMT_1
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Non-Covered Charge Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Remaining Patient Liability</summary>
					Public Interface AMT_2
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Remaining Patient Liability</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Other Insurance Coverage Information</summary>
					Public Interface OI
						Inherits ISegment

						'''<summary>Benefits Assignment Certification Indicator</summary>
						Property OI03 As String
						'''<summary>Patient Signature Source Code</summary>
						Property OI04 As String
						'''<summary>This is a crosswalk from CLM09 when doing COB.</summary>
						Property OI06 As String
					End Interface
					'''<summary>Outpatient Adjudication Information</summary>
					Public Interface MOA
						Inherits ISegment

						'''<summary>Reimbursement Rate</summary>
						Property MOA01 As Decimal?
						'''<summary>HCPCS Payable Amount</summary>
						Property MOA02 As Decimal?
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA03 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA04 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA05 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA06 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA07 As String
						'''<summary>End Stage Renal Disease Payment Amount</summary>
						Property MOA08 As Decimal?
						'''<summary>Non-Payable Professional Component Billed Amount</summary>
						Property MOA09 As Decimal?
					End Interface
				End Namespace 'Loop2320

				Namespace Loop2330A

					'''<summary>Other Subscriber Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Other Insured Last Name</summary>
						Property NM103 As String
						'''<summary>Other Insured First Name</summary>
						Property NM104 As String
						'''<summary>Other Insured Middle Name</summary>
						Property NM105 As String
						'''<summary>Other Insured Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Other Insured Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Other Subscriber Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Other Subscriber Address Line</summary>
						Property N301 As String
						'''<summary>Other Insured Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Other Subscriber City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Other Subscriber City Name</summary>
						Property N401 As String
						'''<summary>Other Subscriber State or Province Code</summary>
						Property N402 As String
						'''<summary>Other Subscriber Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Other Subscriber Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Insured Additional Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330A

				Namespace Loop2330B

					'''<summary>Other Payer Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Other Payer Organization Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>When sending Line Adjudication Information for this payer, the identifier sent in SVD01 (Payer Identifier) of Loop ID-2430 (Line  Adjudication Information) must match this value.;</summary>
						Property NM109 As String
					End Interface
					'''<summary>Other Payer Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Other Payer Address Line</summary>
						Property N301 As String
						'''<summary>Other Payer Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Other Payer City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Other Payer City Name</summary>
						Property N401 As String
						'''<summary>Other Payer State or Province Code</summary>
						Property N402 As String
						'''<summary>Other Payer Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Claim Check or Remittance Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Adjudication or Payment Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Other Payer Secondary Identifier</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Prior Authorization Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Prior Authorization Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Referral Number</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Prior Authorization or Referral Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Claim Adjustment Indicator</summary>
					Public Interface REF_3
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The only valid value for this element is `Y'.</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Claim Control Number</summary>
					Public Interface REF_4
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer's Claim Control Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330B

				Namespace Loop2330C

					'''<summary>Other Payer Referring Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Referring Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Referring Provider Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330C

				Namespace Loop2330D

					'''<summary>Other Payer Rendering Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330D

				Namespace Loop2330E

					'''<summary>Other Payer Service Facility Location</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Service Facility Location Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Service Facility Location Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330E

				Namespace Loop2330F

					'''<summary>Other Payer Supervising Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Supervising Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Supervising Provider Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330F

				Namespace Loop2330G

					'''<summary>Other Payer Billing Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Billing Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Billing Provider Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330G

				Namespace Loop2400

					'''<summary>Service Line Number</summary>
					Public Interface LX
						Inherits ISegment

						'''<summary>Assigned Number</summary>
						Property LX01 As Decimal?
					End Interface
					'''<summary>Professional Service</summary>
					Public Interface SV1
						Inherits ISegment

						'''<summary></summary>
						Property SV101 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2400.SV1.SV1_01.C003
						'''<summary>This is the total charge amount for this service line. The amount is inclusive of the provider's base charge and any applicable tax and/or postage claimed amounts reported within this line's AMT segments.</summary>
						Property SV102 As Decimal?
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property SV103 As String
						'''<summary>Note: When a decimal is needed to report units, include it in this element, for example, "15.6".</summary>
						Property SV104 As Decimal?
						'''<summary>Place of Service Code</summary>
						Property SV105 As String
						'''<summary></summary>
						Property SV107 As Dom.DataElements.Composite.C004
						'''<summary>For this implementation, the listed value takes precedence over the semantic note.<R><br />Emergency definition: The patient requires immediate medical intervention as a result of severe, life threatening, or potentially disabling conditions.</summary>
						Property SV109 As String
						'''<summary>EPSDT Indicator</summary>
						Property SV111 As String
						'''<summary>Family Planning Indicator</summary>
						Property SV112 As String
						'''<summary>Co-Pay Status Code</summary>
						Property SV115 As String
					End Interface
					'''<summary>Durable Medical Equipment Service</summary>
					Public Interface SV5
						Inherits ISegment

						'''<summary></summary>
						Property SV501 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2400.SV5.SV5_01.C003
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property SV502 As String
						'''<summary>Length of Medical Necessity</summary>
						Property SV503 As Decimal?
						'''<summary>DME Rental Price</summary>
						Property SV504 As Decimal?
						'''<summary>DME Purchase Price</summary>
						Property SV505 As Decimal?
						'''<summary>Rental Unit Price Indicator</summary>
						Property SV506 As String
					End Interface
					'''<summary>Line Supplemental Information</summary>
					Public Interface PWK
						Inherits ISegment

						'''<summary>Attachment Report Type Code</summary>
						Property PWK01 As String
						'''<summary>Required when the actual attachment is maintained by an attachment warehouse or similar vendor.</summary>
						Property PWK02 As String
						'''<summary>Identification Code Qualifier</summary>
						Property PWK05 As String
						'''<summary>Attachment Control Number</summary>
						Property PWK06 As String
					End Interface
					'''<summary>Durable Medical Equipment Certificate of Medical Necessity Indicator</summary>
					Public Interface PWK_1
						Inherits ISegment

						'''<summary>Attachment Report Type Code</summary>
						Property PWK01 As String
						'''<summary>Attachment Transmission Code</summary>
						Property PWK02 As String
					End Interface
					'''<summary>Ambulance Transport Information</summary>
					Public Interface CR1
						Inherits ISegment

						'''<summary>Unit or Basis for Measurement Code</summary>
						Property CR101 As String
						'''<summary>Patient Weight</summary>
						Property CR102 As Decimal?
						'''<summary>Ambulance Transport Reason Code</summary>
						Property CR104 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property CR105 As String
						'''<summary>0 (zero) is a valid value when ambulance services do not include a charge for mileage.</summary>
						Property CR106 As Decimal?
						'''<summary>Round Trip Purpose Description</summary>
						Property CR109 As String
						'''<summary>Stretcher Purpose Description</summary>
						Property CR110 As String
					End Interface
					'''<summary>Durable Medical Equipment Certification</summary>
					Public Interface CR3
						Inherits ISegment

						'''<summary>Certification Type Code</summary>
						Property CR301 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property CR302 As String
						'''<summary>Length of time DME equipment is needed.</summary>
						Property CR303 As Decimal?
					End Interface
					'''<summary>Ambulance Certification</summary>
					Public Interface CRC
						Inherits ISegment

						'''<summary>Code Category</summary>
						Property CRC01 As String
						'''<summary>Certification Condition Indicator</summary>
						Property CRC02 As String
						'''<summary>The codes for CRC03 also can be used for CRC04 through CRC07.</summary>
						Property CRC03 As String
						'''<summary>Condition Code</summary>
						Property CRC04 As String
						'''<summary>Condition Code</summary>
						Property CRC05 As String
						'''<summary>Condition Code</summary>
						Property CRC06 As String
						'''<summary>Condition Code</summary>
						Property CRC07 As String
					End Interface
					'''<summary>Hospice Employee Indicator</summary>
					Public Interface CRC_1
						Inherits ISegment

						'''<summary>Code Category</summary>
						Property CRC01 As String
						'''<summary>A "Y" value indicates the provider is employed by the hospice. A "N" value indicates the provider is not employed by the hospice.</summary>
						Property CRC02 As String
						'''<summary>Condition Indicator</summary>
						Property CRC03 As String
					End Interface
					'''<summary>Condition Indicator/Durable Medical Equipment</summary>
					Public Interface CRC_2
						Inherits ISegment

						'''<summary>Code Category</summary>
						Property CRC01 As String
						'''<summary>Certification Condition Indicator</summary>
						Property CRC02 As String
						'''<summary>Condition Indicator</summary>
						Property CRC03 As String
						'''<summary>Condition Indicator</summary>
						Property CRC04 As String
					End Interface
					'''<summary>Date - Service Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>RD8 is required only when the "To and From" dates are different. However, at the discretion of the submitter, RD8 can also be used when the "To and From" dates are the same.</summary>
						Property DTP02 As String
						'''<summary>Service Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Prescription Date</summary>
					Public Interface DTP_1
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Prescription Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>DATE - Certification Revision/Recertification Date</summary>
					Public Interface DTP_2
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Certification Revision or Recertification Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Begin Therapy Date</summary>
					Public Interface DTP_3
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Begin Therapy Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Last Certification Date</summary>
					Public Interface DTP_4
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Last Certification Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Last Seen Date</summary>
					Public Interface DTP_5
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Treatment or Therapy Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Test Date</summary>
					Public Interface DTP_6
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Test Performed Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Shipped Date</summary>
					Public Interface DTP_7
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Shipped Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Last X-ray Date</summary>
					Public Interface DTP_8
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Last X-Ray Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Initial Treatment Date</summary>
					Public Interface DTP_9
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Initial Treatment Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Ambulance Patient Count</summary>
					Public Interface QTY
						Inherits ISegment

						'''<summary>Quantity Qualifier</summary>
						Property QTY01 As String
						'''<summary>Ambulance Patient Count</summary>
						Property QTY02 As Decimal?
					End Interface
					'''<summary>Obstetric Anesthesia Additional Units</summary>
					Public Interface QTY_1
						Inherits ISegment

						'''<summary>Quantity Qualifier</summary>
						Property QTY01 As String
						'''<summary>The number of additional units reported by an anesthesia provider to reflect additional complexity of services.</summary>
						Property QTY02 As Decimal?
					End Interface
					'''<summary>Test Result</summary>
					Public Interface MEA
						Inherits ISegment

						'''<summary>Measurement Reference Identification Code</summary>
						Property MEA01 As String
						'''<summary>Measurement Qualifier</summary>
						Property MEA02 As String
						'''<summary>Test Results</summary>
						Property MEA03 As Decimal?
					End Interface
					'''<summary>Contract Information</summary>
					Public Interface CN1
						Inherits ISegment

						'''<summary>Contract Type Code</summary>
						Property CN101 As String
						'''<summary>Contract Amount</summary>
						Property CN102 As Decimal?
						'''<summary>Contract Percentage</summary>
						Property CN103 As Decimal?
						'''<summary>Contract Code</summary>
						Property CN104 As String
						'''<summary>Terms Discount Percentage</summary>
						Property CN105 As Decimal?
						'''<summary>Contract Version Identifier</summary>
						Property CN106 As String
					End Interface
					'''<summary>Repriced Line Item Reference Number</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Repriced Line Item Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Adjusted Repriced Line Item Reference Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Adjusted Repriced Line Item Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Prior Authorization</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Prior Authorization or Referral Number</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2400.REF_2.REF_2_04.C040
					End Interface
					'''<summary>Line Item Control Number</summary>
					Public Interface REF_3
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The maximum number of characters to be supported for this field is `30'. A submitter may submit fewer characters depending upon their needs. However, the HIPAA maximum requirement to be supported by any receiving system is `30'. Characters beyond 30 are not required to be stored nor returned by any 837-receiving system.</summary>
						Property REF02 As String
					End Interface
					'''<summary>Mammography Certification Number</summary>
					Public Interface REF_4
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Mammography Certification Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Clinical Laboratory Improvement Amendment (CLIA) Number</summary>
					Public Interface REF_5
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Clinical Laboratory Improvement Amendment Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Referring Clinical Laboratory Improvement Amendment (CLIA) Facility Identification</summary>
					Public Interface REF_6
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referring CLIA Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Immunization Batch Number</summary>
					Public Interface REF_7
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Immunization Batch Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Referral Number</summary>
					Public Interface REF_8
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referral Number</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2400.REF_8.REF_8_04.C040
					End Interface
					'''<summary>Sales Tax Amount</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Sales Tax Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Postage Claimed Amount</summary>
					Public Interface AMT_1
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Postage Claimed Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>File Information</summary>
					Public Interface K3
						Inherits ISegment

						'''<summary>Fixed Format Information</summary>
						Property K301 As String
					End Interface
					'''<summary>Line Note</summary>
					Public Interface NTE
						Inherits ISegment

						'''<summary>Note Reference Code</summary>
						Property NTE01 As String
						'''<summary>Line Note Text</summary>
						Property NTE02 As String
					End Interface
					'''<summary>Third Party Organization Notes</summary>
					Public Interface NTE_1
						Inherits ISegment

						'''<summary>Note Reference Code</summary>
						Property NTE01 As String
						'''<summary>Line Note Text</summary>
						Property NTE02 As String
					End Interface
					'''<summary>Purchased Service Information</summary>
					Public Interface PS1
						Inherits ISegment

						'''<summary>Purchased Service Provider Identifier</summary>
						Property PS101 As String
						'''<summary>Purchased Service Charge Amount</summary>
						Property PS102 As Decimal?
					End Interface
					'''<summary>Line Pricing/Repricing Information</summary>
					Public Interface HCP
						Inherits ISegment

						'''<summary>Pricing Methodology</summary>
						Property HCP01 As String
						'''<summary>Repriced Allowed Amount</summary>
						Property HCP02 As Decimal?
						'''<summary>Repriced Saving Amount</summary>
						Property HCP03 As Decimal?
						'''<summary>Repricing Organization Identifier</summary>
						Property HCP04 As String
						'''<summary>Repricing Per Diem or Flat Rate Amount</summary>
						Property HCP05 As Decimal?
						'''<summary>Repriced Approved Ambulatory Patient Group Code</summary>
						Property HCP06 As String
						'''<summary>Repriced Approved Ambulatory Patient Group Amount</summary>
						Property HCP07 As Decimal?
						'''<summary>Product or Service ID Qualifier</summary>
						Property HCP09 As String
						'''<summary>Repriced Approved HCPCS Code</summary>
						Property HCP10 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property HCP11 As String
						'''<summary>Repriced Approved Service Unit Count</summary>
						Property HCP12 As Decimal?
						'''<summary>Reject Reason Code</summary>
						Property HCP13 As String
						'''<summary>Policy Compliance Code</summary>
						Property HCP14 As String
						'''<summary>Exception Code</summary>
						Property HCP15 As String
					End Interface
				End Namespace 'Loop2400

				Namespace Loop2410

					'''<summary>Drug Identification</summary>
					Public Interface LIN
						Inherits ISegment

						'''<summary>Product or Service ID Qualifier</summary>
						Property LIN02 As String
						'''<summary>National Drug Code or Universal Product Number</summary>
						Property LIN03 As String
					End Interface
					'''<summary>Drug Quantity</summary>
					Public Interface CTP
						Inherits ISegment

						'''<summary>National Drug Unit Count</summary>
						Property CTP04 As Decimal?
						'''<summary></summary>
						Property CTP05 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2410.CTP.CTP_05.C001
					End Interface
					'''<summary>Prescription or Compound Drug Association Number</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Prescription Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2410

				Namespace Loop2420A

					'''<summary>Rendering Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Rendering Provider Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>Rendering Provider First Name</summary>
						Property NM104 As String
						'''<summary>Rendering Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Rendering Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Rendering Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Rendering Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2420A.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420A

				Namespace Loop2420B

					'''<summary>Purchased Service Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Purchased Service Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Purchased Service Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Purchased Service Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2420B.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420B

				Namespace Loop2420C

					'''<summary>Service Facility Location Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Laboratory or Facility Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Laboratory or Facility Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Service Facility Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Laboratory or Facility Address Line</summary>
						Property N301 As String
						'''<summary>Laboratory or Facility Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Laboratory or Facility City Name</summary>
						Property N401 As String
						'''<summary>Laboratory or Facility State or Province Code</summary>
						Property N402 As String
						'''<summary>Laboratory or Facility Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Service Facility Location Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Service Facility Location Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2420C.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420C

				Namespace Loop2420D

					'''<summary>Supervising Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Supervising Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Supervising Provider First Name</summary>
						Property NM104 As String
						'''<summary>Supervising Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Supervising Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Supervising Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Supervising Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Supervising Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2420D.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420D

				Namespace Loop2420E

					'''<summary>Ordering Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Ordering Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Ordering Provider First Name</summary>
						Property NM104 As String
						'''<summary>Ordering Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Ordering Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Ordering Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Ordering Provider Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Ordering Provider Address Line</summary>
						Property N301 As String
						'''<summary>Ordering Provider Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Ordering Provider City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Ordering Provider City Name</summary>
						Property N401 As String
						'''<summary>Ordering Provider State or Province Code</summary>
						Property N402 As String
						'''<summary>Ordering Provider Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Ordering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Ordering Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2420E.REF.REF_04.C040
					End Interface
					'''<summary>Ordering Provider Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Ordering Provider Contact Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER07 As String
						'''<summary>Communication Number</summary>
						Property PER08 As String
					End Interface
				End Namespace 'Loop2420E

				Namespace Loop2420F

					'''<summary>Referring Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Referring Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Referring Provider First Name</summary>
						Property NM104 As String
						'''<summary>Referring Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Referring Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Referring Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Referring Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referring Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2420F.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420F

				Namespace Loop2420G

					'''<summary>Ambulance Pick-up Location</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Ambulance Pick-up Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Ambulance Pick-up Address Line</summary>
						Property N301 As String
						'''<summary>Ambulance Pick-up Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Ambulance Pick-up Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Ambulance Pick-up City Name</summary>
						Property N401 As String
						'''<summary>Ambulance Pick-up State or Province Code</summary>
						Property N402 As String
						'''<summary>Ambulance Pick-up Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
				End Namespace 'Loop2420G

				Namespace Loop2420H

					'''<summary>Ambulance Drop-off Location</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Ambulance Drop-off Location</summary>
						Property NM103 As String
					End Interface
					'''<summary>Ambulance Drop-off Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Ambulance Drop-off Address Line</summary>
						Property N301 As String
						'''<summary>Ambulance Drop-off Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Ambulance Drop-off Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Ambulance Drop-off City Name</summary>
						Property N401 As String
						'''<summary>Ambulance Drop-off State or Province Code</summary>
						Property N402 As String
						'''<summary>Ambulance Drop-off Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
				End Namespace 'Loop2420H

				Namespace Loop2430

					'''<summary>Line Adjudication Information</summary>
					Public Interface SVD
						Inherits ISegment

						'''<summary>Other Payer Primary Identifier</summary>
						Property SVD01 As String
						'''<summary>Zero <169>0<170> is an acceptable value for this element.</summary>
						Property SVD02 As Decimal?
						'''<summary>This element contains the procedure code that was used to pay this service line.</summary>
						Property SVD03 As Dom.Transactions.Transaction837.Transaction837_Q1.Composites.Loop2430.SVD.SVD_03.C003
						'''<summary>This is the number of paid units from the remittance advice. When paid units are not present on the remittance advice, use the original billed units.</summary>
						Property SVD05 As Decimal?
						'''<summary>Bundled or Unbundled Line Number</summary>
						Property SVD06 As Decimal?
					End Interface
					'''<summary>Line Adjustment</summary>
					Public Interface CAS
						Inherits ISegment

						'''<summary>Claim Adjustment Group Code</summary>
						Property CAS01 As String
						'''<summary>Adjustment Reason Code</summary>
						Property CAS02 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS03 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS04 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS05 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS06 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS07 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS08 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS09 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS10 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS11 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS12 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS13 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS14 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS15 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS16 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS17 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS18 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS19 As Decimal?
					End Interface
					'''<summary>Line Check or Remittance Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Adjudication or Payment Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Remaining Patient Liability</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Remaining Patient Liability</summary>
						Property AMT02 As Decimal?
					End Interface
				End Namespace 'Loop2430

				Namespace Loop2440

					'''<summary>Form Identification Code</summary>
					Public Interface LQ
						Inherits ISegment

						'''<summary>Code List Qualifier Code</summary>
						Property LQ01 As String
						'''<summary>Form Identifier</summary>
						Property LQ02 As String
					End Interface
					'''<summary>Supporting Documentation</summary>
					Public Interface FRM
						Inherits ISegment

						'''<summary>Question Number/Letter</summary>
						Property FRM01 As String
						'''<summary>Question Response</summary>
						Property FRM02 As String
						'''<summary>Question Response</summary>
						Property FRM03 As String
						'''<summary>Question Response</summary>
						Property FRM04 As Date?
						'''<summary>Question Response</summary>
						Property FRM05 As Decimal?
					End Interface
				End Namespace 'Loop2440

				'''<summary>Transaction Set Header</summary>
				Public Interface ST
					Inherits ISegment

					'''<summary>Transaction Set Identifier Code</summary>
					Property ST01 As String
					'''<summary>The Transaction Set Control Number in ST02 and SE02 must be identical. The number must be unique within a specific interchange (ISA-IEA), but can repeat in other interchanges.</summary>
					Property ST02 As String
					'''<summary>This element must be populated with the guide identifier named in Section 1.2.</summary>
					Property ST03 As String
				End Interface
				'''<summary>Beginning of Hierarchical Transaction</summary>
				Public Interface BHT
					Inherits ISegment

					'''<summary>Hierarchical Structure Code</summary>
					Property BHT01 As String
					'''<summary>BHT02 is intended to convey the electronic transmission status of the 837 batch contained in this ST-SE envelope. The terms "original" and "reissue" refer to the electronic transmission status of the 837 batch, not the billing status.</summary>
					Property BHT02 As String
					'''<summary>The inventory file number of the transmission assigned by the submitter's system. This number operates as a batch control number.</summary>
					Property BHT03 As String
					'''<summary>This is the date that the original submitter created the claim file from their business application system.</summary>
					Property BHT04 As Date?
					'''<summary>This is the time that the original submitter created the claim file from their business application system.</summary>
					Property BHT05 As Timespan?
					'''<summary>Claim or Encounter Identifier</summary>
					Property BHT06 As String
				End Interface
				'''<summary>Transaction Set Trailer</summary>
				Public Interface SE
					Inherits ISegment

					'''<summary>Transaction Segment Count</summary>
					Property SE01 As Decimal?
					'''<summary>The Transaction Set Control Number in ST02 and SE02 must be identical. The number must be unique within a specific interchange (ISA-IEA), but can repeat in other interchanges.</summary>
					Property SE02 As String
				End Interface
			End Namespace 'Segments

			Namespace Composites
				Namespace Loop2300.CLM.CLM_05
					'''<summary></summary>
					Public Interface C023
						'''<summary>Place of Service Code</summary>
						Property C023_01 As String
						'''<summary>Facility Code Qualifier</summary>
						Property C023_02 As String
						'''<summary>Claim Frequency Code</summary>
						Property C023_03 As String
					End Interface
				End Namespace
				Namespace Loop2300.CLM.CLM_11
					'''<summary></summary>
					Public Interface C024
						'''<summary>Related Causes Code</summary>
						Property C024_01 As String
						'''<summary>Related Causes Code</summary>
						Property C024_02 As String
						'''<summary>Auto Accident State or Province Code</summary>
						Property C024_04 As String
						'''<summary>Country Code</summary>
						Property C024_05 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Diagnosis Type Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_1.HI_1_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Anesthesia Related Surgical Procedure</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_1.HI_1_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Industry Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2400.SV1.SV1_01
					'''<summary></summary>
					Public Interface C003
						'''<summary>Product or Service ID Qualifier</summary>
						Property C003_01 As String
						'''<summary>Procedure Code</summary>
						Property C003_02 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_03 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_04 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_05 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_06 As String
						'''<summary>Description</summary>
						Property C003_07 As String
					End Interface
				End Namespace
				Namespace Loop2400.SV5.SV5_01
					'''<summary></summary>
					Public Interface C003
						'''<summary>Procedure Identifier</summary>
						Property C003_01 As String
						'''<summary>This value must be the same as that reported in SV101-2.</summary>
						Property C003_02 As String
					End Interface
				End Namespace
				Namespace Loop2400.REF_2.REF_2_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2400.REF_8.REF_8_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2410.CTP.CTP_05
					'''<summary></summary>
					Public Interface C001
						'''<summary>Code Qualifier</summary>
						Property C001_01 As String
					End Interface
				End Namespace
				Namespace Loop2420A.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420B.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420C.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420D.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420E.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420F.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2430.SVD.SVD_03
					'''<summary></summary>
					Public Interface C003
						'''<summary>Product or Service ID Qualifier</summary>
						Property C003_01 As String
						'''<summary>Procedure Code</summary>
						Property C003_02 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_03 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_04 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_05 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_06 As String
						'''<summary>Procedure Code Description</summary>
						Property C003_07 As String
					End Interface
				End Namespace
			End Namespace 'Composites

			Namespace Loops
				'''<summary>Submitter Name</summary>
				Public Interface Loop1000A
					Inherits ILoop


					'''<summary>Submitter Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000A.NM1

					'''<summary>Submitter EDI Contact Information</summary>
					ReadOnly Property PER As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000A.PER, Dom.Segments.PER)
				End Interface
				'''<summary>Receiver Name</summary>
				Public Interface Loop1000B
					Inherits ILoop


					'''<summary>Receiver Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop1000B.NM1
				End Interface
				'''<summary>Billing Provider Hierarchical Level</summary>
				Public Interface Loop2000A
					Inherits ILoop


					'''<summary>Billing Provider Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.HL

					'''<summary>Billing Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.PRV

					'''<summary>Foreign Currency Information</summary>
					Property CUR As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000A.CUR

					'''<summary>Billing Provider Name</summary>
					Property Loop2010AA As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AA

					'''<summary>Pay-to Address Name</summary>
					Property Loop2010AB As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AB

					'''<summary>Pay-To Plan Name</summary>
					Property Loop2010AC As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010AC
				End Interface
				'''<summary>Billing Provider Name</summary>
				Public Interface Loop2010AA
					Inherits ILoop


					'''<summary>Billing Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.NM1

					'''<summary>Billing Provider Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N3

					'''<summary>Billing Provider City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.N4

					'''<summary>Billing Provider Tax Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF

					'''<summary>Billing Provider UPIN/License Information</summary>
					ReadOnly Property REF_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.REF_1, Dom.Segments.REF)

					'''<summary>Billing Provider Contact Information</summary>
					ReadOnly Property PER As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AA.PER, Dom.Segments.PER)
				End Interface
				'''<summary>Pay-to Address Name</summary>
				Public Interface Loop2010AB
					Inherits ILoop


					'''<summary>Pay-to Address Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.NM1

					'''<summary>Pay-to Address - ADDRESS</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N3

					'''<summary>Pay-To Address City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AB.N4
				End Interface
				'''<summary>Pay-To Plan Name</summary>
				Public Interface Loop2010AC
					Inherits ILoop


					'''<summary>Pay-To Plan Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.NM1

					'''<summary>Pay-to Plan Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N3

					'''<summary>Pay-To Plan City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.N4

					'''<summary>Pay-to Plan Secondary Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF

					'''<summary>Pay-To Plan Tax Identification Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010AC.REF_1
				End Interface
				'''<summary>Subscriber Hierarchical Level</summary>
				Public Interface Loop2000B
					Inherits ILoop


					'''<summary>Subscriber Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000B.HL

					'''<summary>Subscriber Information</summary>
					Property SBR As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000B.SBR

					'''<summary>Subscriber Name</summary>
					Property Loop2010BA As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BA

					'''<summary>Payer Name</summary>
					Property Loop2010BB As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010BB

					'''<summary>Claim Information</summary>
					ReadOnly Property Loop2300 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)
				End Interface
				'''<summary>Subscriber Name</summary>
				Public Interface Loop2010BA
					Inherits ILoop


					'''<summary>Subscriber Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.NM1

					'''<summary>Subscriber Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N3

					'''<summary>Subscriber City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.N4

					'''<summary>Subscriber Demographic Information</summary>
					Property DMG As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.DMG

					'''<summary>Subscriber Secondary Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF

					'''<summary>Property and Casualty Claim Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.REF_1

					'''<summary>Property and Casualty Subscriber Contact Information</summary>
					Property PER As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BA.PER
				End Interface
				'''<summary>Payer Name</summary>
				Public Interface Loop2010BB
					Inherits ILoop


					'''<summary>Payer Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.NM1

					'''<summary>Payer Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N3

					'''<summary>Payer City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.N4

					'''<summary>Payer Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.REF, Dom.Segments.REF)

					'''<summary>Billing Provider Secondary Identification</summary>
					ReadOnly Property REF_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010BB.REF_1, Dom.Segments.REF)
				End Interface
				'''<summary>Patient Hierarchical Level</summary>
				Public Interface Loop2000C
					Inherits ILoop


					'''<summary>Patient Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000C.HL

					'''<summary>Patient Information</summary>
					Property PAT As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2000C.PAT

					'''<summary>Patient Name</summary>
					Property Loop2010CA As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2010CA
				End Interface
				'''<summary>Patient Name</summary>
				Public Interface Loop2010CA
					Inherits ILoop


					'''<summary>Patient Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.NM1

					'''<summary>Patient Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N3

					'''<summary>Patient City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.N4

					'''<summary>Patient Demographic Information</summary>
					Property DMG As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.DMG

					'''<summary>Property and Casualty Claim Number</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF

					'''<summary>Property and Casualty Patient Identifier</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.REF_1

					'''<summary>Property and Casualty Patient Contact Information</summary>
					Property PER As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2010CA.PER
				End Interface
				'''<summary>Claim Information</summary>
				Public Interface Loop2300
					Inherits ILoop


					'''<summary>Claim Information</summary>
					Property CLM As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CLM

					'''<summary>Date - Onset of Current Illness or Symptom</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP

					'''<summary>Date - Initial Treatment Date</summary>
					Property DTP_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_1

					'''<summary>Date - Last Seen Date</summary>
					Property DTP_2 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_2

					'''<summary>Date - Acute Manifestation</summary>
					Property DTP_3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_3

					'''<summary>Date - Accident</summary>
					Property DTP_4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_4

					'''<summary>Date - Last Menstrual Period</summary>
					Property DTP_5 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_5

					'''<summary>Date - Last X-ray Date</summary>
					Property DTP_6 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_6

					'''<summary>Date - Hearing and Vision Prescription Date</summary>
					Property DTP_7 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_7

					'''<summary>Date - Disability Dates</summary>
					Property DTP_8 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_8

					'''<summary>Date - Last Worked</summary>
					Property DTP_9 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_9

					'''<summary>Date - Authorized Return to Work</summary>
					Property DTP_10 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_10

					'''<summary>Date - Admission</summary>
					Property DTP_11 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_11

					'''<summary>Date - Discharge</summary>
					Property DTP_12 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_12

					'''<summary>Date - Assumed and Relinquished Care Dates</summary>
					ReadOnly Property DTP_13 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_13, Dom.Segments.DTP)

					'''<summary>Date - Property and Casualty Date of First Contact</summary>
					Property DTP_14 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_14

					'''<summary>Date - Repricer Received Date</summary>
					Property DTP_15 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.DTP_15

					'''<summary>Claim Supplemental Information</summary>
					ReadOnly Property PWK As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.PWK, Dom.Segments.PWK)

					'''<summary>Contract Information</summary>
					Property CN1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CN1

					'''<summary>Patient Amount Paid</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.AMT

					'''<summary>Service Authorization Exception Code</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF

					'''<summary>Mandatory Medicare (Section 4081) Crossover Indicator</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_1

					'''<summary>Mammography Certification Number</summary>
					Property REF_2 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_2

					'''<summary>Referral Number</summary>
					Property REF_3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_3

					'''<summary>Prior Authorization</summary>
					Property REF_4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_4

					'''<summary>Payer Claim Control Number</summary>
					Property REF_5 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_5

					'''<summary>Clinical Laboratory Improvement Amendment (CLIA) Number</summary>
					Property REF_6 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_6

					'''<summary>Repriced Claim Number</summary>
					Property REF_7 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_7

					'''<summary>Adjusted Repriced Claim Number</summary>
					Property REF_8 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_8

					'''<summary>Investigational Device Exemption Number</summary>
					Property REF_9 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_9

					'''<summary>Claim Identifier For Transmission Intermediaries</summary>
					Property REF_10 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_10

					'''<summary>Medical Record Number</summary>
					Property REF_11 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_11

					'''<summary>Demonstration Project Identifier</summary>
					Property REF_12 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_12

					'''<summary>Care Plan Oversight</summary>
					Property REF_13 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.REF_13

					'''<summary>File Information</summary>
					ReadOnly Property K3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.K3, Dom.Segments.K3)

					'''<summary>Claim Note</summary>
					Property NTE As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.NTE

					'''<summary>Ambulance Transport Information</summary>
					Property CR1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CR1

					'''<summary>Ambulance Certification</summary>
					ReadOnly Property CRC As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC, Dom.Segments.CRC)

					'''<summary>Patient Condition Information: Vision</summary>
					ReadOnly Property CRC_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_1, Dom.Segments.CRC)

					'''<summary>Homebound Indicator</summary>
					Property CRC_2 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_2

					'''<summary>EPSDT Referral</summary>
					Property CRC_3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.CRC_3

					'''<summary>Health Care Diagnosis Code</summary>
					Property HI As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI

					'''<summary>Anesthesia Related Procedure</summary>
					Property HI_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_1

					'''<summary>Condition Information</summary>
					ReadOnly Property HI_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HI_2, Dom.Segments.HI)

					'''<summary>Claim Pricing/Repricing Information</summary>
					Property HCP As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2300.HCP

					'''<summary>Referring Provider Name</summary>
					ReadOnly Property Loop2310A As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)

					'''<summary>Rendering Provider Name</summary>
					Property Loop2310B As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310B

					'''<summary>Service Facility Location Name</summary>
					Property Loop2310C As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310C

					'''<summary>Supervising Provider Name</summary>
					Property Loop2310D As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310D

					'''<summary>Ambulance Pick-up Location</summary>
					Property Loop2310E As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310E

					'''<summary>Ambulance Drop-off Location</summary>
					Property Loop2310F As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2310F

					'''<summary>Other Subscriber Information</summary>
					ReadOnly Property Loop2320 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)

					'''<summary>Service Line Number</summary>
					ReadOnly Property Loop2400 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)
				End Interface
				'''<summary>Referring Provider Name</summary>
				Public Interface Loop2310A
					Inherits ILoop


					'''<summary>Referring Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310A.NM1

					'''<summary>Referring Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310A.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Rendering Provider Name</summary>
				Public Interface Loop2310B
					Inherits ILoop


					'''<summary>Rendering Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.NM1

					'''<summary>Rendering Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.PRV

					'''<summary>Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310B.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Service Facility Location Name</summary>
				Public Interface Loop2310C
					Inherits ILoop


					'''<summary>Service Facility Location Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.NM1

					'''<summary>Service Facility Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N3

					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.N4

					'''<summary>Service Facility Location Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.REF, Dom.Segments.REF)

					'''<summary>Service Facility Contact Information</summary>
					Property PER As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310C.PER
				End Interface
				'''<summary>Supervising Provider Name</summary>
				Public Interface Loop2310D
					Inherits ILoop


					'''<summary>Supervising Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310D.NM1

					'''<summary>Supervising Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Ambulance Pick-up Location</summary>
				Public Interface Loop2310E
					Inherits ILoop


					'''<summary>Ambulance Pick-up Location</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.NM1

					'''<summary>Ambulance Pick-up Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N3

					'''<summary>Ambulance Pick-up Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310E.N4
				End Interface
				'''<summary>Ambulance Drop-off Location</summary>
				Public Interface Loop2310F
					Inherits ILoop


					'''<summary>Ambulance Drop-off Location</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.NM1

					'''<summary>Ambulance Drop-off Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N3

					'''<summary>Ambulance Drop-off Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2310F.N4
				End Interface
				'''<summary>Other Subscriber Information</summary>
				Public Interface Loop2320
					Inherits ILoop


					'''<summary>Other Subscriber Information</summary>
					Property SBR As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.SBR

					'''<summary>Claim Level Adjustments</summary>
					ReadOnly Property CAS As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.CAS, Dom.Segments.CAS)

					'''<summary>Coordination of Benefits (COB) Payer Paid Amount</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT

					'''<summary>Coordination of Benefits (COB) Total Non-Covered Amount</summary>
					Property AMT_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_1

					'''<summary>Remaining Patient Liability</summary>
					Property AMT_2 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.AMT_2

					'''<summary>Outpatient Adjudication Information</summary>
					Property MOA As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2320.MOA

					'''<summary>Other Subscriber Name</summary>
					Property Loop2330A As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330A

					'''<summary>Other Payer Name</summary>
					Property Loop2330B As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330B

					'''<summary>Other Payer Referring Provider</summary>
					ReadOnly Property Loop2330C As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)

					'''<summary>Other Payer Rendering Provider</summary>
					Property Loop2330D As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330D

					'''<summary>Other Payer Service Facility Location</summary>
					Property Loop2330E As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330E

					'''<summary>Other Payer Supervising Provider</summary>
					Property Loop2330F As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330F

					'''<summary>Other Payer Billing Provider</summary>
					Property Loop2330G As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2330G
				End Interface
				'''<summary>Other Subscriber Name</summary>
				Public Interface Loop2330A
					Inherits ILoop


					'''<summary>Other Subscriber Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.NM1

					'''<summary>Other Subscriber Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N3

					'''<summary>Other Subscriber City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.N4

					'''<summary>Other Subscriber Secondary Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330A.REF
				End Interface
				'''<summary>Other Payer Name</summary>
				Public Interface Loop2330B
					Inherits ILoop


					'''<summary>Other Payer Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.NM1

					'''<summary>Other Payer Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N3

					'''<summary>Other Payer City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.N4

					'''<summary>Claim Check or Remittance Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.DTP

					'''<summary>Other Payer Secondary Identifier</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF, Dom.Segments.REF)

					'''<summary>Other Payer Prior Authorization Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_1

					'''<summary>Other Payer Referral Number</summary>
					Property REF_2 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_2

					'''<summary>Other Payer Claim Adjustment Indicator</summary>
					Property REF_3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_3

					'''<summary>Other Payer Claim Control Number</summary>
					Property REF_4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330B.REF_4
				End Interface
				'''<summary>Other Payer Referring Provider</summary>
				Public Interface Loop2330C
					Inherits ILoop


					'''<summary>Other Payer Referring Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330C.NM1

					'''<summary>Other Payer Referring Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330C.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Rendering Provider</summary>
				Public Interface Loop2330D
					Inherits ILoop


					'''<summary>Other Payer Rendering Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330D.NM1

					'''<summary>Other Payer Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Service Facility Location</summary>
				Public Interface Loop2330E
					Inherits ILoop


					'''<summary>Other Payer Service Facility Location</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330E.NM1

					'''<summary>Other Payer Service Facility Location Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330E.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Supervising Provider</summary>
				Public Interface Loop2330F
					Inherits ILoop


					'''<summary>Other Payer Supervising Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330F.NM1

					'''<summary>Other Payer Supervising Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330F.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Billing Provider</summary>
				Public Interface Loop2330G
					Inherits ILoop


					'''<summary>Other Payer Billing Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330G.NM1

					'''<summary>Other Payer Billing Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2330G.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Service Line Number</summary>
				Public Interface Loop2400
					Inherits ILoop


					'''<summary>Service Line Number</summary>
					Property LX As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.LX

					'''<summary>Professional Service</summary>
					Property SV1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.SV1

					'''<summary>Durable Medical Equipment Service</summary>
					Property SV5 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.SV5

					'''<summary>Line Supplemental Information</summary>
					ReadOnly Property PWK As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK, Dom.Segments.PWK)

					'''<summary>Durable Medical Equipment Certificate of Medical Necessity Indicator</summary>
					Property PWK_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PWK_1

					'''<summary>Ambulance Transport Information</summary>
					Property CR1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CR1

					'''<summary>Durable Medical Equipment Certification</summary>
					Property CR3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CR3

					'''<summary>Ambulance Certification</summary>
					ReadOnly Property CRC As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC, Dom.Segments.CRC)

					'''<summary>Hospice Employee Indicator</summary>
					Property CRC_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_1

					'''<summary>Condition Indicator/Durable Medical Equipment</summary>
					Property CRC_2 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CRC_2

					'''<summary>Date - Service Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP

					'''<summary>Date - Prescription Date</summary>
					Property DTP_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_1

					'''<summary>DATE - Certification Revision/Recertification Date</summary>
					Property DTP_2 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_2

					'''<summary>Date - Begin Therapy Date</summary>
					Property DTP_3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_3

					'''<summary>Date - Last Certification Date</summary>
					Property DTP_4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_4

					'''<summary>Date - Last Seen Date</summary>
					Property DTP_5 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_5

					'''<summary>Date - Test Date</summary>
					ReadOnly Property DTP_6 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_6, Dom.Segments.DTP)

					'''<summary>Date - Shipped Date</summary>
					Property DTP_7 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_7

					'''<summary>Date - Last X-ray Date</summary>
					Property DTP_8 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_8

					'''<summary>Date - Initial Treatment Date</summary>
					Property DTP_9 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.DTP_9

					'''<summary>Ambulance Patient Count</summary>
					Property QTY As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY

					'''<summary>Obstetric Anesthesia Additional Units</summary>
					Property QTY_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.QTY_1

					'''<summary>Test Result</summary>
					ReadOnly Property MEA As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.MEA, Dom.Segments.MEA)

					'''<summary>Contract Information</summary>
					Property CN1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.CN1

					'''<summary>Repriced Line Item Reference Number</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF

					'''<summary>Adjusted Repriced Line Item Reference Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_1

					'''<summary>Prior Authorization</summary>
					ReadOnly Property REF_2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_2, Dom.Segments.REF)

					'''<summary>Line Item Control Number</summary>
					Property REF_3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_3

					'''<summary>Mammography Certification Number</summary>
					Property REF_4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_4

					'''<summary>Clinical Laboratory Improvement Amendment (CLIA) Number</summary>
					Property REF_5 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_5

					'''<summary>Referring Clinical Laboratory Improvement Amendment (CLIA) Facility Identification</summary>
					Property REF_6 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_6

					'''<summary>Immunization Batch Number</summary>
					Property REF_7 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_7

					'''<summary>Referral Number</summary>
					ReadOnly Property REF_8 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.REF_8, Dom.Segments.REF)

					'''<summary>Sales Tax Amount</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT

					'''<summary>Postage Claimed Amount</summary>
					Property AMT_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.AMT_1

					'''<summary>File Information</summary>
					ReadOnly Property K3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.K3, Dom.Segments.K3)

					'''<summary>Line Note</summary>
					Property NTE As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE

					'''<summary>Third Party Organization Notes</summary>
					Property NTE_1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.NTE_1

					'''<summary>Purchased Service Information</summary>
					Property PS1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.PS1

					'''<summary>Line Pricing/Repricing Information</summary>
					Property HCP As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2400.HCP

					'''<summary>Rendering Provider Name</summary>
					Property Loop2420A As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420A

					'''<summary>Purchased Service Provider Name</summary>
					Property Loop2420B As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420B

					'''<summary>Service Facility Location Name</summary>
					Property Loop2420C As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420C

					'''<summary>Supervising Provider Name</summary>
					Property Loop2420D As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420D

					'''<summary>Ordering Provider Name</summary>
					Property Loop2420E As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420E

					'''<summary>Referring Provider Name</summary>
					ReadOnly Property Loop2420F As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420F, Dom.Transactions.Transaction837.Loops.Loop2420)

					'''<summary>Ambulance Pick-up Location</summary>
					Property Loop2420G As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420G

					'''<summary>Ambulance Drop-off Location</summary>
					Property Loop2420H As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2420H

					'''<summary>Line Adjudication Information</summary>
					ReadOnly Property Loop2430 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)

					'''<summary>Form Identification Code</summary>
					ReadOnly Property Loop2440 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2440, Dom.Transactions.Transaction837.Loops.Loop2440)
				End Interface
				'''<summary>Rendering Provider Name</summary>
				Public Interface Loop2420A
					Inherits ILoop


					'''<summary>Rendering Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.NM1

					'''<summary>Rendering Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.PRV

					'''<summary>Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420A.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Purchased Service Provider Name</summary>
				Public Interface Loop2420B
					Inherits ILoop


					'''<summary>Purchased Service Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420B.NM1

					'''<summary>Purchased Service Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420B.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Service Facility Location Name</summary>
				Public Interface Loop2420C
					Inherits ILoop


					'''<summary>Service Facility Location Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.NM1

					'''<summary>Service Facility Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N3

					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.N4

					'''<summary>Service Facility Location Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420C.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Supervising Provider Name</summary>
				Public Interface Loop2420D
					Inherits ILoop


					'''<summary>Supervising Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420D.NM1

					'''<summary>Supervising Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Ordering Provider Name</summary>
				Public Interface Loop2420E
					Inherits ILoop


					'''<summary>Ordering Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.NM1

					'''<summary>Ordering Provider Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N3

					'''<summary>Ordering Provider City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.N4

					'''<summary>Ordering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.REF, Dom.Segments.REF)

					'''<summary>Ordering Provider Contact Information</summary>
					Property PER As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420E.PER
				End Interface
				'''<summary>Referring Provider Name</summary>
				Public Interface Loop2420F
					Inherits ILoop


					'''<summary>Referring Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420F.NM1

					'''<summary>Referring Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420F.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Ambulance Pick-up Location</summary>
				Public Interface Loop2420G
					Inherits ILoop


					'''<summary>Ambulance Pick-up Location</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.NM1

					'''<summary>Ambulance Pick-up Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N3

					'''<summary>Ambulance Pick-up Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420G.N4
				End Interface
				'''<summary>Ambulance Drop-off Location</summary>
				Public Interface Loop2420H
					Inherits ILoop


					'''<summary>Ambulance Drop-off Location</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.NM1

					'''<summary>Ambulance Drop-off Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N3

					'''<summary>Ambulance Drop-off Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2420H.N4
				End Interface
				'''<summary>Line Adjudication Information</summary>
				Public Interface Loop2430
					Inherits ILoop


					'''<summary>Line Adjudication Information</summary>
					Property SVD As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.SVD

					'''<summary>Line Adjustment</summary>
					ReadOnly Property CAS As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.CAS, Dom.Segments.CAS)

					'''<summary>Line Check or Remittance Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.DTP

					'''<summary>Remaining Patient Liability</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2430.AMT
				End Interface
				'''<summary>Form Identification Code</summary>
				Public Interface Loop2440
					Inherits ILoop


					'''<summary>Form Identification Code</summary>
					Property LQ As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2440.LQ

					'''<summary>Supporting Documentation</summary>
					ReadOnly Property FRM As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Segments.Loop2440.FRM, Dom.Segments.FRM)
				End Interface

			End Namespace 'Loops

			'''<summary>Health Care Claim - Professional</summary>
			'''<remarks>
			'''<para>This X12 Transaction Set contains the format and establishes the data contents of the Health Care Claim Transaction Set (837) for use within the context of an Electronic Data Interchange (EDI) environment. This transaction set can be used to submit health care claim billing information, encounter information, or both, from providers of health care services to payers, either directly or via intermediary billers and claims clearinghouses. It can also be used to transmit health care claims and billing payment information between payers with different payment responsibilities where coordination of benefits is required or between payers and regulatory agencies to monitor the rendering, billing, and/or payment of health care services within a specific health care/insurance industry segment.<br /><br />For purposes of this standard, providers of health care products or services may include entities such as physicians, hospitals and other medical facilities or suppliers, dentists, and pharmacies, and entities providing medical information to meet regulatory requirements. The payer refers to a third party entity that pays claims or administers the insurance product or benefit or both. For example, a payer may be an insurance company, health maintenance organization (HMO), preferred provider organization (PPO), government agency (Medicare, Medicaid, Civilian Health and Medical Program of the Uniformed Services (CHAMPUS), etc.) or an entity such as a third party administrator (TPA) or third party organization (TPO) that may be contracted by one of those groups. A regulatory agency is an entity responsible, by law or rule, for administering and monitoring a statutory benefits program or a specific health care/insurance industry segment.</para>
			'''</remarks>
			Public Interface TransactionSet

				'''<summary>Transaction Set Header</summary>
				Property ST As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.ST

				'''<summary>Beginning of Hierarchical Transaction</summary>
				Property BHT As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.BHT

				'''<summary>Submitter Name</summary>
				Property Loop1000A As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000A

				'''<summary>Receiver Name</summary>
				Property Loop1000B As Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop1000B

				'''<summary>Billing Provider Hierarchical Level</summary>
				ReadOnly Property Loop2000A As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Subscriber Hierarchical Level</summary>
				ReadOnly Property Loop2000B As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Patient Hierarchical Level</summary>
				ReadOnly Property Loop2000C As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q1.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Transaction Set Trailer</summary>
				Property SE As Dom.Transactions.Transaction837.Transaction837_Q1.Segments.SE
			End Interface
		End Namespace 'Transaction837_Q1

		Namespace Transaction837_Q2
			Namespace Segments

				Namespace Loop1000A

					'''<summary>Submitter Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Submitter Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>Submitter First Name</summary>
						Property NM104 As String
						'''<summary>Submitter Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Submitter Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Submitter EDI Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Submitter Contact Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER07 As String
						'''<summary>Communication Number</summary>
						Property PER08 As String
					End Interface
				End Namespace 'Loop1000A

				Namespace Loop1000B

					'''<summary>Receiver Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Receiver Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Receiver Primary Identifier</summary>
						Property NM109 As String
					End Interface
				End Namespace 'Loop1000B

				Namespace Loop2000A

					'''<summary>Billing Provider Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>Hierarchical Child Code</summary>
						Property HL04 As String
					End Interface
					'''<summary>Billing Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Foreign Currency Information</summary>
					Public Interface CUR
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property CUR01 As String
						'''<summary>The submitter must use the Currency Code, not the Country Code, for this element. For example the Currency Code CAD = Canadian dollars would be valid, while CA = Canada would be invalid.</summary>
						Property CUR02 As String
					End Interface
				End Namespace 'Loop2000A

				Namespace Loop2010AA

					'''<summary>Billing Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Billing Provider Last or Organizational Name</summary>
						Property NM103 As String
						'''<summary>Billing Provider First Name</summary>
						Property NM104 As String
						'''<summary>Billing Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Billing Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Billing Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Billing Provider Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Billing Provider Address Line</summary>
						Property N301 As String
						'''<summary>Billing Provider Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Billing Provider City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Billing Provider City Name</summary>
						Property N401 As String
						'''<summary>Billing Provider State or Province Code</summary>
						Property N402 As String
						'''<summary>Billing Provider Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Billing Provider Tax Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Billing Provider Tax Identification Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Billing Provider UPIN/License Information</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Billing Provider License and/or UPIN Information</summary>
						Property REF02 As String
					End Interface
					'''<summary>Billing Provider Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Billing Provider Contact Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER07 As String
						'''<summary>Communication Number</summary>
						Property PER08 As String
					End Interface
				End Namespace 'Loop2010AA

				Namespace Loop2010AB

					'''<summary>Pay-to Address Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Pay-to Address - ADDRESS</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Pay-To Address Line</summary>
						Property N301 As String
						'''<summary>Pay-To Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Pay-To Address City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Pay-to Address City Name</summary>
						Property N401 As String
						'''<summary>Pay-To Address State or Province Code</summary>
						Property N402 As String
						'''<summary>Pay-to Address Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
				End Namespace 'Loop2010AB

				Namespace Loop2010AC

					'''<summary>Pay-To Plan Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Pay-To Plan Organizational Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>Pay-To Plan Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Pay-to Plan Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Pay-To Plan Address Line</summary>
						Property N301 As String
						'''<summary>Pay-To Plan Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Pay-To Plan City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Pay-To Plan City Name</summary>
						Property N401 As String
						'''<summary>Pay-To Plan State or Province Code</summary>
						Property N402 As String
						'''<summary>Pay-To Plan Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Pay-to Plan Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Pay-to Plan Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Pay-To Plan Tax Identification Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Pay-To Plan Tax Identification Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010AC

				Namespace Loop2000B

					'''<summary>Subscriber Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Parent ID Number</summary>
						Property HL02 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>The claim (Loop ID-2300) can be used when HL04 has no subordinate levels (HL04 = 0) or when HL04 has subordinate levels indicated (HL04 = 1).</summary>
						Property HL04 As String
					End Interface
					'''<summary>Subscriber Information</summary>
					Public Interface SBR
						Inherits ISegment

						'''<summary>Payer Responsibility Sequence Number Code</summary>
						Property SBR01 As String
						'''<summary>Individual Relationship Code</summary>
						Property SBR02 As String
						'''<summary>Subscriber Group or Policy Number</summary>
						Property SBR03 As String
						'''<summary>Subscriber Group Name</summary>
						Property SBR04 As String
						'''<summary>Insurance Type Code</summary>
						Property SBR05 As String
						'''<summary>Claim Filing Indicator Code</summary>
						Property SBR09 As String
					End Interface
				End Namespace 'Loop2000B

				Namespace Loop2010BA

					'''<summary>Subscriber Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Subscriber Last Name</summary>
						Property NM103 As String
						'''<summary>Subscriber First Name</summary>
						Property NM104 As String
						'''<summary>Subscriber Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Subscriber Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Subscriber Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Subscriber Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Subscriber Address Line</summary>
						Property N301 As String
						'''<summary>Subscriber Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Subscriber City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Subscriber City Name</summary>
						Property N401 As String
						'''<summary>Subscriber State Code</summary>
						Property N402 As String
						'''<summary>Subscriber Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Subscriber Demographic Information</summary>
					Public Interface DMG
						Inherits ISegment

						'''<summary>Date Time Period Format Qualifier</summary>
						Property DMG01 As String
						'''<summary>Subscriber Birth Date</summary>
						Property DMG02 As String
						'''<summary>Subscriber Gender Code</summary>
						Property DMG03 As String
					End Interface
					'''<summary>Subscriber Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Subscriber Supplemental Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Property and Casualty Claim Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property Casualty Claim Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010BA

				Namespace Loop2010BB

					'''<summary>Payer Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Payer Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>Payer Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Payer Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Payer Address Line</summary>
						Property N301 As String
						'''<summary>Payer Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Payer City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Payer City Name</summary>
						Property N401 As String
						'''<summary>Payer State Code</summary>
						Property N402 As String
						'''<summary>Payer Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Payer Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Payer Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Billing Provider Secondary Identification</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Billing Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010BB

				Namespace Loop2000C

					'''<summary>Patient Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Parent ID Number</summary>
						Property HL02 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>Hierarchical Child Code</summary>
						Property HL04 As String
					End Interface
					'''<summary>Patient Information</summary>
					Public Interface PAT
						Inherits ISegment

						'''<summary>Individual Relationship Code</summary>
						Property PAT01 As String
					End Interface
				End Namespace 'Loop2000C

				Namespace Loop2010CA

					'''<summary>Patient Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Patient Last Name</summary>
						Property NM103 As String
						'''<summary>Patient First Name</summary>
						Property NM104 As String
						'''<summary>Patient Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Patient Name Suffix</summary>
						Property NM107 As String
					End Interface
					'''<summary>Patient Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Patient Address Line</summary>
						Property N301 As String
						'''<summary>Patient Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Patient City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Patient City Name</summary>
						Property N401 As String
						'''<summary>Patient State Code</summary>
						Property N402 As String
						'''<summary>Patient Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Patient Demographic Information</summary>
					Public Interface DMG
						Inherits ISegment

						'''<summary>Date Time Period Format Qualifier</summary>
						Property DMG01 As String
						'''<summary>Patient Birth Date</summary>
						Property DMG02 As String
						'''<summary>Patient Gender Code</summary>
						Property DMG03 As String
					End Interface
					'''<summary>Property and Casualty Claim Number</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property Casualty Claim Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Property and Casualty Patient Identifier</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property and Casualty Patient Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010CA

				Namespace Loop2300

					'''<summary>Claim Information</summary>
					Public Interface CLM
						Inherits ISegment

						'''<summary>Patient Control Number</summary>
						Property CLM01 As String
						'''<summary>The Total Claim Charge Amount must be greater than or equal to zero.</summary>
						Property CLM02 As Decimal?
						'''<summary>CLM05 applies to all service lines unless it is over written at the line level.</summary>
						Property CLM05 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2300.CLM.CLM_05.C023
						'''<summary>Provider or Supplier Signature Indicator</summary>
						Property CLM06 As String
						'''<summary>Within this element the context of the word assignment is related to the relationship between the provider and the payer. This is NOT the field for reporting whether the patient has or has not assigned benefits to the provider. The benefit assignment indicator is in CLM08.</summary>
						Property CLM07 As String
						'''<summary>This element answers the question whether or not the insured has authorized the plan to remit payment directly to the provider.</summary>
						Property CLM08 As String
						'''<summary>The Release of Information response is limited to the information carried in this claim.</summary>
						Property CLM09 As String
						'''<summary></summary>
						Property CLM11 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2300.CLM.CLM_11.C024
						'''<summary>Special Program Indicator</summary>
						Property CLM12 As String
						'''<summary>Predetermination of Benefits Code</summary>
						Property CLM19 As String
						'''<summary>Delay Reason Code</summary>
						Property CLM20 As String
					End Interface
					'''<summary>Date - Accident</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Accident Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Appliance Placement</summary>
					Public Interface DTP_1
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Orthodontic Banding Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Service Date</summary>
					Public Interface DTP_2
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Service Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Repricer Received Date</summary>
					Public Interface DTP_3
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Repricer Received Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Orthodontic Total Months of Treatment</summary>
					Public Interface DN1
						Inherits ISegment

						'''<summary>Orthodontic Treatment Months Count</summary>
						Property DN101 As Decimal?
						'''<summary>Orthodontic Treatment Months Remaining Count</summary>
						Property DN102 As Decimal?
						'''<summary>Orthodontic Treatment Indicator</summary>
						Property DN104 As String
					End Interface
					'''<summary>Tooth Status</summary>
					Public Interface DN2
						Inherits ISegment

						'''<summary>Tooth Number</summary>
						Property DN201 As String
						'''<summary>Tooth Status Code</summary>
						Property DN202 As String
						'''<summary>Code List Qualifier Code</summary>
						Property DN206 As String
					End Interface
					'''<summary>Claim Supplemental Information</summary>
					Public Interface PWK
						Inherits ISegment

						'''<summary>Attachment Report Type Code</summary>
						Property PWK01 As String
						'''<summary>Attachment Transmission Code</summary>
						Property PWK02 As String
						'''<summary>Identification Code Qualifier</summary>
						Property PWK05 As String
						'''<summary>Attachment Control Number</summary>
						Property PWK06 As String
					End Interface
					'''<summary>Contract Information</summary>
					Public Interface CN1
						Inherits ISegment

						'''<summary>Contract Type Code</summary>
						Property CN101 As String
						'''<summary>Contract Amount</summary>
						Property CN102 As Decimal?
						'''<summary>Contract Percentage</summary>
						Property CN103 As Decimal?
						'''<summary>Contract Code</summary>
						Property CN104 As String
						'''<summary>Terms Discount Percentage</summary>
						Property CN105 As Decimal?
						'''<summary>Contract Version Identifier</summary>
						Property CN106 As String
					End Interface
					'''<summary>Patient Amount Paid</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Patient Amount Paid</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Predetermination Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Predetermination of Benefits Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Service Authorization Exception Code</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Allowable values for this element are:<br /><T>1<T>Immediate/Urgent Care<br /><T>2<T>Services Rendered in a Retroactive Period<br /><T>3<T>Emergency Care<br /><T>4<T>Client has Temporary Medicaid<br /><T>5<T>Request from County for Second Opinion to Determine<br /><T><T>if Recipient Can Work<br /><T>6<T>Request for Override Pending<br /><T>7<T>Special Handling</summary>
						Property REF02 As String
					End Interface
					'''<summary>Payer Claim Control Number</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Payer Claim Control Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Referral Number</summary>
					Public Interface REF_3
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referral Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Prior Authorization</summary>
					Public Interface REF_4
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Prior Authorization Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Repriced Claim Number</summary>
					Public Interface REF_5
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Repriced Claim Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Adjusted Repriced Claim Number</summary>
					Public Interface REF_6
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Adjusted Repriced Claim Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Claim Identifier For Transmission Intermediaries</summary>
					Public Interface REF_7
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The value carried in this element is limited to a maximum of 20 positions.</summary>
						Property REF02 As String
					End Interface
					'''<summary>File Information</summary>
					Public Interface K3
						Inherits ISegment

						'''<summary>Fixed Format Information</summary>
						Property K301 As String
					End Interface
					'''<summary>Claim Note</summary>
					Public Interface NTE
						Inherits ISegment

						'''<summary>Note Reference Code</summary>
						Property NTE01 As String
						'''<summary>Claim Note Text</summary>
						Property NTE02 As String
					End Interface
					'''<summary>Health Care Diagnosis Code</summary>
					Public Interface HI
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2300.HI.HI_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2300.HI.HI_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2300.HI.HI_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2300.HI.HI_04.C022
					End Interface
					'''<summary>Claim Pricing/Repricing Information</summary>
					Public Interface HCP
						Inherits ISegment

						'''<summary>Pricing Methodology</summary>
						Property HCP01 As String
						'''<summary>Repriced Allowed Amount</summary>
						Property HCP02 As Decimal?
						'''<summary>Repriced Saving Amount</summary>
						Property HCP03 As Decimal?
						'''<summary>Repricing Organization Identifier</summary>
						Property HCP04 As String
						'''<summary>Repricing Per Diem or Flat Rate Amount</summary>
						Property HCP05 As Decimal?
						'''<summary>Repriced Approved Ambulatory Patient Group Code</summary>
						Property HCP06 As String
						'''<summary>Reject Reason Code</summary>
						Property HCP13 As String
						'''<summary>Policy Compliance Code</summary>
						Property HCP14 As String
						'''<summary>Exception Code</summary>
						Property HCP15 As String
					End Interface
				End Namespace 'Loop2300

				Namespace Loop2310A

					'''<summary>Referring Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Referring Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Referring Provider First Name</summary>
						Property NM104 As String
						'''<summary>Referring Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Referring Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Referring Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Referring Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Referring Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referring Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310A

				Namespace Loop2310B

					'''<summary>Rendering Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Rendering Provider Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>Rendering Provider First Name</summary>
						Property NM104 As String
						'''<summary>Rendering Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Rendering Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Rendering Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Rendering Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310B

				Namespace Loop2310C

					'''<summary>Service Facility Location Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Laboratory or Facility Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Laboratory or Facility Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Service Facility Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Laboratory or Facility Address Line</summary>
						Property N301 As String
						'''<summary>Laboratory or Facility Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Laboratory or Facility City Name</summary>
						Property N401 As String
						'''<summary>Laboratory or Facility State or Province Code</summary>
						Property N402 As String
						'''<summary>Laboratory or Facility Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Service Facility Location Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Laboratory or Facility Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310C

				Namespace Loop2310D

					'''<summary>Assistant Surgeon Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Assistant Surgeon Last Name</summary>
						Property NM103 As String
						'''<summary>Assistant Surgeon First Name</summary>
						Property NM104 As String
						'''<summary>Assistant Surgeon Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Examples: I, II, III, IV, Jr, Sr<br />This data element is used only to indicate generation or patronymic.</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Assistant Surgeon Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Assistant Surgeon Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Assistant Surgeon Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Assistant Surgeon Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310D

				Namespace Loop2310E

					'''<summary>Supervising Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Supervising Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Supervising Provider First Name</summary>
						Property NM104 As String
						'''<summary>Supervising Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Supervising Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Supervising Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Supervising Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Supervising Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310E

				Namespace Loop2320

					'''<summary>Other Subscriber Information</summary>
					Public Interface SBR
						Inherits ISegment

						'''<summary>Payer Responsibility Sequence Number Code</summary>
						Property SBR01 As String
						'''<summary>Individual Relationship Code</summary>
						Property SBR02 As String
						'''<summary>This is not the number uniquely identifying the subscriber. The unique subscriber number is submitted in Loop 2330A-NM109 for this iteration of Loop ID-2320.</summary>
						Property SBR03 As String
						'''<summary>Other Insured Group Name</summary>
						Property SBR04 As String
						'''<summary>Insurance Type Code</summary>
						Property SBR05 As String
						'''<summary>Claim Filing Indicator Code</summary>
						Property SBR09 As String
					End Interface
					'''<summary>Claim Level Adjustments</summary>
					Public Interface CAS
						Inherits ISegment

						'''<summary>Claim Adjustment Group Code</summary>
						Property CAS01 As String
						'''<summary>Adjustment Reason Code</summary>
						Property CAS02 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS03 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS04 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS05 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS06 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS07 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS08 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS09 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS10 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS11 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS12 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS13 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS14 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS15 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS16 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS17 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS18 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS19 As Decimal?
					End Interface
					'''<summary>Coordination of Benefits (COB) Payer Paid Amount</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>It is acceptable to show <169>0<170> as the amount paid.</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Remaining Patient Liability</summary>
					Public Interface AMT_1
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Remaining Patient Liability</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Coordination of Benefits (COB) Total Non-Covered Amount</summary>
					Public Interface AMT_2
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Non-Covered Charge Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Other Insurance Coverage Information</summary>
					Public Interface OI
						Inherits ISegment

						'''<summary>Benefits Assignment Certification Indicator</summary>
						Property OI03 As String
						'''<summary>The Release of Information response is limited to the information carried in this claim.</summary>
						Property OI06 As String
					End Interface
					'''<summary>Outpatient Adjudication Information</summary>
					Public Interface MOA
						Inherits ISegment

						'''<summary>Reimbursement Rate</summary>
						Property MOA01 As Decimal?
						'''<summary>HCPCS Payable Amount</summary>
						Property MOA02 As Decimal?
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA03 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA04 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA05 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA06 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA07 As String
						'''<summary>Non-Payable Professional Component Billed Amount</summary>
						Property MOA09 As Decimal?
					End Interface
				End Namespace 'Loop2320

				Namespace Loop2330A

					'''<summary>Other Subscriber Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Other Insured Last Name</summary>
						Property NM103 As String
						'''<summary>Other Insured First Name</summary>
						Property NM104 As String
						'''<summary>Other Insured Middle Name</summary>
						Property NM105 As String
						'''<summary>Other Insured Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Other Insured Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Other Subscriber Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Other Insured Address Line</summary>
						Property N301 As String
						'''<summary>Other Insured Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Other Subscriber City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Other Insured City Name</summary>
						Property N401 As String
						'''<summary>Other Insured State Code</summary>
						Property N402 As String
						'''<summary>Other Insured Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Other Subscriber Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Insured Additional Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330A

				Namespace Loop2330B

					'''<summary>Other Payer Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Other Payer Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>When sending Line Adjudication Information for this payer, the identifier sent in SVD01 (Payer Identifier) of Loop ID-2430 (Line  Adjudication Information) must match this value.;</summary>
						Property NM109 As String
					End Interface
					'''<summary>Other Payer Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Other Payer Address Line</summary>
						Property N301 As String
						'''<summary>Other Payer Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Other Payer City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Other Payer City Name</summary>
						Property N401 As String
						'''<summary>Other Payer State Code</summary>
						Property N402 As String
						'''<summary>Other Payer Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Claim Check or Remittance Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Adjudication or Payment Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Other Payer Secondary Identifier</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Prior Authorization Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Prior Authorization Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Referral Number</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Referral Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Claim Adjustment Indicator</summary>
					Public Interface REF_3
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The only valid value for this element is `Y'.</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Predetermination Identification</summary>
					Public Interface REF_4
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Predetermination of Benefits Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Claim Control Number</summary>
					Public Interface REF_5
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer's Claim Control Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330B

				Namespace Loop2330C

					'''<summary>Other Payer Referring Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Referring Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Referring Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330C

				Namespace Loop2330D

					'''<summary>Other Payer Rendering Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330D

				Namespace Loop2330E

					'''<summary>Other Payer Supervising Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Supervising Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Supervising Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330E

				Namespace Loop2330F

					'''<summary>Other Payer Billing Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Billing Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Billing Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330F

				Namespace Loop2330G

					'''<summary>Other Payer Service Facility Location</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Service Facility Location Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Service Facility Location Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330G

				Namespace Loop2330H

					'''<summary>Other Payer Assistant Surgeon</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Assistant Surgeon Secondary Identifier</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Assistant Surgeon Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330H

				Namespace Loop2400

					'''<summary>Service Line Number</summary>
					Public Interface LX
						Inherits ISegment

						'''<summary>Assigned Number</summary>
						Property LX01 As Decimal?
					End Interface
					'''<summary>Dental Service</summary>
					Public Interface SV3
						Inherits ISegment

						'''<summary></summary>
						Property SV301 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2400.SV3.SV3_01.C003
						'''<summary>This is the total charge amount for this service line. The amount is inclusive of the provider's base charge and any applicable tax amounts reported within this line's AMT segments.</summary>
						Property SV302 As Decimal?
						'''<summary>Place of Service Code</summary>
						Property SV303 As String
						'''<summary></summary>
						Property SV304 As Dom.DataElements.Composite.C006
						'''<summary>Prosthesis, Crown, or Inlay Code</summary>
						Property SV305 As String
						'''<summary>Number of procedures</summary>
						Property SV306 As Decimal?
						'''<summary></summary>
						Property SV311 As Dom.DataElements.Composite.C004
					End Interface
					'''<summary>Tooth Information</summary>
					Public Interface TOO
						Inherits ISegment

						'''<summary>Code List Qualifier Code</summary>
						Property TOO01 As String
						'''<summary>See Appendix A for code source 135: American Dental Association Codes.</summary>
						Property TOO02 As String
						'''<summary></summary>
						Property TOO03 As Dom.DataElements.Composite.C005
					End Interface
					'''<summary>Date - Service Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Service Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Prior Placement</summary>
					Public Interface DTP_1
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Prior Placement Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Appliance Placement</summary>
					Public Interface DTP_2
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Orthodontic Banding Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Replacement</summary>
					Public Interface DTP_3
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Replacement Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Treatment Start</summary>
					Public Interface DTP_4
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Treatment Start Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Treatment Completion</summary>
					Public Interface DTP_5
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Treatment Completion Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Contract Information</summary>
					Public Interface CN1
						Inherits ISegment

						'''<summary>Contract Type Code</summary>
						Property CN101 As String
						'''<summary>Contract Amount</summary>
						Property CN102 As Decimal?
						'''<summary>Contract Percentage</summary>
						Property CN103 As Decimal?
						'''<summary>Contract Code</summary>
						Property CN104 As String
						'''<summary>Terms Discount Percentage</summary>
						Property CN105 As Decimal?
						'''<summary>Contract Version Identifier</summary>
						Property CN106 As String
					End Interface
					'''<summary>Service Predetermination Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Predetermination of Benefits Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2400.REF.REF_04.C040
					End Interface
					'''<summary>Prior Authorization</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Prior Authorization or Referral Number</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2400.REF_1.REF_1_04.C040
					End Interface
					'''<summary>Line Item Control Number</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The maximum number of characters to be supported for this field is `30'. A submitter may submit fewer characters depending upon their needs. However, the HIPAA maximum requirement to be supported by any receiving system is `30'. Characters beyond 30 are not required to be stored nor returned by any 837-receiving system.</summary>
						Property REF02 As String
					End Interface
					'''<summary>Repriced Claim Number</summary>
					Public Interface REF_3
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Repriced Claim Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Adjusted Repriced Claim Number</summary>
					Public Interface REF_4
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Adjusted Repriced Claim Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Referral Number</summary>
					Public Interface REF_5
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referral Number</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2400.REF_5.REF_5_04.C040
					End Interface
					'''<summary>Sales Tax Amount</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Sales Tax Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>File Information</summary>
					Public Interface K3
						Inherits ISegment

						'''<summary>Fixed Format Information</summary>
						Property K301 As String
					End Interface
					'''<summary>Line Pricing/Repricing Information</summary>
					Public Interface HCP
						Inherits ISegment

						'''<summary>Pricing Methodology</summary>
						Property HCP01 As String
						'''<summary>Repriced Allowed Amount</summary>
						Property HCP02 As Decimal?
						'''<summary>Repriced Saving Amount</summary>
						Property HCP03 As Decimal?
						'''<summary>Repricing Organization Identifier</summary>
						Property HCP04 As String
						'''<summary>Repricing Per Diem or Flat Rate Amount</summary>
						Property HCP05 As Decimal?
						'''<summary>Product or Service ID Qualifier</summary>
						Property HCP09 As String
						'''<summary>Repriced Approved HCPCS Code</summary>
						Property HCP10 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property HCP11 As String
						'''<summary>Repriced Approved Service Unit Count</summary>
						Property HCP12 As Decimal?
						'''<summary>Reject Reason Code</summary>
						Property HCP13 As String
						'''<summary>Policy Compliance Code</summary>
						Property HCP14 As String
						'''<summary>Exception Code</summary>
						Property HCP15 As String
					End Interface
				End Namespace 'Loop2400

				Namespace Loop2420A

					'''<summary>Rendering Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Rendering Provider Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>Rendering Provider First Name</summary>
						Property NM104 As String
						'''<summary>Rendering Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Rendering Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Rendering Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Rendering Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2420A.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420A

				Namespace Loop2420B

					'''<summary>Assistant Surgeon Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Assistant Surgeon Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>Assistant Surgeon First Name</summary>
						Property NM104 As String
						'''<summary>Assistant Surgeon Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Assistant Surgeon Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Assistant Surgeon Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Assistant Surgeon Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Assistant Surgeon Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Assistant Surgeon Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2420B.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420B

				Namespace Loop2420C

					'''<summary>Supervising Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Supervising Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Supervising Provider First Name</summary>
						Property NM104 As String
						'''<summary>Supervising Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Supervising Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Supervising Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Supervising Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Supervising Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2420C.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420C

				Namespace Loop2420D

					'''<summary>Service Facility Location Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Laboratory or Facility Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Laboratory or Facility Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Service Facility Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Laboratory or Facility Address Line</summary>
						Property N301 As String
						'''<summary>Laboratory or Facility Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Laboratory or Facility City Name</summary>
						Property N401 As String
						'''<summary>Laboratory or Facility State or Province Code</summary>
						Property N402 As String
						'''<summary>Laboratory or Facility Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Service Facility Location Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Service Facility Location Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2420D.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420D

				Namespace Loop2430

					'''<summary>Line Adjudication Information</summary>
					Public Interface SVD
						Inherits ISegment

						'''<summary>Other Payer Primary Identifier</summary>
						Property SVD01 As String
						'''<summary>Zero <169>0<170> is an acceptable value for this element.</summary>
						Property SVD02 As Decimal?
						'''<summary>This element contains the procedure code that was used to pay this service line.</summary>
						Property SVD03 As Dom.Transactions.Transaction837.Transaction837_Q2.Composites.Loop2430.SVD.SVD_03.C003
						'''<summary>This is the number of paid units from the remittance advice. When paid units are not present on the remittance advice, use the original billed units.</summary>
						Property SVD05 As Decimal?
						'''<summary>Bundled or Unbundled Line Number</summary>
						Property SVD06 As Decimal?
					End Interface
					'''<summary>Line Adjustment</summary>
					Public Interface CAS
						Inherits ISegment

						'''<summary>Claim Adjustment Group Code</summary>
						Property CAS01 As String
						'''<summary>Adjustment Reason Code</summary>
						Property CAS02 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS03 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS04 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS05 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS06 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS07 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS08 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS09 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS10 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS11 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS12 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS13 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS14 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS15 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS16 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS17 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS18 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS19 As Decimal?
					End Interface
					'''<summary>Line Check or Remittance Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Adjudication or Payment Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Remaining Patient Liability</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Remaining Patient Liability</summary>
						Property AMT02 As Decimal?
					End Interface
				End Namespace 'Loop2430

				'''<summary>Transaction Set Header</summary>
				Public Interface ST
					Inherits ISegment

					'''<summary>Transaction Set Identifier Code</summary>
					Property ST01 As String
					'''<summary>The Transaction Set Control Number in ST02 and SE02 must be identical. The number must be unique within a specific interchange (ISA-IEA), but can repeat in other interchanges.</summary>
					Property ST02 As String
					'''<summary>This element must be populated with the guide identifier named in Section 1.2.</summary>
					Property ST03 As String
				End Interface
				'''<summary>Beginning of Hierarchical Transaction</summary>
				Public Interface BHT
					Inherits ISegment

					'''<summary>Hierarchical Structure Code</summary>
					Property BHT01 As String
					'''<summary>BHT02 is intended to convey the electronic transmission status of the 837 batch contained in this ST-SE envelope. The terms "original" and "reissue" refer to the electronic transmission status of the 837 batch, not the billing status.</summary>
					Property BHT02 As String
					'''<summary>The inventory file number of the transmission assigned by the submitter's system. This number operates as a batch control number.</summary>
					Property BHT03 As String
					'''<summary>This is the date that the original submitter created the claim file from their business application system.</summary>
					Property BHT04 As Date?
					'''<summary>This is the time that the original submitter created the claim file from their business application system.</summary>
					Property BHT05 As Timespan?
					'''<summary>Claim or Encounter Identifier</summary>
					Property BHT06 As String
				End Interface
				'''<summary>Transaction Set Trailer</summary>
				Public Interface SE
					Inherits ISegment

					'''<summary>Transaction Segment Count</summary>
					Property SE01 As Decimal?
					'''<summary>The Transaction Set Control Number in ST02 and SE02 must be identical. The number must be unique within a specific interchange (ISA-IEA), but can repeat in other interchanges.</summary>
					Property SE02 As String
				End Interface
			End Namespace 'Segments

			Namespace Composites
				Namespace Loop2300.CLM.CLM_05
					'''<summary></summary>
					Public Interface C023
						'''<summary>Place of Service Code</summary>
						Property C023_01 As String
						'''<summary>Facility Code Qualifier</summary>
						Property C023_02 As String
						'''<summary>Claim Frequency Code</summary>
						Property C023_03 As String
					End Interface
				End Namespace
				Namespace Loop2300.CLM.CLM_11
					'''<summary></summary>
					Public Interface C024
						'''<summary>Related Causes Code</summary>
						Property C024_01 As String
						'''<summary>Related Causes Code</summary>
						Property C024_02 As String
						'''<summary>Auto Accident State or Province Code</summary>
						Property C024_04 As String
						'''<summary>Country Code</summary>
						Property C024_05 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Principal Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2400.SV3.SV3_01
					'''<summary></summary>
					Public Interface C003
						'''<summary>Product or Service ID Qualifier</summary>
						Property C003_01 As String
						'''<summary>Procedure Code</summary>
						Property C003_02 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_03 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_04 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_05 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_06 As String
						'''<summary>Procedure Code Description</summary>
						Property C003_07 As String
					End Interface
				End Namespace
				Namespace Loop2400.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2400.REF_1.REF_1_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2400.REF_5.REF_5_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420A.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420B.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420C.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420D.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2430.SVD.SVD_03
					'''<summary></summary>
					Public Interface C003
						'''<summary>Product or Service ID Qualifier</summary>
						Property C003_01 As String
						'''<summary>Procedure Code</summary>
						Property C003_02 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_03 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_04 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_05 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_06 As String
						'''<summary>Procedure Code Description</summary>
						Property C003_07 As String
					End Interface
				End Namespace
			End Namespace 'Composites

			Namespace Loops
				'''<summary>Submitter Name</summary>
				Public Interface Loop1000A
					Inherits ILoop


					'''<summary>Submitter Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000A.NM1

					'''<summary>Submitter EDI Contact Information</summary>
					ReadOnly Property PER As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000A.PER, Dom.Segments.PER)
				End Interface
				'''<summary>Receiver Name</summary>
				Public Interface Loop1000B
					Inherits ILoop


					'''<summary>Receiver Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop1000B.NM1
				End Interface
				'''<summary>Billing Provider Hierarchical Level</summary>
				Public Interface Loop2000A
					Inherits ILoop


					'''<summary>Billing Provider Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.HL

					'''<summary>Billing Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.PRV

					'''<summary>Foreign Currency Information</summary>
					Property CUR As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000A.CUR

					'''<summary>Billing Provider Name</summary>
					Property Loop2010AA As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AA

					'''<summary>Pay-to Address Name</summary>
					Property Loop2010AB As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AB

					'''<summary>Pay-To Plan Name</summary>
					Property Loop2010AC As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010AC
				End Interface
				'''<summary>Billing Provider Name</summary>
				Public Interface Loop2010AA
					Inherits ILoop


					'''<summary>Billing Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.NM1

					'''<summary>Billing Provider Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N3

					'''<summary>Billing Provider City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.N4

					'''<summary>Billing Provider Tax Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF

					'''<summary>Billing Provider UPIN/License Information</summary>
					ReadOnly Property REF_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.REF_1, Dom.Segments.REF)

					'''<summary>Billing Provider Contact Information</summary>
					ReadOnly Property PER As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AA.PER, Dom.Segments.PER)
				End Interface
				'''<summary>Pay-to Address Name</summary>
				Public Interface Loop2010AB
					Inherits ILoop


					'''<summary>Pay-to Address Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.NM1

					'''<summary>Pay-to Address - ADDRESS</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N3

					'''<summary>Pay-To Address City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AB.N4
				End Interface
				'''<summary>Pay-To Plan Name</summary>
				Public Interface Loop2010AC
					Inherits ILoop


					'''<summary>Pay-To Plan Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.NM1

					'''<summary>Pay-to Plan Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N3

					'''<summary>Pay-To Plan City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.N4

					'''<summary>Pay-to Plan Secondary Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF

					'''<summary>Pay-To Plan Tax Identification Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010AC.REF_1
				End Interface
				'''<summary>Subscriber Hierarchical Level</summary>
				Public Interface Loop2000B
					Inherits ILoop


					'''<summary>Subscriber Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000B.HL

					'''<summary>Subscriber Information</summary>
					Property SBR As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000B.SBR

					'''<summary>Subscriber Name</summary>
					Property Loop2010BA As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BA

					'''<summary>Payer Name</summary>
					Property Loop2010BB As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010BB

					'''<summary>Claim Information</summary>
					ReadOnly Property Loop2300 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)
				End Interface
				'''<summary>Subscriber Name</summary>
				Public Interface Loop2010BA
					Inherits ILoop


					'''<summary>Subscriber Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.NM1

					'''<summary>Subscriber Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N3

					'''<summary>Subscriber City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.N4

					'''<summary>Subscriber Demographic Information</summary>
					Property DMG As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.DMG

					'''<summary>Subscriber Secondary Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF

					'''<summary>Property and Casualty Claim Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BA.REF_1
				End Interface
				'''<summary>Payer Name</summary>
				Public Interface Loop2010BB
					Inherits ILoop


					'''<summary>Payer Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.NM1

					'''<summary>Payer Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N3

					'''<summary>Payer City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.N4

					'''<summary>Payer Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF, Dom.Segments.REF)

					'''<summary>Billing Provider Secondary Identification</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010BB.REF_1
				End Interface
				'''<summary>Patient Hierarchical Level</summary>
				Public Interface Loop2000C
					Inherits ILoop


					'''<summary>Patient Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000C.HL

					'''<summary>Patient Information</summary>
					Property PAT As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2000C.PAT

					'''<summary>Patient Name</summary>
					Property Loop2010CA As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2010CA
				End Interface
				'''<summary>Patient Name</summary>
				Public Interface Loop2010CA
					Inherits ILoop


					'''<summary>Patient Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.NM1

					'''<summary>Patient Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N3

					'''<summary>Patient City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.N4

					'''<summary>Patient Demographic Information</summary>
					Property DMG As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.DMG

					'''<summary>Property and Casualty Claim Number</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF

					'''<summary>Property and Casualty Patient Identifier</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2010CA.REF_1
				End Interface
				'''<summary>Claim Information</summary>
				Public Interface Loop2300
					Inherits ILoop


					'''<summary>Claim Information</summary>
					Property CLM As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.CLM

					'''<summary>Date - Accident</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP

					'''<summary>Date - Appliance Placement</summary>
					Property DTP_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_1

					'''<summary>Date - Service Date</summary>
					Property DTP_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_2

					'''<summary>Date - Repricer Received Date</summary>
					Property DTP_3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DTP_3

					'''<summary>Orthodontic Total Months of Treatment</summary>
					Property DN1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DN1

					'''<summary>Tooth Status</summary>
					ReadOnly Property DN2 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.DN2, Dom.Segments.DN2)

					'''<summary>Claim Supplemental Information</summary>
					ReadOnly Property PWK As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.PWK, Dom.Segments.PWK)

					'''<summary>Contract Information</summary>
					Property CN1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.CN1

					'''<summary>Patient Amount Paid</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.AMT

					'''<summary>Predetermination Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF

					'''<summary>Service Authorization Exception Code</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_1

					'''<summary>Payer Claim Control Number</summary>
					Property REF_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_2

					'''<summary>Referral Number</summary>
					Property REF_3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_3

					'''<summary>Prior Authorization</summary>
					Property REF_4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_4

					'''<summary>Repriced Claim Number</summary>
					Property REF_5 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_5

					'''<summary>Adjusted Repriced Claim Number</summary>
					Property REF_6 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_6

					'''<summary>Claim Identifier For Transmission Intermediaries</summary>
					Property REF_7 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.REF_7

					'''<summary>File Information</summary>
					ReadOnly Property K3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.K3, Dom.Segments.K3)

					'''<summary>Claim Note</summary>
					ReadOnly Property NTE As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.NTE, Dom.Segments.NTE)

					'''<summary>Health Care Diagnosis Code</summary>
					Property HI As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HI

					'''<summary>Claim Pricing/Repricing Information</summary>
					Property HCP As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2300.HCP

					'''<summary>Referring Provider Name</summary>
					ReadOnly Property Loop2310A As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310A, Dom.Transactions.Transaction837.Loops.Loop2310)

					'''<summary>Rendering Provider Name</summary>
					Property Loop2310B As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310B

					'''<summary>Service Facility Location Name</summary>
					Property Loop2310C As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310C

					'''<summary>Assistant Surgeon Name</summary>
					Property Loop2310D As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310D

					'''<summary>Supervising Provider Name</summary>
					Property Loop2310E As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2310E

					'''<summary>Other Subscriber Information</summary>
					ReadOnly Property Loop2320 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)

					'''<summary>Service Line Number</summary>
					ReadOnly Property Loop2400 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)
				End Interface
				'''<summary>Referring Provider Name</summary>
				Public Interface Loop2310A
					Inherits ILoop


					'''<summary>Referring Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.NM1

					'''<summary>Referring Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.PRV

					'''<summary>Referring Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310A.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Rendering Provider Name</summary>
				Public Interface Loop2310B
					Inherits ILoop


					'''<summary>Rendering Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.NM1

					'''<summary>Rendering Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.PRV

					'''<summary>Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310B.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Service Facility Location Name</summary>
				Public Interface Loop2310C
					Inherits ILoop


					'''<summary>Service Facility Location Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.NM1

					'''<summary>Service Facility Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N3

					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.N4

					'''<summary>Service Facility Location Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310C.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Assistant Surgeon Name</summary>
				Public Interface Loop2310D
					Inherits ILoop


					'''<summary>Assistant Surgeon Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.NM1

					'''<summary>Assistant Surgeon Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.PRV

					'''<summary>Assistant Surgeon Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Supervising Provider Name</summary>
				Public Interface Loop2310E
					Inherits ILoop


					'''<summary>Supervising Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310E.NM1

					'''<summary>Supervising Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2310E.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Subscriber Information</summary>
				Public Interface Loop2320
					Inherits ILoop


					'''<summary>Other Subscriber Information</summary>
					Property SBR As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.SBR

					'''<summary>Claim Level Adjustments</summary>
					ReadOnly Property CAS As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.CAS, Dom.Segments.CAS)

					'''<summary>Coordination of Benefits (COB) Payer Paid Amount</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT

					'''<summary>Remaining Patient Liability</summary>
					Property AMT_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_1

					'''<summary>Coordination of Benefits (COB) Total Non-Covered Amount</summary>
					Property AMT_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.AMT_2

					'''<summary>Outpatient Adjudication Information</summary>
					Property MOA As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2320.MOA

					'''<summary>Other Subscriber Name</summary>
					Property Loop2330A As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330A

					'''<summary>Other Payer Name</summary>
					Property Loop2330B As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330B

					'''<summary>Other Payer Referring Provider</summary>
					ReadOnly Property Loop2330C As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330C, Dom.Transactions.Transaction837.Loops.Loop2330)

					'''<summary>Other Payer Rendering Provider</summary>
					Property Loop2330D As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330D

					'''<summary>Other Payer Supervising Provider</summary>
					Property Loop2330E As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330E

					'''<summary>Other Payer Billing Provider</summary>
					Property Loop2330F As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330F

					'''<summary>Other Payer Service Facility Location</summary>
					Property Loop2330G As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330G

					'''<summary>Other Payer Assistant Surgeon</summary>
					Property Loop2330H As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2330H
				End Interface
				'''<summary>Other Subscriber Name</summary>
				Public Interface Loop2330A
					Inherits ILoop


					'''<summary>Other Subscriber Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.NM1

					'''<summary>Other Subscriber Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N3

					'''<summary>Other Subscriber City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.N4

					'''<summary>Other Subscriber Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330A.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Name</summary>
				Public Interface Loop2330B
					Inherits ILoop


					'''<summary>Other Payer Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.NM1

					'''<summary>Other Payer Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N3

					'''<summary>Other Payer City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.N4

					'''<summary>Claim Check or Remittance Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.DTP

					'''<summary>Other Payer Secondary Identifier</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF, Dom.Segments.REF)

					'''<summary>Other Payer Prior Authorization Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_1

					'''<summary>Other Payer Referral Number</summary>
					Property REF_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_2

					'''<summary>Other Payer Claim Adjustment Indicator</summary>
					Property REF_3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_3

					'''<summary>Other Payer Predetermination Identification</summary>
					Property REF_4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_4

					'''<summary>Other Payer Claim Control Number</summary>
					Property REF_5 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330B.REF_5
				End Interface
				'''<summary>Other Payer Referring Provider</summary>
				Public Interface Loop2330C
					Inherits ILoop


					'''<summary>Other Payer Referring Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330C.NM1

					'''<summary>Other Payer Referring Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330C.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Rendering Provider</summary>
				Public Interface Loop2330D
					Inherits ILoop


					'''<summary>Other Payer Rendering Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330D.NM1

					'''<summary>Other Payer Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Supervising Provider</summary>
				Public Interface Loop2330E
					Inherits ILoop


					'''<summary>Other Payer Supervising Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330E.NM1

					'''<summary>Other Payer Supervising Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330E.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Billing Provider</summary>
				Public Interface Loop2330F
					Inherits ILoop


					'''<summary>Other Payer Billing Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330F.NM1

					'''<summary>Other Payer Billing Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330F.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Service Facility Location</summary>
				Public Interface Loop2330G
					Inherits ILoop


					'''<summary>Other Payer Service Facility Location</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330G.NM1

					'''<summary>Other Payer Service Facility Location Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330G.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Assistant Surgeon</summary>
				Public Interface Loop2330H
					Inherits ILoop


					'''<summary>Other Payer Assistant Surgeon</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330H.NM1

					'''<summary>Other Payer Assistant Surgeon Secondary Identifier</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2330H.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Service Line Number</summary>
				Public Interface Loop2400
					Inherits ILoop


					'''<summary>Service Line Number</summary>
					Property LX As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.LX

					'''<summary>Dental Service</summary>
					Property SV3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.SV3

					'''<summary>Tooth Information</summary>
					ReadOnly Property TOO As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.TOO, Dom.Segments.TOO)

					'''<summary>Date - Service Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP

					'''<summary>Date - Prior Placement</summary>
					Property DTP_1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_1

					'''<summary>Date - Appliance Placement</summary>
					Property DTP_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_2

					'''<summary>Date - Replacement</summary>
					Property DTP_3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_3

					'''<summary>Date - Treatment Start</summary>
					Property DTP_4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_4

					'''<summary>Date - Treatment Completion</summary>
					Property DTP_5 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.DTP_5

					'''<summary>Contract Information</summary>
					Property CN1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.CN1

					'''<summary>Service Predetermination Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF, Dom.Segments.REF)

					'''<summary>Prior Authorization</summary>
					ReadOnly Property REF_1 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_1, Dom.Segments.REF)

					'''<summary>Line Item Control Number</summary>
					Property REF_2 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_2

					'''<summary>Repriced Claim Number</summary>
					Property REF_3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_3

					'''<summary>Adjusted Repriced Claim Number</summary>
					Property REF_4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_4

					'''<summary>Referral Number</summary>
					ReadOnly Property REF_5 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.REF_5, Dom.Segments.REF)

					'''<summary>Sales Tax Amount</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.AMT

					'''<summary>File Information</summary>
					ReadOnly Property K3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.K3, Dom.Segments.K3)

					'''<summary>Line Pricing/Repricing Information</summary>
					Property HCP As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2400.HCP

					'''<summary>Rendering Provider Name</summary>
					Property Loop2420A As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420A

					'''<summary>Assistant Surgeon Name</summary>
					Property Loop2420B As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420B

					'''<summary>Supervising Provider Name</summary>
					Property Loop2420C As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420C

					'''<summary>Service Facility Location Name</summary>
					Property Loop2420D As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2420D

					'''<summary>Line Adjudication Information</summary>
					ReadOnly Property Loop2430 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)
				End Interface
				'''<summary>Rendering Provider Name</summary>
				Public Interface Loop2420A
					Inherits ILoop


					'''<summary>Rendering Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.NM1

					'''<summary>Rendering Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.PRV

					'''<summary>Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420A.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Assistant Surgeon Name</summary>
				Public Interface Loop2420B
					Inherits ILoop


					'''<summary>Assistant Surgeon Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.NM1

					'''<summary>Assistant Surgeon Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.PRV

					'''<summary>Assistant Surgeon Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420B.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Supervising Provider Name</summary>
				Public Interface Loop2420C
					Inherits ILoop


					'''<summary>Supervising Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420C.NM1

					'''<summary>Supervising Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420C.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Service Facility Location Name</summary>
				Public Interface Loop2420D
					Inherits ILoop


					'''<summary>Service Facility Location Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.NM1

					'''<summary>Service Facility Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N3

					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.N4

					'''<summary>Service Facility Location Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2420D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Line Adjudication Information</summary>
				Public Interface Loop2430
					Inherits ILoop


					'''<summary>Line Adjudication Information</summary>
					Property SVD As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.SVD

					'''<summary>Line Adjustment</summary>
					ReadOnly Property CAS As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.CAS, Dom.Segments.CAS)

					'''<summary>Line Check or Remittance Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.DTP

					'''<summary>Remaining Patient Liability</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.Loop2430.AMT
				End Interface

			End Namespace 'Loops

			'''<summary>Health Care Claim - Dental</summary>
			'''<remarks>
			'''<para>This X12 Transaction Set contains the format and establishes the data contents of the Health Care Claim Transaction Set (837) for use within the context of an Electronic Data Interchange (EDI) environment. This transaction set can be used to submit health care claim billing information, encounter information, or both, from providers of health care services to payers, either directly or via intermediary billers and claims clearinghouses. It can also be used to transmit health care claims and billing payment information between payers with different payment responsibilities where coordination of benefits is required or between payers and regulatory agencies to monitor the rendering, billing, and/or payment of health care services within a specific health care/insurance industry segment.<br /><br />For purposes of this standard, providers of health care products or services may include entities such as physicians, hospitals and other medical facilities or suppliers, dentists, and pharmacies, and entities providing medical information to meet regulatory requirements. The payer refers to a third party entity that pays claims or administers the insurance product or benefit or both. For example, a payer may be an insurance company, health maintenance organization (HMO), preferred provider organization (PPO), government agency (Medicare, Medicaid, Civilian Health and Medical Program of the Uniformed Services (CHAMPUS), etc.) or an entity such as a third party administrator (TPA) or third party organization (TPO) that may be contracted by one of those groups. A regulatory agency is an entity responsible, by law or rule, for administering and monitoring a statutory benefits program or a specific health care/insurance industry segment.</para>
			'''</remarks>
			Public Interface TransactionSet

				'''<summary>Transaction Set Header</summary>
				Property ST As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.ST

				'''<summary>Beginning of Hierarchical Transaction</summary>
				Property BHT As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.BHT

				'''<summary>Submitter Name</summary>
				Property Loop1000A As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000A

				'''<summary>Receiver Name</summary>
				Property Loop1000B As Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop1000B

				'''<summary>Billing Provider Hierarchical Level</summary>
				ReadOnly Property Loop2000A As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Subscriber Hierarchical Level</summary>
				ReadOnly Property Loop2000B As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Patient Hierarchical Level</summary>
				ReadOnly Property Loop2000C As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q2.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Transaction Set Trailer</summary>
				Property SE As Dom.Transactions.Transaction837.Transaction837_Q2.Segments.SE
			End Interface
		End Namespace 'Transaction837_Q2

		Namespace Transaction837_Q3
			Namespace Segments

				Namespace Loop1000A

					'''<summary>Submitter Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Submitter Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>Submitter First Name</summary>
						Property NM104 As String
						'''<summary>Submitter Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Submitter Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Submitter EDI Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Submitter Contact Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER07 As String
						'''<summary>Communication Number</summary>
						Property PER08 As String
					End Interface
				End Namespace 'Loop1000A

				Namespace Loop1000B

					'''<summary>Receiver Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Receiver Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Receiver Primary Identifier</summary>
						Property NM109 As String
					End Interface
				End Namespace 'Loop1000B

				Namespace Loop2000A

					'''<summary>Billing Provider Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>Hierarchical Child Code</summary>
						Property HL04 As String
					End Interface
					'''<summary>Billing Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Foreign Currency Information</summary>
					Public Interface CUR
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property CUR01 As String
						'''<summary>The submitter must use the Currency Code, not the Country Code, for this element. For example the Currency Code CAD = Canadian dollars would be valid, while CA = Canada would be invalid.</summary>
						Property CUR02 As String
					End Interface
				End Namespace 'Loop2000A

				Namespace Loop2010AA

					'''<summary>Billing Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Billing Provider Organizational Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Billing Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Billing Provider Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Billing Provider Address Line</summary>
						Property N301 As String
						'''<summary>Billing Provider Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Billing Provider City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Billing Provider City Name</summary>
						Property N401 As String
						'''<summary>Billing Provider State or Province Code</summary>
						Property N402 As String
						'''<summary>Billing Provider Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Billing Provider Tax Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Billing Provider Tax Identification Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Billing Provider Contact Information</summary>
					Public Interface PER
						Inherits ISegment

						'''<summary>Contact Function Code</summary>
						Property PER01 As String
						'''<summary>Billing Provider Contact Name</summary>
						Property PER02 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER03 As String
						'''<summary>Communication Number</summary>
						Property PER04 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER05 As String
						'''<summary>Communication Number</summary>
						Property PER06 As String
						'''<summary>Communication Number Qualifier</summary>
						Property PER07 As String
						'''<summary>Communication Number</summary>
						Property PER08 As String
					End Interface
				End Namespace 'Loop2010AA

				Namespace Loop2010AB

					'''<summary>Pay-to Address Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Pay-to Address - ADDRESS</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Pay-To Address Line</summary>
						Property N301 As String
						'''<summary>Pay-To Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Pay-To Address City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Pay-to Address City Name</summary>
						Property N401 As String
						'''<summary>Pay-to Address State Code</summary>
						Property N402 As String
						'''<summary>Pay-to Address Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
				End Namespace 'Loop2010AB

				Namespace Loop2010AC

					'''<summary>Pay-To Plan Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Pay-To Plan Organizational Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>Pay-To Plan Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Pay-to Plan Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Pay-To Plan Address Line</summary>
						Property N301 As String
						'''<summary>Pay-To Plan Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Pay-To Plan City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Pay-To Plan City Name</summary>
						Property N401 As String
						'''<summary>Pay-To Plan State or Province Code</summary>
						Property N402 As String
						'''<summary>Pay-To Plan Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Pay-to Plan Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Pay-to Plan Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Pay-To Plan Tax Identification Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Pay-To Plan Tax Identification Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010AC

				Namespace Loop2000B

					'''<summary>Subscriber Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Parent ID Number</summary>
						Property HL02 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>The claim (Loop ID-2300) can be used when HL04 has no subordinate levels (HL04 = 0) or when HL04 has subordinate levels indicated (HL04 = 1).</summary>
						Property HL04 As String
					End Interface
					'''<summary>Subscriber Information</summary>
					Public Interface SBR
						Inherits ISegment

						'''<summary>Payer Responsibility Sequence Number Code</summary>
						Property SBR01 As String
						'''<summary>Individual Relationship Code</summary>
						Property SBR02 As String
						'''<summary>This is not the number uniquely identifying the subscriber. The unique  subscriber number is submitted in Loop ID-2010BA-NM109.</summary>
						Property SBR03 As String
						'''<summary>Subscriber Group Name</summary>
						Property SBR04 As String
						'''<summary>Claim Filing Indicator Code</summary>
						Property SBR09 As String
					End Interface
				End Namespace 'Loop2000B

				Namespace Loop2010BA

					'''<summary>Subscriber Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Subscriber Last Name</summary>
						Property NM103 As String
						'''<summary>Subscriber First Name</summary>
						Property NM104 As String
						'''<summary>Subscriber Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Subscriber Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Subscriber Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Subscriber Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Subscriber Address Line</summary>
						Property N301 As String
						'''<summary>Subscriber Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Subscriber City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Subscriber City Name</summary>
						Property N401 As String
						'''<summary>Subscriber State Code</summary>
						Property N402 As String
						'''<summary>Subscriber Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Subscriber Demographic Information</summary>
					Public Interface DMG
						Inherits ISegment

						'''<summary>Date Time Period Format Qualifier</summary>
						Property DMG01 As String
						'''<summary>Subscriber Birth Date</summary>
						Property DMG02 As String
						'''<summary>Subscriber Gender Code</summary>
						Property DMG03 As String
					End Interface
					'''<summary>Subscriber Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Subscriber Supplemental Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Property and Casualty Claim Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property Casualty Claim Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010BA

				Namespace Loop2010BB

					'''<summary>Payer Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Payer Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>Payer Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Payer Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Payer Address Line</summary>
						Property N301 As String
						'''<summary>Payer Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Payer City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Payer City Name</summary>
						Property N401 As String
						'''<summary>Payer State Code</summary>
						Property N402 As String
						'''<summary>Payer Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Payer Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Payer Additional Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Billing Provider Secondary Identification</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Billing Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010BB

				Namespace Loop2000C

					'''<summary>Patient Hierarchical Level</summary>
					Public Interface HL
						Inherits ISegment

						'''<summary>Hierarchical ID Number</summary>
						Property HL01 As String
						'''<summary>Hierarchical Parent ID Number</summary>
						Property HL02 As String
						'''<summary>Hierarchical Level Code</summary>
						Property HL03 As String
						'''<summary>Hierarchical Child Code</summary>
						Property HL04 As String
					End Interface
					'''<summary>Patient Information</summary>
					Public Interface PAT
						Inherits ISegment

						'''<summary>Individual Relationship Code</summary>
						Property PAT01 As String
					End Interface
				End Namespace 'Loop2000C

				Namespace Loop2010CA

					'''<summary>Patient Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Patient Last Name</summary>
						Property NM103 As String
						'''<summary>Patient First Name</summary>
						Property NM104 As String
						'''<summary>Patient Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Patient Name Suffix</summary>
						Property NM107 As String
					End Interface
					'''<summary>Patient Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Patient Address Line</summary>
						Property N301 As String
						'''<summary>Patient Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Patient City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Patient City Name</summary>
						Property N401 As String
						'''<summary>Patient State Code</summary>
						Property N402 As String
						'''<summary>Patient Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Patient Demographic Information</summary>
					Public Interface DMG
						Inherits ISegment

						'''<summary>Date Time Period Format Qualifier</summary>
						Property DMG01 As String
						'''<summary>Patient Birth Date</summary>
						Property DMG02 As String
						'''<summary>Patient Gender Code</summary>
						Property DMG03 As String
					End Interface
					'''<summary>Property and Casualty Claim Number</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property Casualty Claim Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Property and Casualty Patient Identifier</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Property and Casualty Patient Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2010CA

				Namespace Loop2300

					'''<summary>Claim Information</summary>
					Public Interface CLM
						Inherits ISegment

						'''<summary>Patient Control Number</summary>
						Property CLM01 As String
						'''<summary>The Total Claim Charge Amount must be greater than or equal to zero.</summary>
						Property CLM02 As Decimal?
						'''<summary></summary>
						Property CLM05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.CLM.CLM_05.C023
						'''<summary>Within this element the context of the word assignment is related to the relationship between the provider and the payer. This is NOT the field for reporting whether the patient has or has not assigned benefits to the provider. The benefit assignment indicator is in CLM08.</summary>
						Property CLM07 As String
						'''<summary>This element answers the question whether or not the insured has authorized the plan to remit payment directly to the provider.</summary>
						Property CLM08 As String
						'''<summary>The Release of Information response is limited to the information carried in this claim.</summary>
						Property CLM09 As String
						'''<summary>Delay Reason Code</summary>
						Property CLM20 As String
					End Interface
					'''<summary>Discharge Hour</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Discharge Time</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Statement Dates</summary>
					Public Interface DTP_1
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Statement From and To Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Admission Date/Hour</summary>
					Public Interface DTP_2
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Selection of the appropriate qualifier is designated by the NUBC Billing Manual.</summary>
						Property DTP02 As String
						'''<summary>Admission Date and Hour</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Date - Repricer Received Date</summary>
					Public Interface DTP_3
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Repricer Received Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Institutional Claim Code</summary>
					Public Interface CL1
						Inherits ISegment

						'''<summary>Admission Type Code</summary>
						Property CL101 As String
						'''<summary>Admission Source Code</summary>
						Property CL102 As String
						'''<summary>Patient Status Code</summary>
						Property CL103 As String
					End Interface
					'''<summary>Claim Supplemental Information</summary>
					Public Interface PWK
						Inherits ISegment

						'''<summary>Attachment Report Type Code</summary>
						Property PWK01 As String
						'''<summary>Attachment Transmission Code</summary>
						Property PWK02 As String
						'''<summary>Identification Code Qualifier</summary>
						Property PWK05 As String
						'''<summary>Attachment Control Number</summary>
						Property PWK06 As String
					End Interface
					'''<summary>Contract Information</summary>
					Public Interface CN1
						Inherits ISegment

						'''<summary>Contract Type Code</summary>
						Property CN101 As String
						'''<summary>Contract Amount</summary>
						Property CN102 As Decimal?
						'''<summary>Contract Percentage</summary>
						Property CN103 As Decimal?
						'''<summary>Contract Code</summary>
						Property CN104 As String
						'''<summary>Terms Discount Percentage</summary>
						Property CN105 As Decimal?
						'''<summary>Contract Version Identifier</summary>
						Property CN106 As String
					End Interface
					'''<summary>Patient Estimated Amount Due</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Patient Responsibility Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Service Authorization Exception Code</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Allowable values for this element are:<br /><T>1<T>Immediate/Urgent Care<br /><T>2<T>Services Rendered in a Retroactive Period<br /><T>3<T>Emergency Care<br /><T>4<T>Client has Temporary Medicaid<br /><T>5<T>Request from County for Second Opinion to Determine<br /><T><T>if Recipient Can Work<br /><T>6<T>Request for Override Pending<br /><T>7<T>Special Handling</summary>
						Property REF02 As String
					End Interface
					'''<summary>Referral Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referral Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Prior Authorization</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Prior Authorization Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Payer Claim Control Number</summary>
					Public Interface REF_3
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Payer Claim Control Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Repriced Claim Number</summary>
					Public Interface REF_4
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Repriced Claim Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Adjusted Repriced Claim Number</summary>
					Public Interface REF_5
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Adjusted Repriced Claim Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Investigational Device Exemption Number</summary>
					Public Interface REF_6
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Investigational Device Exemption Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Claim Identifier For Transmission Intermediaries</summary>
					Public Interface REF_7
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The value carried in this element is limited to a maximum of 20 positions.</summary>
						Property REF02 As String
					End Interface
					'''<summary>Auto Accident State</summary>
					Public Interface REF_8
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Values in this field must be valid codes found in code source 22.</summary>
						Property REF02 As String
					End Interface
					'''<summary>Medical Record Number</summary>
					Public Interface REF_9
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Medical Record Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Demonstration Project Identifier</summary>
					Public Interface REF_10
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Demonstration Project Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Peer Review Organization (PRO) Approval Number</summary>
					Public Interface REF_11
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Peer Review Authorization Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>File Information</summary>
					Public Interface K3
						Inherits ISegment

						'''<summary>Fixed Format Information</summary>
						Property K301 As String
					End Interface
					'''<summary>Claim Note</summary>
					Public Interface NTE
						Inherits ISegment

						'''<summary>Note Reference Code</summary>
						Property NTE01 As String
						'''<summary>Claim Note Text</summary>
						Property NTE02 As String
					End Interface
					'''<summary>Billing Note</summary>
					Public Interface NTE_1
						Inherits ISegment

						'''<summary>Note Reference Code</summary>
						Property NTE01 As String
						'''<summary>Billing Note Text</summary>
						Property NTE02 As String
					End Interface
					'''<summary>EPSDT Referral</summary>
					Public Interface CRC
						Inherits ISegment

						'''<summary>Code Qualifier</summary>
						Property CRC01 As String
						'''<summary>The response answers the question: Was an EPSDT referral given to the patient?</summary>
						Property CRC02 As String
						'''<summary>The codes for CRC03 also can be used for CRC04 through CRC05.</summary>
						Property CRC03 As String
						'''<summary>Use the codes listed in CRC03.</summary>
						Property CRC04 As String
						'''<summary>Use the codes listed in CRC03.</summary>
						Property CRC05 As String
					End Interface
					'''<summary>Principal Diagnosis</summary>
					Public Interface HI
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI.HI_01.C022
					End Interface
					'''<summary>Admitting Diagnosis</summary>
					Public Interface HI_1
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_1.HI_1_01.C022
					End Interface
					'''<summary>Patient's Reason For Visit</summary>
					Public Interface HI_2
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_2.HI_2_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_2.HI_2_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_2.HI_2_03.C022
					End Interface
					'''<summary>External Cause of Injury</summary>
					Public Interface HI_3
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_3.HI_3_12.C022
					End Interface
					'''<summary>Diagnosis Related Group (DRG) Information</summary>
					Public Interface HI_4
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_4.HI_4_01.C022
					End Interface
					'''<summary>Other Diagnosis Information</summary>
					Public Interface HI_5
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_5.HI_5_12.C022
					End Interface
					'''<summary>Principal Procedure Information</summary>
					Public Interface HI_6
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_6.HI_6_01.C022
					End Interface
					'''<summary>Other Procedure Information</summary>
					Public Interface HI_7
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_7.HI_7_12.C022
					End Interface
					'''<summary>Occurrence Span Information</summary>
					Public Interface HI_8
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_8.HI_8_12.C022
					End Interface
					'''<summary>Occurrence Information</summary>
					Public Interface HI_9
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_9.HI_9_12.C022
					End Interface
					'''<summary>Value Information</summary>
					Public Interface HI_10
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_10.HI_10_12.C022
					End Interface
					'''<summary>Condition Information</summary>
					Public Interface HI_11
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_11.HI_11_12.C022
					End Interface
					'''<summary>Treatment Code Information</summary>
					Public Interface HI_12
						Inherits ISegment

						'''<summary></summary>
						Property HI01 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_01.C022
						'''<summary></summary>
						Property HI02 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_02.C022
						'''<summary></summary>
						Property HI03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_03.C022
						'''<summary></summary>
						Property HI04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_04.C022
						'''<summary></summary>
						Property HI05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_05.C022
						'''<summary></summary>
						Property HI06 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_06.C022
						'''<summary></summary>
						Property HI07 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_07.C022
						'''<summary></summary>
						Property HI08 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_08.C022
						'''<summary></summary>
						Property HI09 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_09.C022
						'''<summary></summary>
						Property HI10 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_10.C022
						'''<summary></summary>
						Property HI11 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_11.C022
						'''<summary></summary>
						Property HI12 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2300.HI_12.HI_12_12.C022
					End Interface
					'''<summary>Claim Pricing/Repricing Information</summary>
					Public Interface HCP
						Inherits ISegment

						'''<summary>Pricing Methodology</summary>
						Property HCP01 As String
						'''<summary>Repriced Allowed Amount</summary>
						Property HCP02 As Decimal?
						'''<summary>Repriced Saving Amount</summary>
						Property HCP03 As Decimal?
						'''<summary>Repricing Organization Identifier</summary>
						Property HCP04 As String
						'''<summary>Repricing Per Diem or Flat Rate Amount</summary>
						Property HCP05 As Decimal?
						'''<summary>Repriced Approved DRG Code</summary>
						Property HCP06 As String
						'''<summary>This information is specific to the destination payer reported in Loop ID-2010BB.</summary>
						Property HCP07 As Decimal?
						'''<summary>This information is specific to the destination payer reported in Loop ID-2010BB.</summary>
						Property HCP08 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property HCP11 As String
						'''<summary>Repriced Approved Service Unit Count</summary>
						Property HCP12 As Decimal?
						'''<summary>Reject Reason Code</summary>
						Property HCP13 As String
						'''<summary>This information is specific to the destination payer reported in Loop ID-2010BB.</summary>
						Property HCP14 As String
						'''<summary>This information is specific to the destination payer reported in Loop ID-2010BB.</summary>
						Property HCP15 As String
					End Interface
				End Namespace 'Loop2300

				Namespace Loop2310A

					'''<summary>Attending Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Attending Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Attending Provider First Name</summary>
						Property NM104 As String
						'''<summary>Attending Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Attending Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Attending Provider Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Attending Provider Specialty Information</summary>
					Public Interface PRV
						Inherits ISegment

						'''<summary>Provider Code</summary>
						Property PRV01 As String
						'''<summary>Reference Identification Qualifier</summary>
						Property PRV02 As String
						'''<summary>Provider Taxonomy Code</summary>
						Property PRV03 As String
					End Interface
					'''<summary>Attending Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Attending Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310A

				Namespace Loop2310B

					'''<summary>Operating Physician Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Operating Physician Last Name</summary>
						Property NM103 As String
						'''<summary>Operating Physician First Name</summary>
						Property NM104 As String
						'''<summary>Operating Physician Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Operating Physician Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Operating Physician Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Operating Physician Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Operating Physician Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310B

				Namespace Loop2310C

					'''<summary>Other Operating Physician Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Other Operating Physician Last Name</summary>
						Property NM103 As String
						'''<summary>Other Operating Physician First Name</summary>
						Property NM104 As String
						'''<summary>Other Operating Physician Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Other Operating Physician Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Other Operating Physician Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Other Operating Physician Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310C

				Namespace Loop2310D

					'''<summary>Rendering Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Rendering Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Rendering Provider First Name</summary>
						Property NM104 As String
						'''<summary>Rendering Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Rendering Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Rendering Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310D

				Namespace Loop2310E

					'''<summary>Service Facility Location Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Laboratory or Facility Name</summary>
						Property NM103 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Laboratory or Facility Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Service Facility Location Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Laboratory or Facility Address Line</summary>
						Property N301 As String
						'''<summary>Laboratory or Facility Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Laboratory or Facility City Name</summary>
						Property N401 As String
						'''<summary>Laboratory or Facility State or Province Code</summary>
						Property N402 As String
						'''<summary>Laboratory or Facility Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Service Facility Location Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Laboratory or Facility Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310E

				Namespace Loop2310F

					'''<summary>Referring Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Referring Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Referring Provider First Name</summary>
						Property NM104 As String
						'''<summary>Referring Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Referring Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Referring Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Referring Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referring Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2310F

				Namespace Loop2320

					'''<summary>Other Subscriber Information</summary>
					Public Interface SBR
						Inherits ISegment

						'''<summary>Payer Responsibility Sequence Number Code</summary>
						Property SBR01 As String
						'''<summary>Individual Relationship Code</summary>
						Property SBR02 As String
						'''<summary>This is not the number uniquely identifying the subscriber. The unique subscriber number is submitted in Loop 2330A-NM109 for this iteration of Loop ID-2320.</summary>
						Property SBR03 As String
						'''<summary>Other Insured Group Name</summary>
						Property SBR04 As String
						'''<summary>Claim Filing Indicator Code</summary>
						Property SBR09 As String
					End Interface
					'''<summary>Claim Level Adjustments</summary>
					Public Interface CAS
						Inherits ISegment

						'''<summary>Claim Adjustment Group Code</summary>
						Property CAS01 As String
						'''<summary>See CODE SOURCE 139: Claim Adjustment Reason Code</summary>
						Property CAS02 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS03 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS04 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS05 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS06 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS07 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS08 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS09 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS10 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS11 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS12 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS13 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS14 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS15 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS16 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS17 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS18 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS19 As Decimal?
					End Interface
					'''<summary>Coordination of Benefits (COB) Payer Paid Amount</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>It is acceptable to show <169>0<170> as the amount paid.</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Remaining Patient Liability</summary>
					Public Interface AMT_1
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Remaining Patient Liability</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Coordination of Benefits (COB) Total Non-Covered Amount</summary>
					Public Interface AMT_2
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Non-Covered Charge Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Other Insurance Coverage Information</summary>
					Public Interface OI
						Inherits ISegment

						'''<summary>Benefits Assignment Certification Indicator</summary>
						Property OI03 As String
						'''<summary>This is a crosswalk from CLM09 when doing COB.</summary>
						Property OI06 As String
					End Interface
					'''<summary>Inpatient Adjudication Information</summary>
					Public Interface MIA
						Inherits ISegment

						'''<summary>Covered Days or Visits Count</summary>
						Property MIA01 As Decimal?
						'''<summary>Lifetime Psychiatric Days Count</summary>
						Property MIA03 As Decimal?
						'''<summary>Claim DRG Amount</summary>
						Property MIA04 As Decimal?
						'''<summary>Claim Payment Remark Code</summary>
						Property MIA05 As String
						'''<summary>Claim Disproportionate Share Amount</summary>
						Property MIA06 As Decimal?
						'''<summary>Claim MSP Pass-through Amount</summary>
						Property MIA07 As Decimal?
						'''<summary>Claim PPS Capital Amount</summary>
						Property MIA08 As Decimal?
						'''<summary>PPS-Capital FSP DRG Amount</summary>
						Property MIA09 As Decimal?
						'''<summary>PPS-Capital HSP DRG Amount</summary>
						Property MIA10 As Decimal?
						'''<summary>PPS-Capital DSH DRG Amount</summary>
						Property MIA11 As Decimal?
						'''<summary>Old Capital Amount</summary>
						Property MIA12 As Decimal?
						'''<summary>PPS-Capital IME amount</summary>
						Property MIA13 As Decimal?
						'''<summary>PPS-Operating Hospital Specific DRG Amount</summary>
						Property MIA14 As Decimal?
						'''<summary>Cost Report Day Count</summary>
						Property MIA15 As Decimal?
						'''<summary>PPS-Operating Federal Specific DRG Amount</summary>
						Property MIA16 As Decimal?
						'''<summary>Claim PPS Capital Outlier Amount</summary>
						Property MIA17 As Decimal?
						'''<summary>Claim Indirect Teaching Amount</summary>
						Property MIA18 As Decimal?
						'''<summary>Non-Payable Professional Component Billed Amount</summary>
						Property MIA19 As Decimal?
						'''<summary>Claim Payment Remark Code</summary>
						Property MIA20 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MIA21 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MIA22 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MIA23 As String
						'''<summary>PPS-Capital Exception Amount</summary>
						Property MIA24 As Decimal?
					End Interface
					'''<summary>Outpatient Adjudication Information</summary>
					Public Interface MOA
						Inherits ISegment

						'''<summary>Reimbursement Rate</summary>
						Property MOA01 As Decimal?
						'''<summary>HCPCS Payable Amount</summary>
						Property MOA02 As Decimal?
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA03 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA04 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA05 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA06 As String
						'''<summary>Claim Payment Remark Code</summary>
						Property MOA07 As String
						'''<summary>End Stage Renal Disease Payment Amount</summary>
						Property MOA08 As Decimal?
						'''<summary>Non-Payable Professional Component Billed Amount</summary>
						Property MOA09 As Decimal?
					End Interface
				End Namespace 'Loop2320

				Namespace Loop2330A

					'''<summary>Other Subscriber Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Other Insured Last Name</summary>
						Property NM103 As String
						'''<summary>Other Insured First Name</summary>
						Property NM104 As String
						'''<summary>Other Insured Middle Name</summary>
						Property NM105 As String
						'''<summary>Other Insured Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Other Insured Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Other Subscriber Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Other Insured Address Line</summary>
						Property N301 As String
						'''<summary>Other Insured Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Other Subscriber City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Other Insured City Name</summary>
						Property N401 As String
						'''<summary>Other Insured State Code</summary>
						Property N402 As String
						'''<summary>Other Insured Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Other Subscriber Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Insured Additional Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330A

				Namespace Loop2330B

					'''<summary>Other Payer Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Other Payer Last or Organization Name</summary>
						Property NM103 As String
						'''<summary>On or after the mandated implementation date for the HIPAA National Plan Identifier (National Plan ID), XV must be sent.<R><br />Prior to the mandated implementation date and prior to any phase-in period identified by Federal regulation, PI must be sent.<R><br />If a phase-in period is designated, PI must be sent unless:<br />1. Both the sender and receiver agree to use the National Plan ID, <br />2. The receiver has a National Plan ID, and<br />3. The sender has the capability to send the National Plan ID.<R><br />If all of the above conditions are true, XV must be sent. In this case the Payer Identification Number that would have been sent using qualifier PI can be sent in the corresponding REF segment using qualifier 2U.</summary>
						Property NM108 As String
						'''<summary>When sending Line Adjudication Information for this payer, the identifier sent in SVD01 (Payer Identifier) of Loop ID-2430 (Line  Adjudication Information) must match this value.;</summary>
						Property NM109 As String
					End Interface
					'''<summary>Other Payer Address</summary>
					Public Interface N3
						Inherits ISegment

						'''<summary>Other Payer Address Line</summary>
						Property N301 As String
						'''<summary>Other Payer Address Line</summary>
						Property N302 As String
					End Interface
					'''<summary>Other Payer City, State, ZIP Code</summary>
					Public Interface N4
						Inherits ISegment

						'''<summary>Other Payer City Name</summary>
						Property N401 As String
						'''<summary>Other Payer State Code</summary>
						Property N402 As String
						'''<summary>Other Payer Postal Zone or ZIP Code</summary>
						Property N403 As String
						'''<summary>Country Code</summary>
						Property N404 As String
						'''<summary>Country Subdivision Code</summary>
						Property N407 As String
					End Interface
					'''<summary>Claim Check or Remittance Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Adjudication or Payment Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Other Payer Secondary Identifier</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Secondary Identifier</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Prior Authorization Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Prior Authorization Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Referral Number</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Prior Authorization or Referral Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Claim Adjustment Indicator</summary>
					Public Interface REF_3
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Only allowed value is "Y".</summary>
						Property REF02 As String
					End Interface
					'''<summary>Other Payer Claim Control Number</summary>
					Public Interface REF_4
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer's Claim Control Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330B

				Namespace Loop2330C

					'''<summary>Other Payer Attending Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Attending Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Attending Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330C

				Namespace Loop2330D

					'''<summary>Other Payer Operating Physician</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Operating Physician Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Operating Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330D

				Namespace Loop2330E

					'''<summary>Other Payer Other Operating Physician</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Other Operating Physician Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Other Operating Physician Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330E

				Namespace Loop2330F

					'''<summary>Other Payer Service Facility Location</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Service Facility Location Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Service Facility Location Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330F

				Namespace Loop2330G

					'''<summary>Other Payer Rendering Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330G

				Namespace Loop2330H

					'''<summary>Other Payer Referring Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Referring Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Referring Provider Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330H

				Namespace Loop2330I

					'''<summary>Other Payer Billing Provider</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
					End Interface
					'''<summary>Other Payer Billing Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Payer Billing Provider Identifier</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2330I

				Namespace Loop2400

					'''<summary>Service Line Number</summary>
					Public Interface LX
						Inherits ISegment

						'''<summary>Assigned Number</summary>
						Property LX01 As Decimal?
					End Interface
					'''<summary>Institutional Service Line</summary>
					Public Interface SV2
						Inherits ISegment

						'''<summary>Service Line Revenue Code</summary>
						Property SV201 As String
						'''<summary></summary>
						Property SV202 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2400.SV2.SV2_02.C003
						'''<summary>This is the total charge amount for this service line. The amount is inclusive of the provider's base charge and any applicable tax amounts reported within this line's AMT segments.</summary>
						Property SV203 As Decimal?
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property SV204 As String
						'''<summary>The maximum length for this field is 8 digits excluding the decimal. When a decimal is used, the maximum number of digits allowed to the right of the decimal is three.</summary>
						Property SV205 As Decimal?
						'''<summary>Line Item Denied Charge or Non-Covered Charge Amount</summary>
						Property SV207 As Decimal?
					End Interface
					'''<summary>Line Supplemental Information</summary>
					Public Interface PWK
						Inherits ISegment

						'''<summary>Attachment Report Type Code</summary>
						Property PWK01 As String
						'''<summary>Attachment Transmission Code</summary>
						Property PWK02 As String
						'''<summary>Identification Code Qualifier</summary>
						Property PWK05 As String
						'''<summary>Attachment Control Number</summary>
						Property PWK06 As String
					End Interface
					'''<summary>Date - Service Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>RD8 is required only when the "To and From" dates are different. However, at the discretion of the submitter, RD8 can also be used when the "To and From" dates are the same.</summary>
						Property DTP02 As String
						'''<summary>Service Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Line Item Control Number</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>The maximum number of characters to be supported for this field is `30'. A submitter may submit fewer characters depending upon their needs. However, the HIPAA maximum requirement to be supported by any receiving system is `30'. Characters beyond 30 are not required to be stored nor returned by any 837-receiving system.</summary>
						Property REF02 As String
					End Interface
					'''<summary>Repriced Line Item Reference Number</summary>
					Public Interface REF_1
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Repriced Line Item Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Adjusted Repriced Line Item Reference Number</summary>
					Public Interface REF_2
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Adjusted Repriced Line Item Reference Number</summary>
						Property REF02 As String
					End Interface
					'''<summary>Service Tax Amount</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Service Tax Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Facility Tax Amount</summary>
					Public Interface AMT_1
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Facility Tax Amount</summary>
						Property AMT02 As Decimal?
					End Interface
					'''<summary>Third Party Organization Notes</summary>
					Public Interface NTE
						Inherits ISegment

						'''<summary>Note Reference Code</summary>
						Property NTE01 As String
						'''<summary>Line Note Text</summary>
						Property NTE02 As String
					End Interface
					'''<summary>Line Pricing/Repricing Information</summary>
					Public Interface HCP
						Inherits ISegment

						'''<summary>Pricing Methodology</summary>
						Property HCP01 As String
						'''<summary>Monetary Amount</summary>
						Property HCP02 As Decimal?
						'''<summary>This information is specific to the destination payer reported in Loop ID-2010BB.</summary>
						Property HCP03 As Decimal?
						'''<summary>Reference Identification</summary>
						Property HCP04 As String
						'''<summary>Rate</summary>
						Property HCP05 As Decimal?
						'''<summary>Reference Identification</summary>
						Property HCP06 As String
						'''<summary>Monetary Amount</summary>
						Property HCP07 As Decimal?
						'''<summary>Product or Service ID</summary>
						Property HCP08 As String
						'''<summary>Product or Service ID Qualifier</summary>
						Property HCP09 As String
						'''<summary>This information is specific to the destination payer reported in Loop ID-2010BB.</summary>
						Property HCP10 As String
						'''<summary>Unit or Basis for Measurement Code</summary>
						Property HCP11 As String
						'''<summary>Quantity</summary>
						Property HCP12 As Decimal?
						'''<summary>Reject Reason Code</summary>
						Property HCP13 As String
						'''<summary>Policy Compliance Code</summary>
						Property HCP14 As String
						'''<summary>Exception Code</summary>
						Property HCP15 As String
					End Interface
				End Namespace 'Loop2400

				Namespace Loop2410

					'''<summary>Drug Identification</summary>
					Public Interface LIN
						Inherits ISegment

						'''<summary>Product or Service ID Qualifier</summary>
						Property LIN02 As String
						'''<summary>National Drug Code</summary>
						Property LIN03 As String
					End Interface
					'''<summary>Drug Quantity</summary>
					Public Interface CTP
						Inherits ISegment

						'''<summary>National Drug Unit Count</summary>
						Property CTP04 As Decimal?
						'''<summary></summary>
						Property CTP05 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2410.CTP.CTP_05.C001
					End Interface
					'''<summary>Prescription or Compound Drug Association Number</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Prescription Number</summary>
						Property REF02 As String
					End Interface
				End Namespace 'Loop2410

				Namespace Loop2420A

					'''<summary>Operating Physician Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Operating Physician Last Name</summary>
						Property NM103 As String
						'''<summary>Operating Physician First Name</summary>
						Property NM104 As String
						'''<summary>Operating Physician Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Operating Physician Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Operating Physician Primary Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Operating Physician Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Operating Physician Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2420A.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420A

				Namespace Loop2420B

					'''<summary>Other Operating Physician Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Other Operating Physician Last Name</summary>
						Property NM103 As String
						'''<summary>Other Operating Physician First Name</summary>
						Property NM104 As String
						'''<summary>Other Operating Physician Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Other Operating Physician Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Other Operating Physician Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Other Operating Physician Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Other Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2420B.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420B

				Namespace Loop2420C

					'''<summary>Rendering Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Rendering Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Rendering Provider First Name</summary>
						Property NM104 As String
						'''<summary>Rendering Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Rendering Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Rendering Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Rendering Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Rendering Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2420C.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420C

				Namespace Loop2420D

					'''<summary>Referring Provider Name</summary>
					Public Interface NM1
						Inherits ISegment

						'''<summary>Entity Identifier Code</summary>
						Property NM101 As String
						'''<summary>Entity Type Qualifier</summary>
						Property NM102 As String
						'''<summary>Referring Provider Last Name</summary>
						Property NM103 As String
						'''<summary>Referring Provider First Name</summary>
						Property NM104 As String
						'''<summary>Referring Provider Middle Name or Initial</summary>
						Property NM105 As String
						'''<summary>Referring Provider Name Suffix</summary>
						Property NM107 As String
						'''<summary>Identification Code Qualifier</summary>
						Property NM108 As String
						'''<summary>Referring Provider Identifier</summary>
						Property NM109 As String
					End Interface
					'''<summary>Referring Provider Secondary Identification</summary>
					Public Interface REF
						Inherits ISegment

						'''<summary>Reference Identification Qualifier</summary>
						Property REF01 As String
						'''<summary>Referring Provider Secondary Identifier</summary>
						Property REF02 As String
						'''<summary></summary>
						Property REF04 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2420D.REF.REF_04.C040
					End Interface
				End Namespace 'Loop2420D

				Namespace Loop2430

					'''<summary>Line Adjudication Information</summary>
					Public Interface SVD
						Inherits ISegment

						'''<summary>Other Payer Primary Identifier</summary>
						Property SVD01 As String
						'''<summary>Zero <169>0<170> is an acceptable value for this element.</summary>
						Property SVD02 As Decimal?
						'''<summary></summary>
						Property SVD03 As Dom.Transactions.Transaction837.Transaction837_Q3.Composites.Loop2430.SVD.SVD_03.C003
						'''<summary>Service Line Revenue Code</summary>
						Property SVD04 As String
						'''<summary>This is the number of paid units from the remittance advice. When paid units are not present on the remittance advice, use the original billed units.</summary>
						Property SVD05 As Decimal?
						'''<summary>Bundled Line Number</summary>
						Property SVD06 As Decimal?
					End Interface
					'''<summary>Line Adjustment</summary>
					Public Interface CAS
						Inherits ISegment

						'''<summary>Claim Adjustment Group Code</summary>
						Property CAS01 As String
						'''<summary>Adjustment Reason Code</summary>
						Property CAS02 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS03 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS04 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS05 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS06 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS07 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS08 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS09 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS10 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS11 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS12 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS13 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS14 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS15 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS16 As Decimal?
						'''<summary>Adjustment Reason Code</summary>
						Property CAS17 As String
						'''<summary>Adjustment Amount</summary>
						Property CAS18 As Decimal?
						'''<summary>Adjustment Quantity</summary>
						Property CAS19 As Decimal?
					End Interface
					'''<summary>Line Check or Remittance Date</summary>
					Public Interface DTP
						Inherits ISegment

						'''<summary>Date Time Qualifier</summary>
						Property DTP01 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property DTP02 As String
						'''<summary>Adjudication or Payment Date</summary>
						Property DTP03 As String
					End Interface
					'''<summary>Remaining Patient Liability</summary>
					Public Interface AMT
						Inherits ISegment

						'''<summary>Amount Qualifier Code</summary>
						Property AMT01 As String
						'''<summary>Remaining Patient Liability</summary>
						Property AMT02 As Decimal?
					End Interface
				End Namespace 'Loop2430

				'''<summary>Transaction Set Header</summary>
				Public Interface ST
					Inherits ISegment

					'''<summary>Transaction Set Identifier Code</summary>
					Property ST01 As String
					'''<summary>The Transaction Set Control Number in ST02 and SE02 must be identical. The number must be unique within a specific interchange (ISA-IEA), but can repeat in other interchanges.</summary>
					Property ST02 As String
					'''<summary>This element must be populated with the guide identifier named in Section 1.2.</summary>
					Property ST03 As String
				End Interface
				'''<summary>Beginning of Hierarchical Transaction</summary>
				Public Interface BHT
					Inherits ISegment

					'''<summary>Hierarchical Structure Code</summary>
					Property BHT01 As String
					'''<summary>BHT02 is intended to convey the electronic transmission status of the 837 batch contained in this ST-SE envelope. The terms "original" and "reissue" refer to the electronic transmission status of the 837 batch, not the billing status.</summary>
					Property BHT02 As String
					'''<summary>The inventory file number of the transmission assigned by the submitter's system. This number operates as a batch control number.</summary>
					Property BHT03 As String
					'''<summary>This is the date that the original submitter created the claim file from their business application system.</summary>
					Property BHT04 As Date?
					'''<summary>This is the time that the original submitter created the claim file from their business application system.</summary>
					Property BHT05 As Timespan?
					'''<summary>Claim Identifier</summary>
					Property BHT06 As String
				End Interface
				'''<summary>Transaction Set Trailer</summary>
				Public Interface SE
					Inherits ISegment

					'''<summary>Transaction Segment Count</summary>
					Property SE01 As Decimal?
					'''<summary>The Transaction Set Control Number in ST02 and SE02 must be identical. The number must be unique within a specific interchange (ISA-IEA), but can repeat in other interchanges.</summary>
					Property SE02 As String
				End Interface
			End Namespace 'Segments

			Namespace Composites
				Namespace Loop2300.CLM.CLM_05
					'''<summary></summary>
					Public Interface C023
						'''<summary>Facility Type Code</summary>
						Property C023_01 As String
						'''<summary>Facility Code Qualifier</summary>
						Property C023_02 As String
						'''<summary>Claim Frequency Code</summary>
						Property C023_03 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI.HI_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Principal Diagnosis Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_1.HI_1_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Admitting Diagnosis Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Patient Reason For Visit</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Patient Reason For Visit</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_2.HI_2_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Patient Reason For Visit</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_3.HI_3_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>External Cause of Injury Code</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_4.HI_4_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Diagnosis Related Group (DRG) Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_5.HI_5_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Other Diagnosis</summary>
						Property C022_02 As String
						'''<summary>Present on Admission Indicator</summary>
						Property C022_09 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_6.HI_6_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Principal Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Principal Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_7.HI_7_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Procedure Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Procedure Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_8.HI_8_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Span Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Span Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_9.HI_9_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Occurrence Code</summary>
						Property C022_02 As String
						'''<summary>Date Time Period Format Qualifier</summary>
						Property C022_03 As String
						'''<summary>Occurrence Code Date</summary>
						Property C022_04 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_10.HI_10_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Value Code</summary>
						Property C022_02 As String
						'''<summary>Value Code Amount</summary>
						Property C022_05 As Decimal?
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_11.HI_11_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Condition Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_01
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_02
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_03
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_04
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_05
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_06
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_07
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_08
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_09
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_10
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_11
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2300.HI_12.HI_12_12
					'''<summary></summary>
					Public Interface C022
						'''<summary>Code List Qualifier Code</summary>
						Property C022_01 As String
						'''<summary>Treatment Code</summary>
						Property C022_02 As String
					End Interface
				End Namespace
				Namespace Loop2400.SV2.SV2_02
					'''<summary></summary>
					Public Interface C003
						'''<summary>Product or Service ID Qualifier</summary>
						Property C003_01 As String
						'''<summary>Procedure Code</summary>
						Property C003_02 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_03 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_04 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_05 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_06 As String
						'''<summary>Description</summary>
						Property C003_07 As String
					End Interface
				End Namespace
				Namespace Loop2410.CTP.CTP_05
					'''<summary></summary>
					Public Interface C001
						'''<summary>Code Qualifier</summary>
						Property C001_01 As String
					End Interface
				End Namespace
				Namespace Loop2420A.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420B.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420C.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2420D.REF.REF_04
					'''<summary></summary>
					Public Interface C040
						'''<summary>Reference Identification Qualifier</summary>
						Property C040_01 As String
						'''<summary>The payer identifier reported in this field must match the cooresponding payer identifier reported in Loop ID-2330B NM109.</summary>
						Property C040_02 As String
					End Interface
				End Namespace
				Namespace Loop2430.SVD.SVD_03
					'''<summary></summary>
					Public Interface C003
						'''<summary>Product or Service ID Qualifier</summary>
						Property C003_01 As String
						'''<summary>Procedure Code</summary>
						Property C003_02 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_03 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_04 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_05 As String
						'''<summary>Procedure Modifier</summary>
						Property C003_06 As String
						'''<summary>Procedure Code Description</summary>
						Property C003_07 As String
					End Interface
				End Namespace
			End Namespace 'Composites

			Namespace Loops
				'''<summary>Submitter Name</summary>
				Public Interface Loop1000A
					Inherits ILoop


					'''<summary>Submitter Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000A.NM1

					'''<summary>Submitter EDI Contact Information</summary>
					ReadOnly Property PER As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000A.PER, Dom.Segments.PER)
				End Interface
				'''<summary>Receiver Name</summary>
				Public Interface Loop1000B
					Inherits ILoop


					'''<summary>Receiver Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop1000B.NM1
				End Interface
				'''<summary>Billing Provider Hierarchical Level</summary>
				Public Interface Loop2000A
					Inherits ILoop


					'''<summary>Billing Provider Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.HL

					'''<summary>Billing Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.PRV

					'''<summary>Foreign Currency Information</summary>
					Property CUR As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000A.CUR

					'''<summary>Billing Provider Name</summary>
					Property Loop2010AA As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AA

					'''<summary>Pay-to Address Name</summary>
					Property Loop2010AB As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AB

					'''<summary>Pay-To Plan Name</summary>
					Property Loop2010AC As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010AC
				End Interface
				'''<summary>Billing Provider Name</summary>
				Public Interface Loop2010AA
					Inherits ILoop


					'''<summary>Billing Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.NM1

					'''<summary>Billing Provider Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N3

					'''<summary>Billing Provider City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.N4

					'''<summary>Billing Provider Tax Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.REF

					'''<summary>Billing Provider Contact Information</summary>
					ReadOnly Property PER As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AA.PER, Dom.Segments.PER)
				End Interface
				'''<summary>Pay-to Address Name</summary>
				Public Interface Loop2010AB
					Inherits ILoop


					'''<summary>Pay-to Address Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.NM1

					'''<summary>Pay-to Address - ADDRESS</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N3

					'''<summary>Pay-To Address City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AB.N4
				End Interface
				'''<summary>Pay-To Plan Name</summary>
				Public Interface Loop2010AC
					Inherits ILoop


					'''<summary>Pay-To Plan Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.NM1

					'''<summary>Pay-to Plan Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N3

					'''<summary>Pay-To Plan City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.N4

					'''<summary>Pay-to Plan Secondary Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF

					'''<summary>Pay-To Plan Tax Identification Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010AC.REF_1
				End Interface
				'''<summary>Subscriber Hierarchical Level</summary>
				Public Interface Loop2000B
					Inherits ILoop


					'''<summary>Subscriber Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000B.HL

					'''<summary>Subscriber Information</summary>
					Property SBR As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000B.SBR

					'''<summary>Subscriber Name</summary>
					Property Loop2010BA As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BA

					'''<summary>Payer Name</summary>
					Property Loop2010BB As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010BB

					'''<summary>Claim Information</summary>
					ReadOnly Property Loop2300 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2300, Dom.Transactions.Transaction837.Loops.Loop2300)
				End Interface
				'''<summary>Subscriber Name</summary>
				Public Interface Loop2010BA
					Inherits ILoop


					'''<summary>Subscriber Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.NM1

					'''<summary>Subscriber Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N3

					'''<summary>Subscriber City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.N4

					'''<summary>Subscriber Demographic Information</summary>
					Property DMG As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.DMG

					'''<summary>Subscriber Secondary Identification</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF

					'''<summary>Property and Casualty Claim Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BA.REF_1
				End Interface
				'''<summary>Payer Name</summary>
				Public Interface Loop2010BB
					Inherits ILoop


					'''<summary>Payer Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.NM1

					'''<summary>Payer Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N3

					'''<summary>Payer City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.N4

					'''<summary>Payer Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF, Dom.Segments.REF)

					'''<summary>Billing Provider Secondary Identification</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010BB.REF_1
				End Interface
				'''<summary>Patient Hierarchical Level</summary>
				Public Interface Loop2000C
					Inherits ILoop


					'''<summary>Patient Hierarchical Level</summary>
					Property HL As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000C.HL

					'''<summary>Patient Information</summary>
					Property PAT As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2000C.PAT

					'''<summary>Patient Name</summary>
					Property Loop2010CA As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2010CA
				End Interface
				'''<summary>Patient Name</summary>
				Public Interface Loop2010CA
					Inherits ILoop


					'''<summary>Patient Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.NM1

					'''<summary>Patient Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N3

					'''<summary>Patient City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.N4

					'''<summary>Patient Demographic Information</summary>
					Property DMG As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.DMG

					'''<summary>Property and Casualty Claim Number</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF

					'''<summary>Property and Casualty Patient Identifier</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2010CA.REF_1
				End Interface
				'''<summary>Claim Information</summary>
				Public Interface Loop2300
					Inherits ILoop


					'''<summary>Claim Information</summary>
					Property CLM As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CLM

					'''<summary>Discharge Hour</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP

					'''<summary>Statement Dates</summary>
					Property DTP_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_1

					'''<summary>Admission Date/Hour</summary>
					Property DTP_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_2

					'''<summary>Date - Repricer Received Date</summary>
					Property DTP_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.DTP_3

					'''<summary>Institutional Claim Code</summary>
					Property CL1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CL1

					'''<summary>Claim Supplemental Information</summary>
					ReadOnly Property PWK As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.PWK, Dom.Segments.PWK)

					'''<summary>Contract Information</summary>
					Property CN1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CN1

					'''<summary>Patient Estimated Amount Due</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.AMT

					'''<summary>Service Authorization Exception Code</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF

					'''<summary>Referral Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_1

					'''<summary>Prior Authorization</summary>
					Property REF_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_2

					'''<summary>Payer Claim Control Number</summary>
					Property REF_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_3

					'''<summary>Repriced Claim Number</summary>
					Property REF_4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_4

					'''<summary>Adjusted Repriced Claim Number</summary>
					Property REF_5 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_5

					'''<summary>Investigational Device Exemption Number</summary>
					ReadOnly Property REF_6 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_6, Dom.Segments.REF)

					'''<summary>Claim Identifier For Transmission Intermediaries</summary>
					Property REF_7 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_7

					'''<summary>Auto Accident State</summary>
					Property REF_8 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_8

					'''<summary>Medical Record Number</summary>
					Property REF_9 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_9

					'''<summary>Demonstration Project Identifier</summary>
					Property REF_10 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_10

					'''<summary>Peer Review Organization (PRO) Approval Number</summary>
					Property REF_11 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.REF_11

					'''<summary>File Information</summary>
					ReadOnly Property K3 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.K3, Dom.Segments.K3)

					'''<summary>Claim Note</summary>
					ReadOnly Property NTE As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE, Dom.Segments.NTE)

					'''<summary>Billing Note</summary>
					Property NTE_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.NTE_1

					'''<summary>EPSDT Referral</summary>
					Property CRC As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.CRC

					'''<summary>Principal Diagnosis</summary>
					Property HI As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI

					'''<summary>Admitting Diagnosis</summary>
					Property HI_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_1

					'''<summary>Patient's Reason For Visit</summary>
					Property HI_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_2

					'''<summary>External Cause of Injury</summary>
					Property HI_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_3

					'''<summary>Diagnosis Related Group (DRG) Information</summary>
					Property HI_4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_4

					'''<summary>Other Diagnosis Information</summary>
					ReadOnly Property HI_5 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_5, Dom.Segments.HI)

					'''<summary>Principal Procedure Information</summary>
					Property HI_6 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_6

					'''<summary>Other Procedure Information</summary>
					ReadOnly Property HI_7 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_7, Dom.Segments.HI)

					'''<summary>Occurrence Span Information</summary>
					ReadOnly Property HI_8 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_8, Dom.Segments.HI)

					'''<summary>Occurrence Information</summary>
					ReadOnly Property HI_9 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_9, Dom.Segments.HI)

					'''<summary>Value Information</summary>
					ReadOnly Property HI_10 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_10, Dom.Segments.HI)

					'''<summary>Condition Information</summary>
					ReadOnly Property HI_11 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_11, Dom.Segments.HI)

					'''<summary>Treatment Code Information</summary>
					ReadOnly Property HI_12 As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HI_12, Dom.Segments.HI)

					'''<summary>Claim Pricing/Repricing Information</summary>
					Property HCP As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2300.HCP

					'''<summary>Attending Provider Name</summary>
					Property Loop2310A As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310A

					'''<summary>Operating Physician Name</summary>
					Property Loop2310B As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310B

					'''<summary>Other Operating Physician Name</summary>
					Property Loop2310C As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310C

					'''<summary>Rendering Provider Name</summary>
					Property Loop2310D As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310D

					'''<summary>Service Facility Location Name</summary>
					Property Loop2310E As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310E

					'''<summary>Referring Provider Name</summary>
					Property Loop2310F As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2310F

					'''<summary>Other Subscriber Information</summary>
					ReadOnly Property Loop2320 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2320, Dom.Transactions.Transaction837.Loops.Loop2320)

					'''<summary>Service Line Number</summary>
					ReadOnly Property Loop2400 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2400, Dom.Transactions.Transaction837.Loops.Loop2400)
				End Interface
				'''<summary>Attending Provider Name</summary>
				Public Interface Loop2310A
					Inherits ILoop


					'''<summary>Attending Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.NM1

					'''<summary>Attending Provider Specialty Information</summary>
					Property PRV As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.PRV

					'''<summary>Attending Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310A.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Operating Physician Name</summary>
				Public Interface Loop2310B
					Inherits ILoop


					'''<summary>Operating Physician Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310B.NM1

					'''<summary>Operating Physician Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310B.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Operating Physician Name</summary>
				Public Interface Loop2310C
					Inherits ILoop


					'''<summary>Other Operating Physician Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310C.NM1

					'''<summary>Other Operating Physician Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310C.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Rendering Provider Name</summary>
				Public Interface Loop2310D
					Inherits ILoop


					'''<summary>Rendering Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310D.NM1

					'''<summary>Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Service Facility Location Name</summary>
				Public Interface Loop2310E
					Inherits ILoop


					'''<summary>Service Facility Location Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.NM1

					'''<summary>Service Facility Location Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N3

					'''<summary>Service Facility Location City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.N4

					'''<summary>Service Facility Location Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310E.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Referring Provider Name</summary>
				Public Interface Loop2310F
					Inherits ILoop


					'''<summary>Referring Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310F.NM1

					'''<summary>Referring Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2310F.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Subscriber Information</summary>
				Public Interface Loop2320
					Inherits ILoop


					'''<summary>Other Subscriber Information</summary>
					Property SBR As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.SBR

					'''<summary>Claim Level Adjustments</summary>
					ReadOnly Property CAS As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.CAS, Dom.Segments.CAS)

					'''<summary>Coordination of Benefits (COB) Payer Paid Amount</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT

					'''<summary>Remaining Patient Liability</summary>
					Property AMT_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_1

					'''<summary>Coordination of Benefits (COB) Total Non-Covered Amount</summary>
					Property AMT_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.AMT_2

					'''<summary>Inpatient Adjudication Information</summary>
					Property MIA As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.MIA

					'''<summary>Outpatient Adjudication Information</summary>
					Property MOA As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2320.MOA

					'''<summary>Other Subscriber Name</summary>
					Property Loop2330A As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330A

					'''<summary>Other Payer Name</summary>
					Property Loop2330B As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330B

					'''<summary>Other Payer Attending Provider</summary>
					Property Loop2330C As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330C

					'''<summary>Other Payer Operating Physician</summary>
					Property Loop2330D As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330D

					'''<summary>Other Payer Other Operating Physician</summary>
					Property Loop2330E As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330E

					'''<summary>Other Payer Service Facility Location</summary>
					Property Loop2330F As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330F

					'''<summary>Other Payer Rendering Provider Name</summary>
					Property Loop2330G As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330G

					'''<summary>Other Payer Referring Provider</summary>
					Property Loop2330H As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330H

					'''<summary>Other Payer Billing Provider</summary>
					Property Loop2330I As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2330I
				End Interface
				'''<summary>Other Subscriber Name</summary>
				Public Interface Loop2330A
					Inherits ILoop


					'''<summary>Other Subscriber Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.NM1

					'''<summary>Other Subscriber Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N3

					'''<summary>Other Subscriber City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.N4

					'''<summary>Other Subscriber Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330A.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Name</summary>
				Public Interface Loop2330B
					Inherits ILoop


					'''<summary>Other Payer Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.NM1

					'''<summary>Other Payer Address</summary>
					Property N3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N3

					'''<summary>Other Payer City, State, ZIP Code</summary>
					Property N4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.N4

					'''<summary>Claim Check or Remittance Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.DTP

					'''<summary>Other Payer Secondary Identifier</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF, Dom.Segments.REF)

					'''<summary>Other Payer Prior Authorization Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_1

					'''<summary>Other Payer Referral Number</summary>
					Property REF_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_2

					'''<summary>Other Payer Claim Adjustment Indicator</summary>
					Property REF_3 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_3

					'''<summary>Other Payer Claim Control Number</summary>
					Property REF_4 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330B.REF_4
				End Interface
				'''<summary>Other Payer Attending Provider</summary>
				Public Interface Loop2330C
					Inherits ILoop


					'''<summary>Other Payer Attending Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330C.NM1

					'''<summary>Other Payer Attending Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330C.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Operating Physician</summary>
				Public Interface Loop2330D
					Inherits ILoop


					'''<summary>Other Payer Operating Physician</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330D.NM1

					'''<summary>Other Payer Operating Physician Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Other Operating Physician</summary>
				Public Interface Loop2330E
					Inherits ILoop


					'''<summary>Other Payer Other Operating Physician</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330E.NM1

					'''<summary>Other Payer Other Operating Physician Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330E.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Service Facility Location</summary>
				Public Interface Loop2330F
					Inherits ILoop


					'''<summary>Other Payer Service Facility Location</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330F.NM1

					'''<summary>Other Payer Service Facility Location Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330F.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Rendering Provider Name</summary>
				Public Interface Loop2330G
					Inherits ILoop


					'''<summary>Other Payer Rendering Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330G.NM1

					'''<summary>Other Payer Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330G.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Referring Provider</summary>
				Public Interface Loop2330H
					Inherits ILoop


					'''<summary>Other Payer Referring Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330H.NM1

					'''<summary>Other Payer Referring Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330H.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Payer Billing Provider</summary>
				Public Interface Loop2330I
					Inherits ILoop


					'''<summary>Other Payer Billing Provider</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330I.NM1

					'''<summary>Other Payer Billing Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2330I.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Service Line Number</summary>
				Public Interface Loop2400
					Inherits ILoop


					'''<summary>Service Line Number</summary>
					Property LX As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.LX

					'''<summary>Institutional Service Line</summary>
					Property SV2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.SV2

					'''<summary>Line Supplemental Information</summary>
					ReadOnly Property PWK As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.PWK, Dom.Segments.PWK)

					'''<summary>Date - Service Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.DTP

					'''<summary>Line Item Control Number</summary>
					Property REF As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF

					'''<summary>Repriced Line Item Reference Number</summary>
					Property REF_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_1

					'''<summary>Adjusted Repriced Line Item Reference Number</summary>
					Property REF_2 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.REF_2

					'''<summary>Service Tax Amount</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT

					'''<summary>Facility Tax Amount</summary>
					Property AMT_1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.AMT_1

					'''<summary>Third Party Organization Notes</summary>
					Property NTE As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.NTE

					'''<summary>Line Pricing/Repricing Information</summary>
					Property HCP As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2400.HCP

					'''<summary>Operating Physician Name</summary>
					Property Loop2420A As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420A

					'''<summary>Other Operating Physician Name</summary>
					Property Loop2420B As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420B

					'''<summary>Rendering Provider Name</summary>
					Property Loop2420C As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420C

					'''<summary>Referring Provider Name</summary>
					Property Loop2420D As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2420D

					'''<summary>Line Adjudication Information</summary>
					ReadOnly Property Loop2430 As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2430, Dom.Transactions.Transaction837.Loops.Loop2430)
				End Interface
				'''<summary>Operating Physician Name</summary>
				Public Interface Loop2420A
					Inherits ILoop


					'''<summary>Operating Physician Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420A.NM1

					'''<summary>Operating Physician Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420A.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Other Operating Physician Name</summary>
				Public Interface Loop2420B
					Inherits ILoop


					'''<summary>Other Operating Physician Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420B.NM1

					'''<summary>Other Operating Physician Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420B.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Rendering Provider Name</summary>
				Public Interface Loop2420C
					Inherits ILoop


					'''<summary>Rendering Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420C.NM1

					'''<summary>Rendering Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420C.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Referring Provider Name</summary>
				Public Interface Loop2420D
					Inherits ILoop


					'''<summary>Referring Provider Name</summary>
					Property NM1 As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420D.NM1

					'''<summary>Referring Provider Secondary Identification</summary>
					ReadOnly Property REF As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2420D.REF, Dom.Segments.REF)
				End Interface
				'''<summary>Line Adjudication Information</summary>
				Public Interface Loop2430
					Inherits ILoop


					'''<summary>Line Adjudication Information</summary>
					Property SVD As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.SVD

					'''<summary>Line Adjustment</summary>
					ReadOnly Property CAS As SegmentSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.CAS, Dom.Segments.CAS)

					'''<summary>Line Check or Remittance Date</summary>
					Property DTP As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.DTP

					'''<summary>Remaining Patient Liability</summary>
					Property AMT As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.Loop2430.AMT
				End Interface

			End Namespace 'Loops

			'''<summary>Health Care Claim - Institutional</summary>
			'''<remarks>
			'''<para>This X12 Transaction Set contains the format and establishes the data contents of the Health Care Claim Transaction Set (837) for use within the context of an Electronic Data Interchange (EDI) environment. This transaction set can be used to submit health care claim billing information, encounter information, or both, from providers of health care services to payers, either directly or via intermediary billers and claims clearinghouses. It can also be used to transmit health care claims and billing payment information between payers with different payment responsibilities where coordination of benefits is required or between payers and regulatory agencies to monitor the rendering, billing, and/or payment of health care services within a specific health care/insurance industry segment.<br /><br />For purposes of this standard, providers of health care products or services may include entities such as physicians, hospitals and other medical facilities or suppliers, dentists, and pharmacies, and entities providing medical information to meet regulatory requirements. The payer refers to a third party entity that pays claims or administers the insurance product or benefit or both. For example, a payer may be an insurance company, health maintenance organization (HMO), preferred provider organization (PPO), government agency (Medicare, Medicaid, Civilian Health and Medical Program of the Uniformed Services (CHAMPUS), etc.) or an entity such as a third party administrator (TPA) or third party organization (TPO) that may be contracted by one of those groups. A regulatory agency is an entity responsible, by law or rule, for administering and monitoring a statutory benefits program or a specific health care/insurance industry segment.</para>
			'''</remarks>
			Public Interface TransactionSet

				'''<summary>Transaction Set Header</summary>
				Property ST As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.ST

				'''<summary>Beginning of Hierarchical Transaction</summary>
				Property BHT As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.BHT

				'''<summary>Submitter Name</summary>
				Property Loop1000A As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000A

				'''<summary>Receiver Name</summary>
				Property Loop1000B As Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop1000B

				'''<summary>Billing Provider Hierarchical Level</summary>
				ReadOnly Property Loop2000A As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000A, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Subscriber Hierarchical Level</summary>
				ReadOnly Property Loop2000B As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000B, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Patient Hierarchical Level</summary>
				ReadOnly Property Loop2000C As LoopSubsetContainer(Of Dom.Transactions.Transaction837.Transaction837_Q3.Loops.Loop2000C, Dom.Transactions.Transaction837.Loops.Loop2000)

				'''<summary>Transaction Set Trailer</summary>
				Property SE As Dom.Transactions.Transaction837.Transaction837_Q3.Segments.SE
			End Interface
		End Namespace 'Transaction837_Q3
	End Namespace 'Transaction837
End Namespace 'Transaction837
